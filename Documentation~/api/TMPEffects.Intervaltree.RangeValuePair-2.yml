### YamlMime:ManagedReference
items:
- uid: TMPEffects.Intervaltree.RangeValuePair`2
  commentId: T:TMPEffects.Intervaltree.RangeValuePair`2
  id: RangeValuePair`2
  parent: TMPEffects.Intervaltree
  children:
  - TMPEffects.Intervaltree.RangeValuePair`2.#ctor(`0,`0,`1)
  - TMPEffects.Intervaltree.RangeValuePair`2.Equals(System.Object)
  - TMPEffects.Intervaltree.RangeValuePair`2.Equals(TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  - TMPEffects.Intervaltree.RangeValuePair`2.From
  - TMPEffects.Intervaltree.RangeValuePair`2.GetHashCode
  - TMPEffects.Intervaltree.RangeValuePair`2.To
  - TMPEffects.Intervaltree.RangeValuePair`2.ToString
  - TMPEffects.Intervaltree.RangeValuePair`2.Value
  - TMPEffects.Intervaltree.RangeValuePair`2.op_Equality(TMPEffects.Intervaltree.RangeValuePair{`0,`1},TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  - TMPEffects.Intervaltree.RangeValuePair`2.op_Inequality(TMPEffects.Intervaltree.RangeValuePair{`0,`1},TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  langs:
  - csharp
  - vb
  name: RangeValuePair<TKey, TValue>
  nameWithType: RangeValuePair<TKey, TValue>
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>
  type: Struct
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: RangeValuePair
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 177
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: >-
    Represents a range of values.

    Both values must be of the same type and comparable.
  example: []
  syntax:
    content: 'public readonly struct RangeValuePair<TKey, TValue> : IEquatable<RangeValuePair<TKey, TValue>>'
    typeParameters:
    - id: TKey
      description: Type of the values.
    - id: TValue
    content.vb: Public Structure RangeValuePair(Of TKey, TValue) Implements IEquatable(Of RangeValuePair(Of TKey, TValue))
  implements:
  - System.IEquatable{TMPEffects.Intervaltree.RangeValuePair`2}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: RangeValuePair(Of TKey, TValue)
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue)
  name.vb: RangeValuePair(Of TKey, TValue)
- uid: TMPEffects.Intervaltree.RangeValuePair`2.From
  commentId: P:TMPEffects.Intervaltree.RangeValuePair`2.From
  id: From
  parent: TMPEffects.Intervaltree.RangeValuePair`2
  langs:
  - csharp
  - vb
  name: From
  nameWithType: RangeValuePair<TKey, TValue>.From
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.From
  type: Property
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: From
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 179
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  syntax:
    content: public TKey From { get; }
    parameters: []
    return:
      type: '{TKey}'
    content.vb: Public ReadOnly Property From As TKey
  overload: TMPEffects.Intervaltree.RangeValuePair`2.From*
  nameWithType.vb: RangeValuePair(Of TKey, TValue).From
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).From
- uid: TMPEffects.Intervaltree.RangeValuePair`2.To
  commentId: P:TMPEffects.Intervaltree.RangeValuePair`2.To
  id: To
  parent: TMPEffects.Intervaltree.RangeValuePair`2
  langs:
  - csharp
  - vb
  name: To
  nameWithType: RangeValuePair<TKey, TValue>.To
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.To
  type: Property
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: To
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 180
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  syntax:
    content: public TKey To { get; }
    parameters: []
    return:
      type: '{TKey}'
    content.vb: Public ReadOnly Property [To] As TKey
  overload: TMPEffects.Intervaltree.RangeValuePair`2.To*
  nameWithType.vb: RangeValuePair(Of TKey, TValue).To
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).To
- uid: TMPEffects.Intervaltree.RangeValuePair`2.Value
  commentId: P:TMPEffects.Intervaltree.RangeValuePair`2.Value
  id: Value
  parent: TMPEffects.Intervaltree.RangeValuePair`2
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: RangeValuePair<TKey, TValue>.Value
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.Value
  type: Property
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Value
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 181
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  syntax:
    content: public TValue Value { get; }
    parameters: []
    return:
      type: '{TValue}'
    content.vb: Public ReadOnly Property Value As TValue
  overload: TMPEffects.Intervaltree.RangeValuePair`2.Value*
  nameWithType.vb: RangeValuePair(Of TKey, TValue).Value
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).Value
- uid: TMPEffects.Intervaltree.RangeValuePair`2.#ctor(`0,`0,`1)
  commentId: M:TMPEffects.Intervaltree.RangeValuePair`2.#ctor(`0,`0,`1)
  id: '#ctor(`0,`0,`1)'
  parent: TMPEffects.Intervaltree.RangeValuePair`2
  langs:
  - csharp
  - vb
  name: RangeValuePair(TKey, TKey, TValue)
  nameWithType: RangeValuePair<TKey, TValue>.RangeValuePair(TKey, TKey, TValue)
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.RangeValuePair(TKey, TKey, TValue)
  type: Constructor
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: .ctor
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 186
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Initializes a new <xref href="TMPEffects.Intervaltree.RangeValuePair%602" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: public RangeValuePair(TKey from, TKey to, TValue value)
    parameters:
    - id: from
      type: '{TKey}'
    - id: to
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    content.vb: Public Sub New(from As TKey, [to] As TKey, value As TValue)
  overload: TMPEffects.Intervaltree.RangeValuePair`2.#ctor*
  nameWithType.vb: RangeValuePair(Of TKey, TValue).New(TKey, TKey, TValue)
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).New(TKey, TKey, TValue)
  name.vb: New(TKey, TKey, TValue)
- uid: TMPEffects.Intervaltree.RangeValuePair`2.ToString
  commentId: M:TMPEffects.Intervaltree.RangeValuePair`2.ToString
  id: ToString
  parent: TMPEffects.Intervaltree.RangeValuePair`2
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RangeValuePair<TKey, TValue>.ToString()
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.ToString()
  type: Method
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: ToString
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 199
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Returns a <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> that represents this instance.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: TMPEffects.Intervaltree.RangeValuePair`2.ToString*
  nameWithType.vb: RangeValuePair(Of TKey, TValue).ToString()
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).ToString()
- uid: TMPEffects.Intervaltree.RangeValuePair`2.GetHashCode
  commentId: M:TMPEffects.Intervaltree.RangeValuePair`2.GetHashCode
  id: GetHashCode
  parent: TMPEffects.Intervaltree.RangeValuePair`2
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RangeValuePair<TKey, TValue>.GetHashCode()
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.GetHashCode()
  type: Method
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: GetHashCode
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 204
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: TMPEffects.Intervaltree.RangeValuePair`2.GetHashCode*
  nameWithType.vb: RangeValuePair(Of TKey, TValue).GetHashCode()
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).GetHashCode()
- uid: TMPEffects.Intervaltree.RangeValuePair`2.Equals(TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  commentId: M:TMPEffects.Intervaltree.RangeValuePair`2.Equals(TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  id: Equals(TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  parent: TMPEffects.Intervaltree.RangeValuePair`2
  langs:
  - csharp
  - vb
  name: Equals(RangeValuePair<TKey, TValue>)
  nameWithType: RangeValuePair<TKey, TValue>.Equals(RangeValuePair<TKey, TValue>)
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.Equals(TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>)
  type: Method
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Equals
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 216
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  example: []
  syntax:
    content: public bool Equals(RangeValuePair<TKey, TValue> other)
    parameters:
    - id: other
      type: TMPEffects.Intervaltree.RangeValuePair`2
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As RangeValuePair(Of TKey, TValue)) As Boolean
  overload: TMPEffects.Intervaltree.RangeValuePair`2.Equals*
  implements:
  - System.IEquatable{TMPEffects.Intervaltree.RangeValuePair`2}.Equals(TMPEffects.Intervaltree.RangeValuePair{{TKey},{TValue}})
  nameWithType.vb: RangeValuePair(Of TKey, TValue).Equals(RangeValuePair(Of TKey, TValue))
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).Equals(TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue))
  name.vb: Equals(RangeValuePair(Of TKey, TValue))
- uid: TMPEffects.Intervaltree.RangeValuePair`2.Equals(System.Object)
  commentId: M:TMPEffects.Intervaltree.RangeValuePair`2.Equals(System.Object)
  id: Equals(System.Object)
  parent: TMPEffects.Intervaltree.RangeValuePair`2
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: RangeValuePair<TKey, TValue>.Equals(object)
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.Equals(object)
  type: Method
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Equals
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 223
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: TMPEffects.Intervaltree.RangeValuePair`2.Equals*
  nameWithType.vb: RangeValuePair(Of TKey, TValue).Equals(Object)
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).Equals(Object)
  name.vb: Equals(Object)
- uid: TMPEffects.Intervaltree.RangeValuePair`2.op_Equality(TMPEffects.Intervaltree.RangeValuePair{`0,`1},TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  commentId: M:TMPEffects.Intervaltree.RangeValuePair`2.op_Equality(TMPEffects.Intervaltree.RangeValuePair{`0,`1},TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  id: op_Equality(TMPEffects.Intervaltree.RangeValuePair{`0,`1},TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  parent: TMPEffects.Intervaltree.RangeValuePair`2
  langs:
  - csharp
  - vb
  name: operator ==(RangeValuePair<TKey, TValue>, RangeValuePair<TKey, TValue>)
  nameWithType: RangeValuePair<TKey, TValue>.operator ==(RangeValuePair<TKey, TValue>, RangeValuePair<TKey, TValue>)
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.operator ==(TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>, TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>)
  type: Operator
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: op_Equality
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 231
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  syntax:
    content: public static bool operator ==(RangeValuePair<TKey, TValue> left, RangeValuePair<TKey, TValue> right)
    parameters:
    - id: left
      type: TMPEffects.Intervaltree.RangeValuePair`2
    - id: right
      type: TMPEffects.Intervaltree.RangeValuePair`2
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As RangeValuePair(Of TKey, TValue), right As RangeValuePair(Of TKey, TValue)) As Boolean
  overload: TMPEffects.Intervaltree.RangeValuePair`2.op_Equality*
  nameWithType.vb: RangeValuePair(Of TKey, TValue).=(RangeValuePair(Of TKey, TValue), RangeValuePair(Of TKey, TValue))
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).=(TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue), TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue))
  name.vb: =(RangeValuePair(Of TKey, TValue), RangeValuePair(Of TKey, TValue))
- uid: TMPEffects.Intervaltree.RangeValuePair`2.op_Inequality(TMPEffects.Intervaltree.RangeValuePair{`0,`1},TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  commentId: M:TMPEffects.Intervaltree.RangeValuePair`2.op_Inequality(TMPEffects.Intervaltree.RangeValuePair{`0,`1},TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  id: op_Inequality(TMPEffects.Intervaltree.RangeValuePair{`0,`1},TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  parent: TMPEffects.Intervaltree.RangeValuePair`2
  langs:
  - csharp
  - vb
  name: operator !=(RangeValuePair<TKey, TValue>, RangeValuePair<TKey, TValue>)
  nameWithType: RangeValuePair<TKey, TValue>.operator !=(RangeValuePair<TKey, TValue>, RangeValuePair<TKey, TValue>)
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.operator !=(TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>, TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>)
  type: Operator
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: op_Inequality
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 236
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  syntax:
    content: public static bool operator !=(RangeValuePair<TKey, TValue> left, RangeValuePair<TKey, TValue> right)
    parameters:
    - id: left
      type: TMPEffects.Intervaltree.RangeValuePair`2
    - id: right
      type: TMPEffects.Intervaltree.RangeValuePair`2
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As RangeValuePair(Of TKey, TValue), right As RangeValuePair(Of TKey, TValue)) As Boolean
  overload: TMPEffects.Intervaltree.RangeValuePair`2.op_Inequality*
  nameWithType.vb: RangeValuePair(Of TKey, TValue).<>(RangeValuePair(Of TKey, TValue), RangeValuePair(Of TKey, TValue))
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).<>(TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue), TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue))
  name.vb: <>(RangeValuePair(Of TKey, TValue), RangeValuePair(Of TKey, TValue))
references:
- uid: TMPEffects.Intervaltree
  commentId: N:TMPEffects.Intervaltree
  href: TMPEffects.html
  name: TMPEffects.Intervaltree
  nameWithType: TMPEffects.Intervaltree
  fullName: TMPEffects.Intervaltree
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Intervaltree
    name: Intervaltree
    href: TMPEffects.Intervaltree.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Intervaltree
    name: Intervaltree
    href: TMPEffects.Intervaltree.html
- uid: System.IEquatable{TMPEffects.Intervaltree.RangeValuePair`2}
  commentId: T:System.IEquatable{TMPEffects.Intervaltree.RangeValuePair`2}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<RangeValuePair<TKey, TValue>>
  nameWithType: IEquatable<RangeValuePair<TKey, TValue>>
  fullName: System.IEquatable<TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>>
  nameWithType.vb: IEquatable(Of RangeValuePair(Of TKey, TValue))
  fullName.vb: System.IEquatable(Of TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue))
  name.vb: IEquatable(Of RangeValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: TMPEffects.Intervaltree.RangeValuePair`2
    name: RangeValuePair
    href: TMPEffects.Intervaltree.RangeValuePair-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TMPEffects.Intervaltree.RangeValuePair`2
    name: RangeValuePair
    href: TMPEffects.Intervaltree.RangeValuePair-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TMPEffects.Intervaltree.RangeValuePair`2.From*
  commentId: Overload:TMPEffects.Intervaltree.RangeValuePair`2.From
  href: TMPEffects.Intervaltree.RangeValuePair-2.html#TMPEffects_Intervaltree_RangeValuePair_2_From
  name: From
  nameWithType: RangeValuePair<TKey, TValue>.From
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.From
  nameWithType.vb: RangeValuePair(Of TKey, TValue).From
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).From
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TMPEffects.Intervaltree.RangeValuePair`2.To*
  commentId: Overload:TMPEffects.Intervaltree.RangeValuePair`2.To
  href: TMPEffects.Intervaltree.RangeValuePair-2.html#TMPEffects_Intervaltree_RangeValuePair_2_To
  name: To
  nameWithType: RangeValuePair<TKey, TValue>.To
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.To
  nameWithType.vb: RangeValuePair(Of TKey, TValue).To
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).To
- uid: TMPEffects.Intervaltree.RangeValuePair`2.Value*
  commentId: Overload:TMPEffects.Intervaltree.RangeValuePair`2.Value
  href: TMPEffects.Intervaltree.RangeValuePair-2.html#TMPEffects_Intervaltree_RangeValuePair_2_Value
  name: Value
  nameWithType: RangeValuePair<TKey, TValue>.Value
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.Value
  nameWithType.vb: RangeValuePair(Of TKey, TValue).Value
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).Value
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TMPEffects.Intervaltree.RangeValuePair`2
  commentId: T:TMPEffects.Intervaltree.RangeValuePair`2
  parent: TMPEffects.Intervaltree
  href: TMPEffects.Intervaltree.RangeValuePair-2.html
  name: RangeValuePair<TKey, TValue>
  nameWithType: RangeValuePair<TKey, TValue>
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>
  nameWithType.vb: RangeValuePair(Of TKey, TValue)
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue)
  name.vb: RangeValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: TMPEffects.Intervaltree.RangeValuePair`2
    name: RangeValuePair
    href: TMPEffects.Intervaltree.RangeValuePair-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: TMPEffects.Intervaltree.RangeValuePair`2
    name: RangeValuePair
    href: TMPEffects.Intervaltree.RangeValuePair-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TMPEffects.Intervaltree.RangeValuePair`2.#ctor*
  commentId: Overload:TMPEffects.Intervaltree.RangeValuePair`2.#ctor
  href: TMPEffects.Intervaltree.RangeValuePair-2.html#TMPEffects_Intervaltree_RangeValuePair_2__ctor__0__0__1_
  name: RangeValuePair
  nameWithType: RangeValuePair<TKey, TValue>.RangeValuePair
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.RangeValuePair
  nameWithType.vb: RangeValuePair(Of TKey, TValue).New
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: TMPEffects.Intervaltree.RangeValuePair`2.ToString*
  commentId: Overload:TMPEffects.Intervaltree.RangeValuePair`2.ToString
  href: TMPEffects.Intervaltree.RangeValuePair-2.html#TMPEffects_Intervaltree_RangeValuePair_2_ToString
  name: ToString
  nameWithType: RangeValuePair<TKey, TValue>.ToString
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.ToString
  nameWithType.vb: RangeValuePair(Of TKey, TValue).ToString
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: TMPEffects.Intervaltree.RangeValuePair`2.GetHashCode*
  commentId: Overload:TMPEffects.Intervaltree.RangeValuePair`2.GetHashCode
  href: TMPEffects.Intervaltree.RangeValuePair-2.html#TMPEffects_Intervaltree_RangeValuePair_2_GetHashCode
  name: GetHashCode
  nameWithType: RangeValuePair<TKey, TValue>.GetHashCode
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.GetHashCode
  nameWithType.vb: RangeValuePair(Of TKey, TValue).GetHashCode
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TMPEffects.Intervaltree.RangeValuePair`2.Equals*
  commentId: Overload:TMPEffects.Intervaltree.RangeValuePair`2.Equals
  href: TMPEffects.Intervaltree.RangeValuePair-2.html#TMPEffects_Intervaltree_RangeValuePair_2_Equals_TMPEffects_Intervaltree_RangeValuePair__0__1__
  name: Equals
  nameWithType: RangeValuePair<TKey, TValue>.Equals
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.Equals
  nameWithType.vb: RangeValuePair(Of TKey, TValue).Equals
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).Equals
- uid: System.IEquatable{TMPEffects.Intervaltree.RangeValuePair`2}.Equals(TMPEffects.Intervaltree.RangeValuePair{{TKey},{TValue}})
  commentId: M:System.IEquatable{TMPEffects.Intervaltree.RangeValuePair`2}.Equals(TMPEffects.Intervaltree.RangeValuePair{`0,`1})
  parent: System.IEquatable{TMPEffects.Intervaltree.RangeValuePair`2}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(RangeValuePair<TKey, TValue>)
  nameWithType: IEquatable<RangeValuePair<TKey, TValue>>.Equals(RangeValuePair<TKey, TValue>)
  fullName: System.IEquatable<TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>>.Equals(TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>)
  nameWithType.vb: IEquatable(Of RangeValuePair(Of TKey, TValue)).Equals(RangeValuePair(Of TKey, TValue))
  fullName.vb: System.IEquatable(Of TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue)).Equals(TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue))
  name.vb: Equals(RangeValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.IEquatable{TMPEffects.Intervaltree.RangeValuePair`2}.Equals(TMPEffects.Intervaltree.RangeValuePair{`0,`1})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: TMPEffects.Intervaltree.RangeValuePair`2
    name: RangeValuePair
    href: TMPEffects.Intervaltree.RangeValuePair-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.IEquatable{TMPEffects.Intervaltree.RangeValuePair`2}.Equals(TMPEffects.Intervaltree.RangeValuePair{`0,`1})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: TMPEffects.Intervaltree.RangeValuePair`2
    name: RangeValuePair
    href: TMPEffects.Intervaltree.RangeValuePair-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: TMPEffects.Intervaltree.RangeValuePair`2.op_Equality*
  commentId: Overload:TMPEffects.Intervaltree.RangeValuePair`2.op_Equality
  href: TMPEffects.Intervaltree.RangeValuePair-2.html#TMPEffects_Intervaltree_RangeValuePair_2_op_Equality_TMPEffects_Intervaltree_RangeValuePair__0__1__TMPEffects_Intervaltree_RangeValuePair__0__1__
  name: operator ==
  nameWithType: RangeValuePair<TKey, TValue>.operator ==
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.operator ==
  nameWithType.vb: RangeValuePair(Of TKey, TValue).=
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: TMPEffects.Intervaltree.RangeValuePair`2.op_Equality*
    name: ==
    href: TMPEffects.Intervaltree.RangeValuePair-2.html#TMPEffects_Intervaltree_RangeValuePair_2_op_Equality_TMPEffects_Intervaltree_RangeValuePair__0__1__TMPEffects_Intervaltree_RangeValuePair__0__1__
- uid: TMPEffects.Intervaltree.RangeValuePair`2.op_Inequality*
  commentId: Overload:TMPEffects.Intervaltree.RangeValuePair`2.op_Inequality
  href: TMPEffects.Intervaltree.RangeValuePair-2.html#TMPEffects_Intervaltree_RangeValuePair_2_op_Inequality_TMPEffects_Intervaltree_RangeValuePair__0__1__TMPEffects_Intervaltree_RangeValuePair__0__1__
  name: operator !=
  nameWithType: RangeValuePair<TKey, TValue>.operator !=
  fullName: TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>.operator !=
  nameWithType.vb: RangeValuePair(Of TKey, TValue).<>
  fullName.vb: TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue).<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: TMPEffects.Intervaltree.RangeValuePair`2.op_Inequality*
    name: '!='
    href: TMPEffects.Intervaltree.RangeValuePair-2.html#TMPEffects_Intervaltree_RangeValuePair_2_op_Inequality_TMPEffects_Intervaltree_RangeValuePair__0__1__TMPEffects_Intervaltree_RangeValuePair__0__1__
