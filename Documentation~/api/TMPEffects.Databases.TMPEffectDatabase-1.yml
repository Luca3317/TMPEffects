### YamlMime:ManagedReference
items:
- uid: TMPEffects.Databases.TMPEffectDatabase`1
  commentId: T:TMPEffects.Databases.TMPEffectDatabase`1
  id: TMPEffectDatabase`1
  parent: TMPEffects.Databases
  children:
  - TMPEffects.Databases.TMPEffectDatabase`1.ContainsEffect(System.String)
  - TMPEffects.Databases.TMPEffectDatabase`1.GetEffect(System.String)
  - TMPEffects.Databases.TMPEffectDatabase`1.ObjectChanged
  - TMPEffects.Databases.TMPEffectDatabase`1.OnDestroy
  - TMPEffects.Databases.TMPEffectDatabase`1.OnValidate
  - TMPEffects.Databases.TMPEffectDatabase`1.RaiseDatabaseChanged
  langs:
  - csharp
  - vb
  name: TMPEffectDatabase<T>
  nameWithType: TMPEffectDatabase<T>
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>
  type: Class
  source:
    remote:
      path: Package/Runtime/Databases/TMPEffectDatabase.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: TMPEffectDatabase
    path: ../Package/Runtime/Databases/TMPEffectDatabase.cs
    startLine: 9
  namespace: TMPEffects.Databases
  summary: Base class for all effect databases.
  example: []
  syntax:
    content: 'public abstract class TMPEffectDatabase<T> : ScriptableObject, ITMPEffectDatabase<T>, ITMPEffectDatabase, INotifyObjectChanged'
    typeParameters:
    - id: T
      description: The type of effect stored in this database.
    content.vb: Public MustInherit Class TMPEffectDatabase(Of T) Inherits ScriptableObject Implements ITMPEffectDatabase(Of T), ITMPEffectDatabase, INotifyObjectChanged
  inheritance:
  - System.Object
  derivedClasses:
  - TMPEffects.Databases.AnimationDatabase.TMPAnimationDatabase
  - TMPEffects.Databases.AnimationDatabase.TMPAnimationDatabaseBase`1
  - TMPEffects.Databases.CommandDatabase.TMPCommandDatabase
  implements:
  - TMPEffects.Databases.ITMPEffectDatabase{{T}}
  - TMPEffects.Databases.ITMPEffectDatabase
  - TMPEffects.ObjectChanged.INotifyObjectChanged
  nameWithType.vb: TMPEffectDatabase(Of T)
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T)
  name.vb: TMPEffectDatabase(Of T)
- uid: TMPEffects.Databases.TMPEffectDatabase`1.ObjectChanged
  commentId: E:TMPEffects.Databases.TMPEffectDatabase`1.ObjectChanged
  id: ObjectChanged
  parent: TMPEffects.Databases.TMPEffectDatabase`1
  langs:
  - csharp
  - vb
  name: ObjectChanged
  nameWithType: TMPEffectDatabase<T>.ObjectChanged
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>.ObjectChanged
  type: Event
  source:
    remote:
      path: Package/Runtime/Databases/TMPEffectDatabase.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ObjectChanged
    path: ../Package/Runtime/Databases/TMPEffectDatabase.cs
    startLine: 11
  namespace: TMPEffects.Databases
  summary: Raised when the object is changed.
  example: []
  syntax:
    content: public event ObjectChangedEventHandler ObjectChanged
    return:
      type: TMPEffects.ObjectChanged.ObjectChangedEventHandler
    content.vb: Public Event ObjectChanged As ObjectChangedEventHandler
  implements:
  - TMPEffects.ObjectChanged.INotifyObjectChanged.ObjectChanged
  nameWithType.vb: TMPEffectDatabase(Of T).ObjectChanged
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T).ObjectChanged
- uid: TMPEffects.Databases.TMPEffectDatabase`1.ContainsEffect(System.String)
  commentId: M:TMPEffects.Databases.TMPEffectDatabase`1.ContainsEffect(System.String)
  id: ContainsEffect(System.String)
  parent: TMPEffects.Databases.TMPEffectDatabase`1
  langs:
  - csharp
  - vb
  name: ContainsEffect(string)
  nameWithType: TMPEffectDatabase<T>.ContainsEffect(string)
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>.ContainsEffect(string)
  type: Method
  source:
    remote:
      path: Package/Runtime/Databases/TMPEffectDatabase.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ContainsEffect
    path: ../Package/Runtime/Databases/TMPEffectDatabase.cs
    startLine: 18
  namespace: TMPEffects.Databases
  summary: Check whether this database contains an effect associated with the given name.
  example: []
  syntax:
    content: public abstract bool ContainsEffect(string name)
    parameters:
    - id: name
      type: System.String
      description: The identifier of the effect.
    return:
      type: System.Boolean
      description: true if this database contains an effect associated with the given name; false otherwise.
    content.vb: Public MustOverride Function ContainsEffect(name As String) As Boolean
  overload: TMPEffects.Databases.TMPEffectDatabase`1.ContainsEffect*
  implements:
  - TMPEffects.Databases.ITMPEffectDatabase.ContainsEffect(System.String)
  nameWithType.vb: TMPEffectDatabase(Of T).ContainsEffect(String)
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T).ContainsEffect(String)
  name.vb: ContainsEffect(String)
- uid: TMPEffects.Databases.TMPEffectDatabase`1.GetEffect(System.String)
  commentId: M:TMPEffects.Databases.TMPEffectDatabase`1.GetEffect(System.String)
  id: GetEffect(System.String)
  parent: TMPEffects.Databases.TMPEffectDatabase`1
  langs:
  - csharp
  - vb
  name: GetEffect(string)
  nameWithType: TMPEffectDatabase<T>.GetEffect(string)
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>.GetEffect(string)
  type: Method
  source:
    remote:
      path: Package/Runtime/Databases/TMPEffectDatabase.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetEffect
    path: ../Package/Runtime/Databases/TMPEffectDatabase.cs
    startLine: 26
  namespace: TMPEffects.Databases
  summary: Get the effect associated with the given name.
  example: []
  syntax:
    content: public abstract T GetEffect(string name)
    parameters:
    - id: name
      type: System.String
      description: The identifier of the effect.
    return:
      type: '{T}'
      description: The effect associated with the given name.
    content.vb: Public MustOverride Function GetEffect(name As String) As T
  overload: TMPEffects.Databases.TMPEffectDatabase`1.GetEffect*
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: ''
  implements:
  - TMPEffects.Databases.ITMPEffectDatabase{{T}}.GetEffect(System.String)
  nameWithType.vb: TMPEffectDatabase(Of T).GetEffect(String)
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T).GetEffect(String)
  name.vb: GetEffect(String)
- uid: TMPEffects.Databases.TMPEffectDatabase`1.OnValidate
  commentId: M:TMPEffects.Databases.TMPEffectDatabase`1.OnValidate
  id: OnValidate
  parent: TMPEffects.Databases.TMPEffectDatabase`1
  langs:
  - csharp
  - vb
  name: OnValidate()
  nameWithType: TMPEffectDatabase<T>.OnValidate()
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>.OnValidate()
  type: Method
  source:
    remote:
      path: Package/Runtime/Databases/TMPEffectDatabase.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: OnValidate
    path: ../Package/Runtime/Databases/TMPEffectDatabase.cs
    startLine: 28
  namespace: TMPEffects.Databases
  syntax:
    content: protected virtual void OnValidate()
    content.vb: Protected Overridable Sub OnValidate()
  overload: TMPEffects.Databases.TMPEffectDatabase`1.OnValidate*
  nameWithType.vb: TMPEffectDatabase(Of T).OnValidate()
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T).OnValidate()
- uid: TMPEffects.Databases.TMPEffectDatabase`1.OnDestroy
  commentId: M:TMPEffects.Databases.TMPEffectDatabase`1.OnDestroy
  id: OnDestroy
  parent: TMPEffects.Databases.TMPEffectDatabase`1
  langs:
  - csharp
  - vb
  name: OnDestroy()
  nameWithType: TMPEffectDatabase<T>.OnDestroy()
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>.OnDestroy()
  type: Method
  source:
    remote:
      path: Package/Runtime/Databases/TMPEffectDatabase.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: OnDestroy
    path: ../Package/Runtime/Databases/TMPEffectDatabase.cs
    startLine: 33
  namespace: TMPEffects.Databases
  syntax:
    content: protected virtual void OnDestroy()
    content.vb: Protected Overridable Sub OnDestroy()
  overload: TMPEffects.Databases.TMPEffectDatabase`1.OnDestroy*
  nameWithType.vb: TMPEffectDatabase(Of T).OnDestroy()
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T).OnDestroy()
- uid: TMPEffects.Databases.TMPEffectDatabase`1.RaiseDatabaseChanged
  commentId: M:TMPEffects.Databases.TMPEffectDatabase`1.RaiseDatabaseChanged
  id: RaiseDatabaseChanged
  parent: TMPEffects.Databases.TMPEffectDatabase`1
  langs:
  - csharp
  - vb
  name: RaiseDatabaseChanged()
  nameWithType: TMPEffectDatabase<T>.RaiseDatabaseChanged()
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>.RaiseDatabaseChanged()
  type: Method
  source:
    remote:
      path: Package/Runtime/Databases/TMPEffectDatabase.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: RaiseDatabaseChanged
    path: ../Package/Runtime/Databases/TMPEffectDatabase.cs
    startLine: 38
  namespace: TMPEffects.Databases
  syntax:
    content: protected void RaiseDatabaseChanged()
    content.vb: Protected Sub RaiseDatabaseChanged()
  overload: TMPEffects.Databases.TMPEffectDatabase`1.RaiseDatabaseChanged*
  nameWithType.vb: TMPEffectDatabase(Of T).RaiseDatabaseChanged()
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T).RaiseDatabaseChanged()
references:
- uid: TMPEffects.Databases
  commentId: N:TMPEffects.Databases
  href: TMPEffects.html
  name: TMPEffects.Databases
  nameWithType: TMPEffects.Databases
  fullName: TMPEffects.Databases
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Databases
    name: Databases
    href: TMPEffects.Databases.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Databases
    name: Databases
    href: TMPEffects.Databases.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TMPEffects.Databases.ITMPEffectDatabase{{T}}
  commentId: T:TMPEffects.Databases.ITMPEffectDatabase{`0}
  parent: TMPEffects.Databases
  definition: TMPEffects.Databases.ITMPEffectDatabase`1
  href: TMPEffects.Databases.ITMPEffectDatabase-1.html
  name: ITMPEffectDatabase<T>
  nameWithType: ITMPEffectDatabase<T>
  fullName: TMPEffects.Databases.ITMPEffectDatabase<T>
  nameWithType.vb: ITMPEffectDatabase(Of T)
  fullName.vb: TMPEffects.Databases.ITMPEffectDatabase(Of T)
  name.vb: ITMPEffectDatabase(Of T)
  spec.csharp:
  - uid: TMPEffects.Databases.ITMPEffectDatabase`1
    name: ITMPEffectDatabase
    href: TMPEffects.Databases.ITMPEffectDatabase-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: TMPEffects.Databases.ITMPEffectDatabase`1
    name: ITMPEffectDatabase
    href: TMPEffects.Databases.ITMPEffectDatabase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TMPEffects.Databases.ITMPEffectDatabase
  commentId: T:TMPEffects.Databases.ITMPEffectDatabase
  parent: TMPEffects.Databases
  href: TMPEffects.Databases.ITMPEffectDatabase.html
  name: ITMPEffectDatabase
  nameWithType: ITMPEffectDatabase
  fullName: TMPEffects.Databases.ITMPEffectDatabase
- uid: TMPEffects.ObjectChanged.INotifyObjectChanged
  commentId: T:TMPEffects.ObjectChanged.INotifyObjectChanged
  parent: TMPEffects.ObjectChanged
  href: TMPEffects.ObjectChanged.INotifyObjectChanged.html
  name: INotifyObjectChanged
  nameWithType: INotifyObjectChanged
  fullName: TMPEffects.ObjectChanged.INotifyObjectChanged
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TMPEffects.Databases.ITMPEffectDatabase`1
  commentId: T:TMPEffects.Databases.ITMPEffectDatabase`1
  href: TMPEffects.Databases.ITMPEffectDatabase-1.html
  name: ITMPEffectDatabase<T>
  nameWithType: ITMPEffectDatabase<T>
  fullName: TMPEffects.Databases.ITMPEffectDatabase<T>
  nameWithType.vb: ITMPEffectDatabase(Of T)
  fullName.vb: TMPEffects.Databases.ITMPEffectDatabase(Of T)
  name.vb: ITMPEffectDatabase(Of T)
  spec.csharp:
  - uid: TMPEffects.Databases.ITMPEffectDatabase`1
    name: ITMPEffectDatabase
    href: TMPEffects.Databases.ITMPEffectDatabase-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: TMPEffects.Databases.ITMPEffectDatabase`1
    name: ITMPEffectDatabase
    href: TMPEffects.Databases.ITMPEffectDatabase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TMPEffects.ObjectChanged
  commentId: N:TMPEffects.ObjectChanged
  href: TMPEffects.html
  name: TMPEffects.ObjectChanged
  nameWithType: TMPEffects.ObjectChanged
  fullName: TMPEffects.ObjectChanged
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.ObjectChanged
    name: ObjectChanged
    href: TMPEffects.ObjectChanged.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.ObjectChanged
    name: ObjectChanged
    href: TMPEffects.ObjectChanged.html
- uid: TMPEffects.ObjectChanged.INotifyObjectChanged.ObjectChanged
  commentId: E:TMPEffects.ObjectChanged.INotifyObjectChanged.ObjectChanged
  parent: TMPEffects.ObjectChanged.INotifyObjectChanged
  href: TMPEffects.ObjectChanged.INotifyObjectChanged.html#TMPEffects_ObjectChanged_INotifyObjectChanged_ObjectChanged
  name: ObjectChanged
  nameWithType: INotifyObjectChanged.ObjectChanged
  fullName: TMPEffects.ObjectChanged.INotifyObjectChanged.ObjectChanged
- uid: TMPEffects.ObjectChanged.ObjectChangedEventHandler
  commentId: T:TMPEffects.ObjectChanged.ObjectChangedEventHandler
  parent: TMPEffects.ObjectChanged
  href: TMPEffects.ObjectChanged.ObjectChangedEventHandler.html
  name: ObjectChangedEventHandler
  nameWithType: ObjectChangedEventHandler
  fullName: TMPEffects.ObjectChanged.ObjectChangedEventHandler
- uid: TMPEffects.Databases.TMPEffectDatabase`1.ContainsEffect*
  commentId: Overload:TMPEffects.Databases.TMPEffectDatabase`1.ContainsEffect
  href: TMPEffects.Databases.TMPEffectDatabase-1.html#TMPEffects_Databases_TMPEffectDatabase_1_ContainsEffect_System_String_
  name: ContainsEffect
  nameWithType: TMPEffectDatabase<T>.ContainsEffect
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>.ContainsEffect
  nameWithType.vb: TMPEffectDatabase(Of T).ContainsEffect
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T).ContainsEffect
- uid: TMPEffects.Databases.ITMPEffectDatabase.ContainsEffect(System.String)
  commentId: M:TMPEffects.Databases.ITMPEffectDatabase.ContainsEffect(System.String)
  parent: TMPEffects.Databases.ITMPEffectDatabase
  isExternal: true
  href: TMPEffects.Databases.ITMPEffectDatabase.html#TMPEffects_Databases_ITMPEffectDatabase_ContainsEffect_System_String_
  name: ContainsEffect(string)
  nameWithType: ITMPEffectDatabase.ContainsEffect(string)
  fullName: TMPEffects.Databases.ITMPEffectDatabase.ContainsEffect(string)
  nameWithType.vb: ITMPEffectDatabase.ContainsEffect(String)
  fullName.vb: TMPEffects.Databases.ITMPEffectDatabase.ContainsEffect(String)
  name.vb: ContainsEffect(String)
  spec.csharp:
  - uid: TMPEffects.Databases.ITMPEffectDatabase.ContainsEffect(System.String)
    name: ContainsEffect
    href: TMPEffects.Databases.ITMPEffectDatabase.html#TMPEffects_Databases_ITMPEffectDatabase_ContainsEffect_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: TMPEffects.Databases.ITMPEffectDatabase.ContainsEffect(System.String)
    name: ContainsEffect
    href: TMPEffects.Databases.ITMPEffectDatabase.html#TMPEffects_Databases_ITMPEffectDatabase_ContainsEffect_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception
  name: KeyNotFoundException
  nameWithType: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: TMPEffects.Databases.TMPEffectDatabase`1.GetEffect*
  commentId: Overload:TMPEffects.Databases.TMPEffectDatabase`1.GetEffect
  href: TMPEffects.Databases.TMPEffectDatabase-1.html#TMPEffects_Databases_TMPEffectDatabase_1_GetEffect_System_String_
  name: GetEffect
  nameWithType: TMPEffectDatabase<T>.GetEffect
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>.GetEffect
  nameWithType.vb: TMPEffectDatabase(Of T).GetEffect
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T).GetEffect
- uid: TMPEffects.Databases.ITMPEffectDatabase{{T}}.GetEffect(System.String)
  commentId: M:TMPEffects.Databases.ITMPEffectDatabase{`0}.GetEffect(System.String)
  parent: TMPEffects.Databases.ITMPEffectDatabase{{T}}
  definition: TMPEffects.Databases.ITMPEffectDatabase`1.GetEffect(System.String)
  href: TMPEffects.Databases.ITMPEffectDatabase-1.html#TMPEffects_Databases_ITMPEffectDatabase_1_GetEffect_System_String_
  name: GetEffect(string)
  nameWithType: ITMPEffectDatabase<T>.GetEffect(string)
  fullName: TMPEffects.Databases.ITMPEffectDatabase<T>.GetEffect(string)
  nameWithType.vb: ITMPEffectDatabase(Of T).GetEffect(String)
  fullName.vb: TMPEffects.Databases.ITMPEffectDatabase(Of T).GetEffect(String)
  name.vb: GetEffect(String)
  spec.csharp:
  - uid: TMPEffects.Databases.ITMPEffectDatabase{`0}.GetEffect(System.String)
    name: GetEffect
    href: TMPEffects.Databases.ITMPEffectDatabase-1.html#TMPEffects_Databases_ITMPEffectDatabase_1_GetEffect_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: TMPEffects.Databases.ITMPEffectDatabase{`0}.GetEffect(System.String)
    name: GetEffect
    href: TMPEffects.Databases.ITMPEffectDatabase-1.html#TMPEffects_Databases_ITMPEffectDatabase_1_GetEffect_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: TMPEffects.Databases.ITMPEffectDatabase`1.GetEffect(System.String)
  commentId: M:TMPEffects.Databases.ITMPEffectDatabase`1.GetEffect(System.String)
  isExternal: true
  href: TMPEffects.Databases.ITMPEffectDatabase-1.html#TMPEffects_Databases_ITMPEffectDatabase_1_GetEffect_System_String_
  name: GetEffect(string)
  nameWithType: ITMPEffectDatabase<T>.GetEffect(string)
  fullName: TMPEffects.Databases.ITMPEffectDatabase<T>.GetEffect(string)
  nameWithType.vb: ITMPEffectDatabase(Of T).GetEffect(String)
  fullName.vb: TMPEffects.Databases.ITMPEffectDatabase(Of T).GetEffect(String)
  name.vb: GetEffect(String)
  spec.csharp:
  - uid: TMPEffects.Databases.ITMPEffectDatabase`1.GetEffect(System.String)
    name: GetEffect
    href: TMPEffects.Databases.ITMPEffectDatabase-1.html#TMPEffects_Databases_ITMPEffectDatabase_1_GetEffect_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: TMPEffects.Databases.ITMPEffectDatabase`1.GetEffect(System.String)
    name: GetEffect
    href: TMPEffects.Databases.ITMPEffectDatabase-1.html#TMPEffects_Databases_ITMPEffectDatabase_1_GetEffect_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TMPEffects.Databases.TMPEffectDatabase`1.OnValidate*
  commentId: Overload:TMPEffects.Databases.TMPEffectDatabase`1.OnValidate
  href: TMPEffects.Databases.TMPEffectDatabase-1.html#TMPEffects_Databases_TMPEffectDatabase_1_OnValidate
  name: OnValidate
  nameWithType: TMPEffectDatabase<T>.OnValidate
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>.OnValidate
  nameWithType.vb: TMPEffectDatabase(Of T).OnValidate
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T).OnValidate
- uid: TMPEffects.Databases.TMPEffectDatabase`1.OnDestroy*
  commentId: Overload:TMPEffects.Databases.TMPEffectDatabase`1.OnDestroy
  href: TMPEffects.Databases.TMPEffectDatabase-1.html#TMPEffects_Databases_TMPEffectDatabase_1_OnDestroy
  name: OnDestroy
  nameWithType: TMPEffectDatabase<T>.OnDestroy
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>.OnDestroy
  nameWithType.vb: TMPEffectDatabase(Of T).OnDestroy
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T).OnDestroy
- uid: TMPEffects.Databases.TMPEffectDatabase`1.RaiseDatabaseChanged*
  commentId: Overload:TMPEffects.Databases.TMPEffectDatabase`1.RaiseDatabaseChanged
  href: TMPEffects.Databases.TMPEffectDatabase-1.html#TMPEffects_Databases_TMPEffectDatabase_1_RaiseDatabaseChanged
  name: RaiseDatabaseChanged
  nameWithType: TMPEffectDatabase<T>.RaiseDatabaseChanged
  fullName: TMPEffects.Databases.TMPEffectDatabase<T>.RaiseDatabaseChanged
  nameWithType.vb: TMPEffectDatabase(Of T).RaiseDatabaseChanged
  fullName.vb: TMPEffects.Databases.TMPEffectDatabase(Of T).RaiseDatabaseChanged
