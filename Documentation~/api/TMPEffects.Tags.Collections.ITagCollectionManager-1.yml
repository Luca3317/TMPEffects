### YamlMime:ManagedReference
items:
- uid: TMPEffects.Tags.Collections.ITagCollectionManager`1
  commentId: T:TMPEffects.Tags.Collections.ITagCollectionManager`1
  id: ITagCollectionManager`1
  parent: TMPEffects.Tags.Collections
  children:
  - TMPEffects.Tags.Collections.ITagCollectionManager`1.AddKey(`0)
  - TMPEffects.Tags.Collections.ITagCollectionManager`1.Item(`0)
  - TMPEffects.Tags.Collections.ITagCollectionManager`1.RemoveKey(`0)
  langs:
  - csharp
  - vb
  name: ITagCollectionManager<TKey>
  nameWithType: ITagCollectionManager<TKey>
  fullName: TMPEffects.Tags.Collections.ITagCollectionManager<TKey>
  type: Interface
  source:
    remote:
      path: Runtime/Tags/TagCollection/ITagCollectionManager.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: ITagCollectionManager
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ITagCollectionManager.cs
    startLine: 11
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: Interface for a manager of <xref href="TMPEffects.Tags.Collections.ITagCollection" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public interface ITagCollectionManager<TKey>
    typeParameters:
    - id: TKey
      description: ''
    content.vb: Public Interface ITagCollectionManager(Of TKey)
  nameWithType.vb: ITagCollectionManager(Of TKey)
  fullName.vb: TMPEffects.Tags.Collections.ITagCollectionManager(Of TKey)
  name.vb: ITagCollectionManager(Of TKey)
- uid: TMPEffects.Tags.Collections.ITagCollectionManager`1.Item(`0)
  commentId: P:TMPEffects.Tags.Collections.ITagCollectionManager`1.Item(`0)
  id: Item(`0)
  parent: TMPEffects.Tags.Collections.ITagCollectionManager`1
  langs:
  - csharp
  - vb
  name: this[TKey]
  nameWithType: ITagCollectionManager<TKey>.this[TKey]
  fullName: TMPEffects.Tags.Collections.ITagCollectionManager<TKey>.this[TKey]
  type: Property
  source:
    remote:
      path: Runtime/Tags/TagCollection/ITagCollectionManager.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: this[]
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ITagCollectionManager.cs
    startLine: 19
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: Get the <xref href="TMPEffects.Tags.Collections.ITagCollection" data-throw-if-not-resolved="false"></xref> associated with the given key.
  example: []
  syntax:
    content: ITagCollection this[TKey key] { get; }
    parameters:
    - id: key
      type: '{TKey}'
      description: The key.
    return:
      type: TMPEffects.Tags.Collections.ITagCollection
      description: The <xref href="TMPEffects.Tags.Collections.ITagCollection" data-throw-if-not-resolved="false"></xref> associated with the given key.
    content.vb: ReadOnly Default Property this[](key As TKey) As ITagCollection
  overload: TMPEffects.Tags.Collections.ITagCollectionManager`1.Item*
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: ''
  nameWithType.vb: ITagCollectionManager(Of TKey).this[](TKey)
  fullName.vb: TMPEffects.Tags.Collections.ITagCollectionManager(Of TKey).this[](TKey)
  name.vb: this[](TKey)
- uid: TMPEffects.Tags.Collections.ITagCollectionManager`1.AddKey(`0)
  commentId: M:TMPEffects.Tags.Collections.ITagCollectionManager`1.AddKey(`0)
  id: AddKey(`0)
  parent: TMPEffects.Tags.Collections.ITagCollectionManager`1
  langs:
  - csharp
  - vb
  name: AddKey(TKey)
  nameWithType: ITagCollectionManager<TKey>.AddKey(TKey)
  fullName: TMPEffects.Tags.Collections.ITagCollectionManager<TKey>.AddKey(TKey)
  type: Method
  source:
    remote:
      path: Runtime/Tags/TagCollection/ITagCollectionManager.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: AddKey
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ITagCollectionManager.cs
    startLine: 25
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: Add a key. This will automatically create an associated <xref href="TMPEffects.Tags.Collections.ITagCollection" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: ITagCollection AddKey(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to add.
    return:
      type: TMPEffects.Tags.Collections.ITagCollection
      description: The automatically created <xref href="TMPEffects.Tags.Collections.ITagCollection" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function AddKey(key As TKey) As ITagCollection
  overload: TMPEffects.Tags.Collections.ITagCollectionManager`1.AddKey*
  nameWithType.vb: ITagCollectionManager(Of TKey).AddKey(TKey)
  fullName.vb: TMPEffects.Tags.Collections.ITagCollectionManager(Of TKey).AddKey(TKey)
- uid: TMPEffects.Tags.Collections.ITagCollectionManager`1.RemoveKey(`0)
  commentId: M:TMPEffects.Tags.Collections.ITagCollectionManager`1.RemoveKey(`0)
  id: RemoveKey(`0)
  parent: TMPEffects.Tags.Collections.ITagCollectionManager`1
  langs:
  - csharp
  - vb
  name: RemoveKey(TKey)
  nameWithType: ITagCollectionManager<TKey>.RemoveKey(TKey)
  fullName: TMPEffects.Tags.Collections.ITagCollectionManager<TKey>.RemoveKey(TKey)
  type: Method
  source:
    remote:
      path: Runtime/Tags/TagCollection/ITagCollectionManager.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: RemoveKey
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ITagCollectionManager.cs
    startLine: 31
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: Remove a key.
  example: []
  syntax:
    content: bool RemoveKey(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: The key to remove.
    return:
      type: System.Boolean
      description: true if the key was removed; false otherwise.
    content.vb: Function RemoveKey(key As TKey) As Boolean
  overload: TMPEffects.Tags.Collections.ITagCollectionManager`1.RemoveKey*
  nameWithType.vb: ITagCollectionManager(Of TKey).RemoveKey(TKey)
  fullName.vb: TMPEffects.Tags.Collections.ITagCollectionManager(Of TKey).RemoveKey(TKey)
references:
- uid: TMPEffects.Tags.Collections.ITagCollection
  commentId: T:TMPEffects.Tags.Collections.ITagCollection
  parent: TMPEffects.Tags.Collections
  href: TMPEffects.Tags.Collections.ITagCollection.html
  name: ITagCollection
  nameWithType: ITagCollection
  fullName: TMPEffects.Tags.Collections.ITagCollection
- uid: TMPEffects.Tags.Collections
  commentId: N:TMPEffects.Tags.Collections
  href: TMPEffects.html
  name: TMPEffects.Tags.Collections
  nameWithType: TMPEffects.Tags.Collections
  fullName: TMPEffects.Tags.Collections
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Tags
    name: Tags
    href: TMPEffects.Tags.html
  - name: .
  - uid: TMPEffects.Tags.Collections
    name: Collections
    href: TMPEffects.Tags.Collections.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Tags
    name: Tags
    href: TMPEffects.Tags.html
  - name: .
  - uid: TMPEffects.Tags.Collections
    name: Collections
    href: TMPEffects.Tags.Collections.html
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception
  name: KeyNotFoundException
  nameWithType: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: TMPEffects.Tags.Collections.ITagCollectionManager`1.Item*
  commentId: Overload:TMPEffects.Tags.Collections.ITagCollectionManager`1.Item
  href: TMPEffects.Tags.Collections.ITagCollectionManager-1.html#TMPEffects_Tags_Collections_ITagCollectionManager_1_Item__0_
  name: this
  nameWithType: ITagCollectionManager<TKey>.this
  fullName: TMPEffects.Tags.Collections.ITagCollectionManager<TKey>.this
  nameWithType.vb: ITagCollectionManager(Of TKey).this[]
  fullName.vb: TMPEffects.Tags.Collections.ITagCollectionManager(Of TKey).this[]
  name.vb: this[]
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TMPEffects.Tags.Collections.ITagCollectionManager`1.AddKey*
  commentId: Overload:TMPEffects.Tags.Collections.ITagCollectionManager`1.AddKey
  href: TMPEffects.Tags.Collections.ITagCollectionManager-1.html#TMPEffects_Tags_Collections_ITagCollectionManager_1_AddKey__0_
  name: AddKey
  nameWithType: ITagCollectionManager<TKey>.AddKey
  fullName: TMPEffects.Tags.Collections.ITagCollectionManager<TKey>.AddKey
  nameWithType.vb: ITagCollectionManager(Of TKey).AddKey
  fullName.vb: TMPEffects.Tags.Collections.ITagCollectionManager(Of TKey).AddKey
- uid: TMPEffects.Tags.Collections.ITagCollectionManager`1.RemoveKey*
  commentId: Overload:TMPEffects.Tags.Collections.ITagCollectionManager`1.RemoveKey
  href: TMPEffects.Tags.Collections.ITagCollectionManager-1.html#TMPEffects_Tags_Collections_ITagCollectionManager_1_RemoveKey__0_
  name: RemoveKey
  nameWithType: ITagCollectionManager<TKey>.RemoveKey
  fullName: TMPEffects.Tags.Collections.ITagCollectionManager<TKey>.RemoveKey
  nameWithType.vb: ITagCollectionManager(Of TKey).RemoveKey
  fullName.vb: TMPEffects.Tags.Collections.ITagCollectionManager(Of TKey).RemoveKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
