### YamlMime:ManagedReference
items:
- uid: TMPEffects.TextProcessing.ParsingUtility
  commentId: T:TMPEffects.TextProcessing.ParsingUtility
  id: ParsingUtility
  parent: TMPEffects.TextProcessing
  children:
  - TMPEffects.TextProcessing.ParsingUtility.ColorKeyWords
  - TMPEffects.TextProcessing.ParsingUtility.GetNextTag(System.String,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  - TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict(System.String)
  - TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagType)
  - TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,TMPEffects.TextProcessing.ParsingUtility.TagType)
  - TMPEffects.TextProcessing.ParsingUtility.StringToAnchor(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2},System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  - TMPEffects.TextProcessing.ParsingUtility.StringToAnimationCurve(System.String,UnityEngine.AnimationCurve@,System.Collections.Generic.IDictionary{System.String,UnityEngine.AnimationCurve})
  - TMPEffects.TextProcessing.ParsingUtility.StringToBool(System.String,System.Boolean@,System.Collections.Generic.IDictionary{System.String,System.Boolean})
  - TMPEffects.TextProcessing.ParsingUtility.StringToColor(System.String,UnityEngine.Color@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Color})
  - TMPEffects.TextProcessing.ParsingUtility.StringToFloat(System.String,System.Single@,System.Collections.Generic.IDictionary{System.String,System.Single})
  - TMPEffects.TextProcessing.ParsingUtility.StringToInt(System.String,System.Int32@,System.Collections.Generic.IDictionary{System.String,System.Int32})
  - TMPEffects.TextProcessing.ParsingUtility.StringToVector2(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  - TMPEffects.TextProcessing.ParsingUtility.StringToVector2Offset(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  - TMPEffects.TextProcessing.ParsingUtility.StringToVector3(System.String,UnityEngine.Vector3@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3})
  - TMPEffects.TextProcessing.ParsingUtility.StringToVector3Offset(System.String,UnityEngine.Vector3@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3})
  - TMPEffects.TextProcessing.ParsingUtility.StringToWaveOffsetType(System.String,TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType@,System.Collections.Generic.IDictionary{System.String,TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType})
  - TMPEffects.TextProcessing.ParsingUtility.TryParseTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  langs:
  - csharp
  - vb
  name: ParsingUtility
  nameWithType: ParsingUtility
  fullName: TMPEffects.TextProcessing.ParsingUtility
  type: Class
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: ParsingUtility
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 15
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  summary: Utility methods for text processing and parsing.
  example: []
  syntax:
    content: public static class ParsingUtility
    content.vb: Public Module ParsingUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TMPEffects.TextProcessing.ParsingUtility.GetNextTag(System.String,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.GetNextTag(System.String,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  id: GetNextTag(System.String,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: GetNextTag(string, int, ref TagInfo, TagType)
  nameWithType: ParsingUtility.GetNextTag(string, int, ref ParsingUtility.TagInfo, ParsingUtility.TagType)
  fullName: TMPEffects.TextProcessing.ParsingUtility.GetNextTag(string, int, ref TMPEffects.TextProcessing.ParsingUtility.TagInfo, TMPEffects.TextProcessing.ParsingUtility.TagType)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: GetNextTag
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 83
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  summary: Get the next tag in <code class="paramref">text</code>, starting from <code class="paramref">startIndex</code>.
  example: []
  syntax:
    content: public static bool GetNextTag(string text, int startIndex, ref ParsingUtility.TagInfo tag, ParsingUtility.TagType type = TagType.Open | TagType.Close)
    parameters:
    - id: text
      type: System.String
      description: The full string.
    - id: startIndex
      type: System.Int32
      description: The index to start the search from.
    - id: tag
      type: TMPEffects.TextProcessing.ParsingUtility.TagInfo
      description: Reference to a <xref href="TMPEffects.TextProcessing.ParsingUtility.TagInfo" data-throw-if-not-resolved="false"></xref>. Will be set to the parsed tag if one is found.
    - id: type
      type: TMPEffects.TextProcessing.ParsingUtility.TagType
      description: The type of tag to get. Leave at default for either type.
    return:
      type: System.Boolean
      description: true if a next tag was found; false otherwise.
    content.vb: Public Shared Function GetNextTag(text As String, startIndex As Integer, tag As ParsingUtility.TagInfo, type As ParsingUtility.TagType = TagType.Open Or TagType.Close) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.GetNextTag*
  nameWithType.vb: ParsingUtility.GetNextTag(String, Integer, ParsingUtility.TagInfo, ParsingUtility.TagType)
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.GetNextTag(String, Integer, TMPEffects.TextProcessing.ParsingUtility.TagInfo, TMPEffects.TextProcessing.ParsingUtility.TagType)
  name.vb: GetNextTag(String, Integer, TagInfo, TagType)
- uid: TMPEffects.TextProcessing.ParsingUtility.TryParseTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.TryParseTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  id: TryParseTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: TryParseTag(string, int, int, ref TagInfo, TagType)
  nameWithType: ParsingUtility.TryParseTag(string, int, int, ref ParsingUtility.TagInfo, ParsingUtility.TagType)
  fullName: TMPEffects.TextProcessing.ParsingUtility.TryParseTag(string, int, int, ref TMPEffects.TextProcessing.ParsingUtility.TagInfo, TMPEffects.TextProcessing.ParsingUtility.TagType)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: TryParseTag
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 127
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  summary: Attempt to parse a tag from the substring of <code class="paramref">text</code> given by <code class="paramref">startIndex</code> and <code class="paramref">endIndex</code>.
  example: []
  syntax:
    content: public static bool TryParseTag(string text, int startIndex, int endIndex, ref ParsingUtility.TagInfo tag, ParsingUtility.TagType type = TagType.Open | TagType.Close)
    parameters:
    - id: text
      type: System.String
      description: The full string.
    - id: startIndex
      type: System.Int32
      description: Start index of the substring.
    - id: endIndex
      type: System.Int32
      description: End index of the substring.
    - id: tag
      type: TMPEffects.TextProcessing.ParsingUtility.TagInfo
      description: Reference to a <xref href="TMPEffects.TextProcessing.ParsingUtility.TagInfo" data-throw-if-not-resolved="false"></xref>. Will be set to the parsed tag if successful.
    - id: type
      type: TMPEffects.TextProcessing.ParsingUtility.TagType
      description: The type of tag to check for. Leave at default for either type.
    return:
      type: System.Boolean
      description: true if a tag was successfully parsed from the substring; false otherwise.
    content.vb: Public Shared Function TryParseTag(text As String, startIndex As Integer, endIndex As Integer, tag As ParsingUtility.TagInfo, type As ParsingUtility.TagType = TagType.Open Or TagType.Close) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.TryParseTag*
  nameWithType.vb: ParsingUtility.TryParseTag(String, Integer, Integer, ParsingUtility.TagInfo, ParsingUtility.TagType)
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.TryParseTag(String, Integer, Integer, TMPEffects.TextProcessing.ParsingUtility.TagInfo, TMPEffects.TextProcessing.ParsingUtility.TagType)
  name.vb: TryParseTag(String, Integer, Integer, TagInfo, TagType)
- uid: TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagType)
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagType)
  id: IsTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagType)
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: IsTag(string, int, int, TagType)
  nameWithType: ParsingUtility.IsTag(string, int, int, ParsingUtility.TagType)
  fullName: TMPEffects.TextProcessing.ParsingUtility.IsTag(string, int, int, TMPEffects.TextProcessing.ParsingUtility.TagType)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: IsTag
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 173
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  summary: Checks if the given string contains a substring starting at <code class="paramref">startIndex</code>, going up to <code class="paramref">maxIndex</code>, that is a well formed tag.
  example: []
  syntax:
    content: public static bool IsTag(string text, int startIndex, int maxIndex = -1, ParsingUtility.TagType type = TagType.Open | TagType.Close)
    parameters:
    - id: text
      type: System.String
      description: The string to check.
    - id: startIndex
      type: System.Int32
      description: The start index of the substring.
    - id: maxIndex
      type: System.Int32
      description: The end index of the substring. Leave at default to set to length of <code class="paramref">text</code>.
    - id: type
      type: TMPEffects.TextProcessing.ParsingUtility.TagType
    return:
      type: System.Boolean
      description: true if the given string contains a substring starting at <code class="paramref">startIndex</code>, going up to <code class="paramref">maxIndex</code>, that is a well formed tag; otherwise false.
    content.vb: Public Shared Function IsTag(text As String, startIndex As Integer, maxIndex As Integer = -1, type As ParsingUtility.TagType = TagType.Open Or TagType.Close) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.IsTag*
  nameWithType.vb: ParsingUtility.IsTag(String, Integer, Integer, ParsingUtility.TagType)
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.IsTag(String, Integer, Integer, TMPEffects.TextProcessing.ParsingUtility.TagType)
  name.vb: IsTag(String, Integer, Integer, TagType)
- uid: TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,TMPEffects.TextProcessing.ParsingUtility.TagType)
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,TMPEffects.TextProcessing.ParsingUtility.TagType)
  id: IsTag(System.String,TMPEffects.TextProcessing.ParsingUtility.TagType)
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: IsTag(string, TagType)
  nameWithType: ParsingUtility.IsTag(string, ParsingUtility.TagType)
  fullName: TMPEffects.TextProcessing.ParsingUtility.IsTag(string, TMPEffects.TextProcessing.ParsingUtility.TagType)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: IsTag
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 222
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  summary: Checks if the given string is a well formed tag (of the given type, if supplied).
  example: []
  syntax:
    content: public static bool IsTag(string tag, ParsingUtility.TagType type = TagType.Open | TagType.Close)
    parameters:
    - id: tag
      type: System.String
      description: The string to check.
    - id: type
      type: TMPEffects.TextProcessing.ParsingUtility.TagType
      description: The type of tag to check for. Leave default for either type.
    return:
      type: System.Boolean
      description: true if the the given string is a tag (of the given type, if supplied); otherwise false.
    content.vb: Public Shared Function IsTag(tag As String, type As ParsingUtility.TagType = TagType.Open Or TagType.Close) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.IsTag*
  nameWithType.vb: ParsingUtility.IsTag(String, ParsingUtility.TagType)
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.IsTag(String, TMPEffects.TextProcessing.ParsingUtility.TagType)
  name.vb: IsTag(String, TagType)
- uid: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict(System.String)
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict(System.String)
  id: GetTagParametersDict(System.String)
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: GetTagParametersDict(string)
  nameWithType: ParsingUtility.GetTagParametersDict(string)
  fullName: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict(string)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: GetTagParametersDict
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 239
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static Dictionary<string, string> GetTagParametersDict(string tag)
    parameters:
    - id: tag
      type: System.String
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Shared Function GetTagParametersDict(tag As String) As Dictionary(Of String, String)
  overload: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict*
  nameWithType.vb: ParsingUtility.GetTagParametersDict(String)
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict(String)
  name.vb: GetTagParametersDict(String)
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToInt(System.String,System.Int32@,System.Collections.Generic.IDictionary{System.String,System.Int32})
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.StringToInt(System.String,System.Int32@,System.Collections.Generic.IDictionary{System.String,System.Int32})
  id: StringToInt(System.String,System.Int32@,System.Collections.Generic.IDictionary{System.String,System.Int32})
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: StringToInt(string, out int, IDictionary<string, int>)
  nameWithType: ParsingUtility.StringToInt(string, out int, IDictionary<string, int>)
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToInt(string, out int, System.Collections.Generic.IDictionary<string, int>)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StringToInt
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 371
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static bool StringToInt(string str, out int result, IDictionary<string, int> keywords = null)
    parameters:
    - id: str
      type: System.String
    - id: result
      type: System.Int32
    - id: keywords
      type: System.Collections.Generic.IDictionary{System.String,System.Int32}
    return:
      type: System.Boolean
    content.vb: Public Shared Function StringToInt(str As String, result As Integer, keywords As IDictionary(Of String, Integer) = Nothing) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.StringToInt*
  nameWithType.vb: ParsingUtility.StringToInt(String, Integer, IDictionary(Of String, Integer))
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.StringToInt(String, Integer, System.Collections.Generic.IDictionary(Of String, Integer))
  name.vb: StringToInt(String, Integer, IDictionary(Of String, Integer))
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToFloat(System.String,System.Single@,System.Collections.Generic.IDictionary{System.String,System.Single})
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.StringToFloat(System.String,System.Single@,System.Collections.Generic.IDictionary{System.String,System.Single})
  id: StringToFloat(System.String,System.Single@,System.Collections.Generic.IDictionary{System.String,System.Single})
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: StringToFloat(string, out float, IDictionary<string, float>)
  nameWithType: ParsingUtility.StringToFloat(string, out float, IDictionary<string, float>)
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToFloat(string, out float, System.Collections.Generic.IDictionary<string, float>)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StringToFloat
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 385
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static bool StringToFloat(string str, out float result, IDictionary<string, float> keywords = null)
    parameters:
    - id: str
      type: System.String
    - id: result
      type: System.Single
    - id: keywords
      type: System.Collections.Generic.IDictionary{System.String,System.Single}
    return:
      type: System.Boolean
    content.vb: Public Shared Function StringToFloat(str As String, result As Single, keywords As IDictionary(Of String, Single) = Nothing) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.StringToFloat*
  nameWithType.vb: ParsingUtility.StringToFloat(String, Single, IDictionary(Of String, Single))
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.StringToFloat(String, Single, System.Collections.Generic.IDictionary(Of String, Single))
  name.vb: StringToFloat(String, Single, IDictionary(Of String, Single))
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToBool(System.String,System.Boolean@,System.Collections.Generic.IDictionary{System.String,System.Boolean})
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.StringToBool(System.String,System.Boolean@,System.Collections.Generic.IDictionary{System.String,System.Boolean})
  id: StringToBool(System.String,System.Boolean@,System.Collections.Generic.IDictionary{System.String,System.Boolean})
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: StringToBool(string, out bool, IDictionary<string, bool>)
  nameWithType: ParsingUtility.StringToBool(string, out bool, IDictionary<string, bool>)
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToBool(string, out bool, System.Collections.Generic.IDictionary<string, bool>)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StringToBool
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 399
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static bool StringToBool(string str, out bool result, IDictionary<string, bool> keywords = null)
    parameters:
    - id: str
      type: System.String
    - id: result
      type: System.Boolean
    - id: keywords
      type: System.Collections.Generic.IDictionary{System.String,System.Boolean}
    return:
      type: System.Boolean
    content.vb: Public Shared Function StringToBool(str As String, result As Boolean, keywords As IDictionary(Of String, Boolean) = Nothing) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.StringToBool*
  nameWithType.vb: ParsingUtility.StringToBool(String, Boolean, IDictionary(Of String, Boolean))
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.StringToBool(String, Boolean, System.Collections.Generic.IDictionary(Of String, Boolean))
  name.vb: StringToBool(String, Boolean, IDictionary(Of String, Boolean))
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToVector2(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.StringToVector2(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  id: StringToVector2(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: StringToVector2(string, out Vector2, IDictionary<string, Vector2>)
  nameWithType: ParsingUtility.StringToVector2(string, out Vector2, IDictionary<string, Vector2>)
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToVector2(string, out UnityEngine.Vector2, System.Collections.Generic.IDictionary<string, UnityEngine.Vector2>)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StringToVector2
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 416
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static bool StringToVector2(string str, out Vector2 result, IDictionary<string, Vector2> keywords = null)
    parameters:
    - id: str
      type: System.String
    - id: result
      type: UnityEngine.Vector2
    - id: keywords
      type: System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Shared Function StringToVector2(str As String, result As Vector2, keywords As IDictionary(Of String, Vector2) = Nothing) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.StringToVector2*
  nameWithType.vb: ParsingUtility.StringToVector2(String, Vector2, IDictionary(Of String, Vector2))
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.StringToVector2(String, UnityEngine.Vector2, System.Collections.Generic.IDictionary(Of String, UnityEngine.Vector2))
  name.vb: StringToVector2(String, Vector2, IDictionary(Of String, Vector2))
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToVector3(System.String,UnityEngine.Vector3@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3})
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.StringToVector3(System.String,UnityEngine.Vector3@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3})
  id: StringToVector3(System.String,UnityEngine.Vector3@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3})
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: StringToVector3(string, out Vector3, IDictionary<string, Vector3>)
  nameWithType: ParsingUtility.StringToVector3(string, out Vector3, IDictionary<string, Vector3>)
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToVector3(string, out UnityEngine.Vector3, System.Collections.Generic.IDictionary<string, UnityEngine.Vector3>)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StringToVector3
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 454
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static bool StringToVector3(string str, out Vector3 result, IDictionary<string, Vector3> keywords = null)
    parameters:
    - id: str
      type: System.String
    - id: result
      type: UnityEngine.Vector3
    - id: keywords
      type: System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3}
    return:
      type: System.Boolean
    content.vb: Public Shared Function StringToVector3(str As String, result As Vector3, keywords As IDictionary(Of String, Vector3) = Nothing) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.StringToVector3*
  nameWithType.vb: ParsingUtility.StringToVector3(String, Vector3, IDictionary(Of String, Vector3))
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.StringToVector3(String, UnityEngine.Vector3, System.Collections.Generic.IDictionary(Of String, UnityEngine.Vector3))
  name.vb: StringToVector3(String, Vector3, IDictionary(Of String, Vector3))
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToVector2Offset(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.StringToVector2Offset(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  id: StringToVector2Offset(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: StringToVector2Offset(string, out Vector2, IDictionary<string, Vector2>)
  nameWithType: ParsingUtility.StringToVector2Offset(string, out Vector2, IDictionary<string, Vector2>)
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToVector2Offset(string, out UnityEngine.Vector2, System.Collections.Generic.IDictionary<string, UnityEngine.Vector2>)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StringToVector2Offset
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 506
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static bool StringToVector2Offset(string str, out Vector2 result, IDictionary<string, Vector2> keywords = null)
    parameters:
    - id: str
      type: System.String
    - id: result
      type: UnityEngine.Vector2
    - id: keywords
      type: System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Shared Function StringToVector2Offset(str As String, result As Vector2, keywords As IDictionary(Of String, Vector2) = Nothing) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.StringToVector2Offset*
  nameWithType.vb: ParsingUtility.StringToVector2Offset(String, Vector2, IDictionary(Of String, Vector2))
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.StringToVector2Offset(String, UnityEngine.Vector2, System.Collections.Generic.IDictionary(Of String, UnityEngine.Vector2))
  name.vb: StringToVector2Offset(String, Vector2, IDictionary(Of String, Vector2))
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToVector3Offset(System.String,UnityEngine.Vector3@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3})
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.StringToVector3Offset(System.String,UnityEngine.Vector3@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3})
  id: StringToVector3Offset(System.String,UnityEngine.Vector3@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3})
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: StringToVector3Offset(string, out Vector3, IDictionary<string, Vector3>)
  nameWithType: ParsingUtility.StringToVector3Offset(string, out Vector3, IDictionary<string, Vector3>)
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToVector3Offset(string, out UnityEngine.Vector3, System.Collections.Generic.IDictionary<string, UnityEngine.Vector3>)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StringToVector3Offset
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 527
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static bool StringToVector3Offset(string str, out Vector3 result, IDictionary<string, Vector3> keywords = null)
    parameters:
    - id: str
      type: System.String
    - id: result
      type: UnityEngine.Vector3
    - id: keywords
      type: System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3}
    return:
      type: System.Boolean
    content.vb: Public Shared Function StringToVector3Offset(str As String, result As Vector3, keywords As IDictionary(Of String, Vector3) = Nothing) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.StringToVector3Offset*
  nameWithType.vb: ParsingUtility.StringToVector3Offset(String, Vector3, IDictionary(Of String, Vector3))
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.StringToVector3Offset(String, UnityEngine.Vector3, System.Collections.Generic.IDictionary(Of String, UnityEngine.Vector3))
  name.vb: StringToVector3Offset(String, Vector3, IDictionary(Of String, Vector3))
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToAnchor(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2},System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.StringToAnchor(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2},System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  id: StringToAnchor(System.String,UnityEngine.Vector2@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2},System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2})
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: StringToAnchor(string, out Vector2, IDictionary<string, Vector2>, IDictionary<string, Vector2>)
  nameWithType: ParsingUtility.StringToAnchor(string, out Vector2, IDictionary<string, Vector2>, IDictionary<string, Vector2>)
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToAnchor(string, out UnityEngine.Vector2, System.Collections.Generic.IDictionary<string, UnityEngine.Vector2>, System.Collections.Generic.IDictionary<string, UnityEngine.Vector2>)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StringToAnchor
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 548
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static bool StringToAnchor(string str, out Vector2 result, IDictionary<string, Vector2> anchorKeywords = null, IDictionary<string, Vector2> vectorKeywords = null)
    parameters:
    - id: str
      type: System.String
    - id: result
      type: UnityEngine.Vector2
    - id: anchorKeywords
      type: System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2}
    - id: vectorKeywords
      type: System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Shared Function StringToAnchor(str As String, result As Vector2, anchorKeywords As IDictionary(Of String, Vector2) = Nothing, vectorKeywords As IDictionary(Of String, Vector2) = Nothing) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.StringToAnchor*
  nameWithType.vb: ParsingUtility.StringToAnchor(String, Vector2, IDictionary(Of String, Vector2), IDictionary(Of String, Vector2))
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.StringToAnchor(String, UnityEngine.Vector2, System.Collections.Generic.IDictionary(Of String, UnityEngine.Vector2), System.Collections.Generic.IDictionary(Of String, UnityEngine.Vector2))
  name.vb: StringToAnchor(String, Vector2, IDictionary(Of String, Vector2), IDictionary(Of String, Vector2))
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToAnimationCurve(System.String,UnityEngine.AnimationCurve@,System.Collections.Generic.IDictionary{System.String,UnityEngine.AnimationCurve})
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.StringToAnimationCurve(System.String,UnityEngine.AnimationCurve@,System.Collections.Generic.IDictionary{System.String,UnityEngine.AnimationCurve})
  id: StringToAnimationCurve(System.String,UnityEngine.AnimationCurve@,System.Collections.Generic.IDictionary{System.String,UnityEngine.AnimationCurve})
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: StringToAnimationCurve(string, out AnimationCurve, IDictionary<string, AnimationCurve>)
  nameWithType: ParsingUtility.StringToAnimationCurve(string, out AnimationCurve, IDictionary<string, AnimationCurve>)
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToAnimationCurve(string, out UnityEngine.AnimationCurve, System.Collections.Generic.IDictionary<string, UnityEngine.AnimationCurve>)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StringToAnimationCurve
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 583
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static bool StringToAnimationCurve(string str, out AnimationCurve result, IDictionary<string, AnimationCurve> keywords = null)
    parameters:
    - id: str
      type: System.String
    - id: result
      type: UnityEngine.AnimationCurve
    - id: keywords
      type: System.Collections.Generic.IDictionary{System.String,UnityEngine.AnimationCurve}
    return:
      type: System.Boolean
    content.vb: Public Shared Function StringToAnimationCurve(str As String, result As AnimationCurve, keywords As IDictionary(Of String, AnimationCurve) = Nothing) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.StringToAnimationCurve*
  nameWithType.vb: ParsingUtility.StringToAnimationCurve(String, AnimationCurve, IDictionary(Of String, AnimationCurve))
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.StringToAnimationCurve(String, UnityEngine.AnimationCurve, System.Collections.Generic.IDictionary(Of String, UnityEngine.AnimationCurve))
  name.vb: StringToAnimationCurve(String, AnimationCurve, IDictionary(Of String, AnimationCurve))
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToWaveOffsetType(System.String,TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType@,System.Collections.Generic.IDictionary{System.String,TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType})
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.StringToWaveOffsetType(System.String,TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType@,System.Collections.Generic.IDictionary{System.String,TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType})
  id: StringToWaveOffsetType(System.String,TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType@,System.Collections.Generic.IDictionary{System.String,TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType})
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: StringToWaveOffsetType(string, out WaveOffsetType, IDictionary<string, WaveOffsetType>)
  nameWithType: ParsingUtility.StringToWaveOffsetType(string, out AnimationUtility.WaveOffsetType, IDictionary<string, AnimationUtility.WaveOffsetType>)
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToWaveOffsetType(string, out TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType, System.Collections.Generic.IDictionary<string, TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType>)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StringToWaveOffsetType
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 615
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static bool StringToWaveOffsetType(string str, out AnimationUtility.WaveOffsetType result, IDictionary<string, AnimationUtility.WaveOffsetType> keywords = null)
    parameters:
    - id: str
      type: System.String
    - id: result
      type: TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType
    - id: keywords
      type: System.Collections.Generic.IDictionary{System.String,TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType}
    return:
      type: System.Boolean
    content.vb: Public Shared Function StringToWaveOffsetType(str As String, result As AnimationUtility.WaveOffsetType, keywords As IDictionary(Of String, AnimationUtility.WaveOffsetType) = Nothing) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.StringToWaveOffsetType*
  nameWithType.vb: ParsingUtility.StringToWaveOffsetType(String, AnimationUtility.WaveOffsetType, IDictionary(Of String, AnimationUtility.WaveOffsetType))
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.StringToWaveOffsetType(String, TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType, System.Collections.Generic.IDictionary(Of String, TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType))
  name.vb: StringToWaveOffsetType(String, WaveOffsetType, IDictionary(Of String, WaveOffsetType))
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToColor(System.String,UnityEngine.Color@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Color})
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.StringToColor(System.String,UnityEngine.Color@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Color})
  id: StringToColor(System.String,UnityEngine.Color@,System.Collections.Generic.IDictionary{System.String,UnityEngine.Color})
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: StringToColor(string, out Color, IDictionary<string, Color>)
  nameWithType: ParsingUtility.StringToColor(string, out Color, IDictionary<string, Color>)
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToColor(string, out UnityEngine.Color, System.Collections.Generic.IDictionary<string, UnityEngine.Color>)
  type: Method
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StringToColor
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 656
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static bool StringToColor(string str, out Color result, IDictionary<string, Color> keywords = null)
    parameters:
    - id: str
      type: System.String
    - id: result
      type: UnityEngine.Color
    - id: keywords
      type: System.Collections.Generic.IDictionary{System.String,UnityEngine.Color}
    return:
      type: System.Boolean
    content.vb: Public Shared Function StringToColor(str As String, result As Color, keywords As IDictionary(Of String, Color) = Nothing) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.StringToColor*
  nameWithType.vb: ParsingUtility.StringToColor(String, Color, IDictionary(Of String, Color))
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.StringToColor(String, UnityEngine.Color, System.Collections.Generic.IDictionary(Of String, UnityEngine.Color))
  name.vb: StringToColor(String, Color, IDictionary(Of String, Color))
- uid: TMPEffects.TextProcessing.ParsingUtility.ColorKeyWords
  commentId: F:TMPEffects.TextProcessing.ParsingUtility.ColorKeyWords
  id: ColorKeyWords
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: ColorKeyWords
  nameWithType: ParsingUtility.ColorKeyWords
  fullName: TMPEffects.TextProcessing.ParsingUtility.ColorKeyWords
  type: Field
  source:
    remote:
      path: Runtime/TextProcessing/ParsingUtility.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: ColorKeyWords
    path: ../Assets/TMPEffects OLD/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 823
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.TextProcessing
  syntax:
    content: public static readonly ReadOnlyDictionary<string, Color> ColorKeyWords
    return:
      type: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,UnityEngine.Color}
    content.vb: Public Shared ReadOnly ColorKeyWords As ReadOnlyDictionary(Of String, Color)
references:
- uid: TMPEffects.TextProcessing
  commentId: N:TMPEffects.TextProcessing
  href: TMPEffects.html
  name: TMPEffects.TextProcessing
  nameWithType: TMPEffects.TextProcessing
  fullName: TMPEffects.TextProcessing
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TextProcessing
    name: TextProcessing
    href: TMPEffects.TextProcessing.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TextProcessing
    name: TextProcessing
    href: TMPEffects.TextProcessing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TMPEffects.TextProcessing.ParsingUtility.TagInfo
  commentId: T:TMPEffects.TextProcessing.ParsingUtility.TagInfo
  parent: TMPEffects.TextProcessing
  href: TMPEffects.TextProcessing.ParsingUtility.html
  name: ParsingUtility.TagInfo
  nameWithType: ParsingUtility.TagInfo
  fullName: TMPEffects.TextProcessing.ParsingUtility.TagInfo
  spec.csharp:
  - uid: TMPEffects.TextProcessing.ParsingUtility
    name: ParsingUtility
    href: TMPEffects.TextProcessing.ParsingUtility.html
  - name: .
  - uid: TMPEffects.TextProcessing.ParsingUtility.TagInfo
    name: TagInfo
    href: TMPEffects.TextProcessing.ParsingUtility.TagInfo.html
  spec.vb:
  - uid: TMPEffects.TextProcessing.ParsingUtility
    name: ParsingUtility
    href: TMPEffects.TextProcessing.ParsingUtility.html
  - name: .
  - uid: TMPEffects.TextProcessing.ParsingUtility.TagInfo
    name: TagInfo
    href: TMPEffects.TextProcessing.ParsingUtility.TagInfo.html
- uid: TMPEffects.TextProcessing.ParsingUtility.GetNextTag*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.GetNextTag
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_GetNextTag_System_String_System_Int32_TMPEffects_TextProcessing_ParsingUtility_TagInfo__TMPEffects_TextProcessing_ParsingUtility_TagType_
  name: GetNextTag
  nameWithType: ParsingUtility.GetNextTag
  fullName: TMPEffects.TextProcessing.ParsingUtility.GetNextTag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TMPEffects.TextProcessing.ParsingUtility.TagType
  commentId: T:TMPEffects.TextProcessing.ParsingUtility.TagType
  parent: TMPEffects.TextProcessing
  href: TMPEffects.TextProcessing.ParsingUtility.html
  name: ParsingUtility.TagType
  nameWithType: ParsingUtility.TagType
  fullName: TMPEffects.TextProcessing.ParsingUtility.TagType
  spec.csharp:
  - uid: TMPEffects.TextProcessing.ParsingUtility
    name: ParsingUtility
    href: TMPEffects.TextProcessing.ParsingUtility.html
  - name: .
  - uid: TMPEffects.TextProcessing.ParsingUtility.TagType
    name: TagType
    href: TMPEffects.TextProcessing.ParsingUtility.TagType.html
  spec.vb:
  - uid: TMPEffects.TextProcessing.ParsingUtility
    name: ParsingUtility
    href: TMPEffects.TextProcessing.ParsingUtility.html
  - name: .
  - uid: TMPEffects.TextProcessing.ParsingUtility.TagType
    name: TagType
    href: TMPEffects.TextProcessing.ParsingUtility.TagType.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TMPEffects.TextProcessing.ParsingUtility.TryParseTag*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.TryParseTag
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_TryParseTag_System_String_System_Int32_System_Int32_TMPEffects_TextProcessing_ParsingUtility_TagInfo__TMPEffects_TextProcessing_ParsingUtility_TagType_
  name: TryParseTag
  nameWithType: ParsingUtility.TryParseTag
  fullName: TMPEffects.TextProcessing.ParsingUtility.TryParseTag
- uid: TMPEffects.TextProcessing.ParsingUtility.IsTag*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.IsTag
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_IsTag_System_String_System_Int32_System_Int32_TMPEffects_TextProcessing_ParsingUtility_TagType_
  name: IsTag
  nameWithType: ParsingUtility.IsTag
  fullName: TMPEffects.TextProcessing.ParsingUtility.IsTag
- uid: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_GetTagParametersDict_System_String_
  name: GetTagParametersDict
  nameWithType: ParsingUtility.GetTagParametersDict
  fullName: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToInt*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.StringToInt
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_StringToInt_System_String_System_Int32__System_Collections_Generic_IDictionary_System_String_System_Int32__
  name: StringToInt
  nameWithType: ParsingUtility.StringToInt
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToInt
- uid: System.Collections.Generic.IDictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, int>
  nameWithType: IDictionary<string, int>
  fullName: System.Collections.Generic.IDictionary<string, int>
  nameWithType.vb: IDictionary(Of String, Integer)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Integer)
  name.vb: IDictionary(Of String, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToFloat*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.StringToFloat
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_StringToFloat_System_String_System_Single__System_Collections_Generic_IDictionary_System_String_System_Single__
  name: StringToFloat
  nameWithType: ParsingUtility.StringToFloat
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToFloat
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Collections.Generic.IDictionary{System.String,System.Single}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, float>
  nameWithType: IDictionary<string, float>
  fullName: System.Collections.Generic.IDictionary<string, float>
  nameWithType.vb: IDictionary(Of String, Single)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Single)
  name.vb: IDictionary(Of String, Single)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToBool*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.StringToBool
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_StringToBool_System_String_System_Boolean__System_Collections_Generic_IDictionary_System_String_System_Boolean__
  name: StringToBool
  nameWithType: ParsingUtility.StringToBool
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToBool
- uid: System.Collections.Generic.IDictionary{System.String,System.Boolean}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Boolean}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, bool>
  nameWithType: IDictionary<string, bool>
  fullName: System.Collections.Generic.IDictionary<string, bool>
  nameWithType.vb: IDictionary(Of String, Boolean)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Boolean)
  name.vb: IDictionary(Of String, Boolean)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToVector2*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.StringToVector2
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_StringToVector2_System_String_UnityEngine_Vector2__System_Collections_Generic_IDictionary_System_String_UnityEngine_Vector2__
  name: StringToVector2
  nameWithType: ParsingUtility.StringToVector2
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToVector2
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2}
  commentId: T:System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, Vector2>
  nameWithType: IDictionary<string, Vector2>
  fullName: System.Collections.Generic.IDictionary<string, UnityEngine.Vector2>
  nameWithType.vb: IDictionary(Of String, Vector2)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, UnityEngine.Vector2)
  name.vb: IDictionary(Of String, Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToVector3*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.StringToVector3
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_StringToVector3_System_String_UnityEngine_Vector3__System_Collections_Generic_IDictionary_System_String_UnityEngine_Vector3__
  name: StringToVector3
  nameWithType: ParsingUtility.StringToVector3
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToVector3
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3}
  commentId: T:System.Collections.Generic.IDictionary{System.String,UnityEngine.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, Vector3>
  nameWithType: IDictionary<string, Vector3>
  fullName: System.Collections.Generic.IDictionary<string, UnityEngine.Vector3>
  nameWithType.vb: IDictionary(Of String, Vector3)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, UnityEngine.Vector3)
  name.vb: IDictionary(Of String, Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: )
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToVector2Offset*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.StringToVector2Offset
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_StringToVector2Offset_System_String_UnityEngine_Vector2__System_Collections_Generic_IDictionary_System_String_UnityEngine_Vector2__
  name: StringToVector2Offset
  nameWithType: ParsingUtility.StringToVector2Offset
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToVector2Offset
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToVector3Offset*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.StringToVector3Offset
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_StringToVector3Offset_System_String_UnityEngine_Vector3__System_Collections_Generic_IDictionary_System_String_UnityEngine_Vector3__
  name: StringToVector3Offset
  nameWithType: ParsingUtility.StringToVector3Offset
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToVector3Offset
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToAnchor*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.StringToAnchor
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_StringToAnchor_System_String_UnityEngine_Vector2__System_Collections_Generic_IDictionary_System_String_UnityEngine_Vector2__System_Collections_Generic_IDictionary_System_String_UnityEngine_Vector2__
  name: StringToAnchor
  nameWithType: ParsingUtility.StringToAnchor
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToAnchor
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToAnimationCurve*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.StringToAnimationCurve
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_StringToAnimationCurve_System_String_UnityEngine_AnimationCurve__System_Collections_Generic_IDictionary_System_String_UnityEngine_AnimationCurve__
  name: StringToAnimationCurve
  nameWithType: ParsingUtility.StringToAnimationCurve
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToAnimationCurve
- uid: UnityEngine.AnimationCurve
  commentId: T:UnityEngine.AnimationCurve
  parent: UnityEngine
  isExternal: true
  name: AnimationCurve
  nameWithType: AnimationCurve
  fullName: UnityEngine.AnimationCurve
- uid: System.Collections.Generic.IDictionary{System.String,UnityEngine.AnimationCurve}
  commentId: T:System.Collections.Generic.IDictionary{System.String,UnityEngine.AnimationCurve}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, AnimationCurve>
  nameWithType: IDictionary<string, AnimationCurve>
  fullName: System.Collections.Generic.IDictionary<string, UnityEngine.AnimationCurve>
  nameWithType.vb: IDictionary(Of String, AnimationCurve)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, UnityEngine.AnimationCurve)
  name.vb: IDictionary(Of String, AnimationCurve)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.AnimationCurve
    name: AnimationCurve
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.AnimationCurve
    name: AnimationCurve
    isExternal: true
  - name: )
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToWaveOffsetType*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.StringToWaveOffsetType
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_StringToWaveOffsetType_System_String_TMPEffects_TMPAnimations_AnimationUtility_WaveOffsetType__System_Collections_Generic_IDictionary_System_String_TMPEffects_TMPAnimations_AnimationUtility_WaveOffsetType__
  name: StringToWaveOffsetType
  nameWithType: ParsingUtility.StringToWaveOffsetType
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToWaveOffsetType
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType
  commentId: T:TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType
  parent: TMPEffects.TMPAnimations
  href: TMPEffects.TMPAnimations.AnimationUtility.html
  name: AnimationUtility.WaveOffsetType
  nameWithType: AnimationUtility.WaveOffsetType
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType
  spec.csharp:
  - uid: TMPEffects.TMPAnimations.AnimationUtility
    name: AnimationUtility
    href: TMPEffects.TMPAnimations.AnimationUtility.html
  - name: .
  - uid: TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType
    name: WaveOffsetType
    href: TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType.html
  spec.vb:
  - uid: TMPEffects.TMPAnimations.AnimationUtility
    name: AnimationUtility
    href: TMPEffects.TMPAnimations.AnimationUtility.html
  - name: .
  - uid: TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType
    name: WaveOffsetType
    href: TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType.html
- uid: System.Collections.Generic.IDictionary{System.String,TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType}
  commentId: T:System.Collections.Generic.IDictionary{System.String,TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, AnimationUtility.WaveOffsetType>
  nameWithType: IDictionary<string, AnimationUtility.WaveOffsetType>
  fullName: System.Collections.Generic.IDictionary<string, TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType>
  nameWithType.vb: IDictionary(Of String, AnimationUtility.WaveOffsetType)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType)
  name.vb: IDictionary(Of String, AnimationUtility.WaveOffsetType)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TMPEffects.TMPAnimations.AnimationUtility
    name: AnimationUtility
    href: TMPEffects.TMPAnimations.AnimationUtility.html
  - name: .
  - uid: TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType
    name: WaveOffsetType
    href: TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: TMPEffects.TMPAnimations.AnimationUtility
    name: AnimationUtility
    href: TMPEffects.TMPAnimations.AnimationUtility.html
  - name: .
  - uid: TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType
    name: WaveOffsetType
    href: TMPEffects.TMPAnimations.AnimationUtility.WaveOffsetType.html
  - name: )
- uid: TMPEffects.TMPAnimations
  commentId: N:TMPEffects.TMPAnimations
  href: TMPEffects.html
  name: TMPEffects.TMPAnimations
  nameWithType: TMPEffects.TMPAnimations
  fullName: TMPEffects.TMPAnimations
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
- uid: TMPEffects.TextProcessing.ParsingUtility.StringToColor*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.StringToColor
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_StringToColor_System_String_UnityEngine_Color__System_Collections_Generic_IDictionary_System_String_UnityEngine_Color__
  name: StringToColor
  nameWithType: ParsingUtility.StringToColor
  fullName: TMPEffects.TextProcessing.ParsingUtility.StringToColor
- uid: UnityEngine.Color
  commentId: T:UnityEngine.Color
  parent: UnityEngine
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: System.Collections.Generic.IDictionary{System.String,UnityEngine.Color}
  commentId: T:System.Collections.Generic.IDictionary{System.String,UnityEngine.Color}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, Color>
  nameWithType: IDictionary<string, Color>
  fullName: System.Collections.Generic.IDictionary<string, UnityEngine.Color>
  nameWithType.vb: IDictionary(Of String, Color)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, UnityEngine.Color)
  name.vb: IDictionary(Of String, Color)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary{System.String,UnityEngine.Color}
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary{System.String,UnityEngine.Color}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<string, Color>
  nameWithType: ReadOnlyDictionary<string, Color>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<string, UnityEngine.Color>
  nameWithType.vb: ReadOnlyDictionary(Of String, Color)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of String, UnityEngine.Color)
  name.vb: ReadOnlyDictionary(Of String, Color)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
  commentId: T:System.Collections.ObjectModel.ReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  name: ReadOnlyDictionary<TKey, TValue>
  nameWithType: ReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyDictionary(Of TKey, TValue)
  name.vb: ReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyDictionary`2
    name: ReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.ObjectModel
    name: ObjectModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.objectmodel
