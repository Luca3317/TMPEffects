### YamlMime:ManagedReference
items:
- uid: TMPEffects.TextProcessing.ParsingUtility
  commentId: T:TMPEffects.TextProcessing.ParsingUtility
  id: ParsingUtility
  parent: TMPEffects.TextProcessing
  children:
  - TMPEffects.TextProcessing.ParsingUtility.GetNextTag(System.String,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  - TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict(System.String)
  - TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagType)
  - TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,TMPEffects.TextProcessing.ParsingUtility.TagType)
  - TMPEffects.TextProcessing.ParsingUtility.TryParseTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  langs:
  - csharp
  - vb
  name: ParsingUtility
  nameWithType: ParsingUtility
  fullName: TMPEffects.TextProcessing.ParsingUtility
  type: Class
  source:
    remote:
      path: Package/Runtime/TextProcessing/ParsingUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ParsingUtility
    path: ../Package/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 10
  namespace: TMPEffects.TextProcessing
  summary: Utility methods for text processing and parsing.
  example: []
  syntax:
    content: public static class ParsingUtility
    content.vb: Public Module ParsingUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TMPEffects.TextProcessing.ParsingUtility.GetNextTag(System.String,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.GetNextTag(System.String,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  id: GetNextTag(System.String,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: GetNextTag(string, int, ref TagInfo, TagType)
  nameWithType: ParsingUtility.GetNextTag(string, int, ref ParsingUtility.TagInfo, ParsingUtility.TagType)
  fullName: TMPEffects.TextProcessing.ParsingUtility.GetNextTag(string, int, ref TMPEffects.TextProcessing.ParsingUtility.TagInfo, TMPEffects.TextProcessing.ParsingUtility.TagType)
  type: Method
  source:
    remote:
      path: Package/Runtime/TextProcessing/ParsingUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetNextTag
    path: ../Package/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 78
  namespace: TMPEffects.TextProcessing
  summary: Get the next tag in <code class="paramref">text</code>, starting from <code class="paramref">startIndex</code>.
  example: []
  syntax:
    content: public static bool GetNextTag(string text, int startIndex, ref ParsingUtility.TagInfo tag, ParsingUtility.TagType type = TagType.Open | TagType.Close)
    parameters:
    - id: text
      type: System.String
      description: The full string.
    - id: startIndex
      type: System.Int32
      description: The index to start the search from.
    - id: tag
      type: TMPEffects.TextProcessing.ParsingUtility.TagInfo
      description: Reference to a <xref href="TMPEffects.TextProcessing.ParsingUtility.TagInfo" data-throw-if-not-resolved="false"></xref>. Will be set to the parsed tag if one is found.
    - id: type
      type: TMPEffects.TextProcessing.ParsingUtility.TagType
      description: The type of tag to get. Leave at default for either type.
    return:
      type: System.Boolean
      description: true if a next tag was found; false otherwise.
    content.vb: Public Shared Function GetNextTag(text As String, startIndex As Integer, tag As ParsingUtility.TagInfo, type As ParsingUtility.TagType = TagType.Open Or TagType.Close) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.GetNextTag*
  nameWithType.vb: ParsingUtility.GetNextTag(String, Integer, ParsingUtility.TagInfo, ParsingUtility.TagType)
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.GetNextTag(String, Integer, TMPEffects.TextProcessing.ParsingUtility.TagInfo, TMPEffects.TextProcessing.ParsingUtility.TagType)
  name.vb: GetNextTag(String, Integer, TagInfo, TagType)
- uid: TMPEffects.TextProcessing.ParsingUtility.TryParseTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.TryParseTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  id: TryParseTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagInfo@,TMPEffects.TextProcessing.ParsingUtility.TagType)
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: TryParseTag(string, int, int, ref TagInfo, TagType)
  nameWithType: ParsingUtility.TryParseTag(string, int, int, ref ParsingUtility.TagInfo, ParsingUtility.TagType)
  fullName: TMPEffects.TextProcessing.ParsingUtility.TryParseTag(string, int, int, ref TMPEffects.TextProcessing.ParsingUtility.TagInfo, TMPEffects.TextProcessing.ParsingUtility.TagType)
  type: Method
  source:
    remote:
      path: Package/Runtime/TextProcessing/ParsingUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: TryParseTag
    path: ../Package/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 125
  namespace: TMPEffects.TextProcessing
  summary: Attempt to parse a tag from the substring of <code class="paramref">text</code> given by <code class="paramref">startIndex</code> and <code class="paramref">endIndex</code>.
  example: []
  syntax:
    content: public static bool TryParseTag(string text, int startIndex, int endIndex, ref ParsingUtility.TagInfo tag, ParsingUtility.TagType type = TagType.Open | TagType.Close)
    parameters:
    - id: text
      type: System.String
      description: The full string.
    - id: startIndex
      type: System.Int32
      description: Start index of the substring.
    - id: endIndex
      type: System.Int32
      description: End index of the substring.
    - id: tag
      type: TMPEffects.TextProcessing.ParsingUtility.TagInfo
      description: Reference to a <xref href="TMPEffects.TextProcessing.ParsingUtility.TagInfo" data-throw-if-not-resolved="false"></xref>. Will be set to the parsed tag if successful.
    - id: type
      type: TMPEffects.TextProcessing.ParsingUtility.TagType
      description: The type of tag to check for. Leave at default for either type.
    return:
      type: System.Boolean
      description: true if a tag was successfully parsed from the substring; false otherwise.
    content.vb: Public Shared Function TryParseTag(text As String, startIndex As Integer, endIndex As Integer, tag As ParsingUtility.TagInfo, type As ParsingUtility.TagType = TagType.Open Or TagType.Close) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.TryParseTag*
  nameWithType.vb: ParsingUtility.TryParseTag(String, Integer, Integer, ParsingUtility.TagInfo, ParsingUtility.TagType)
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.TryParseTag(String, Integer, Integer, TMPEffects.TextProcessing.ParsingUtility.TagInfo, TMPEffects.TextProcessing.ParsingUtility.TagType)
  name.vb: TryParseTag(String, Integer, Integer, TagInfo, TagType)
- uid: TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagType)
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagType)
  id: IsTag(System.String,System.Int32,System.Int32,TMPEffects.TextProcessing.ParsingUtility.TagType)
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: IsTag(string, int, int, TagType)
  nameWithType: ParsingUtility.IsTag(string, int, int, ParsingUtility.TagType)
  fullName: TMPEffects.TextProcessing.ParsingUtility.IsTag(string, int, int, TMPEffects.TextProcessing.ParsingUtility.TagType)
  type: Method
  source:
    remote:
      path: Package/Runtime/TextProcessing/ParsingUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: IsTag
    path: ../Package/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 171
  namespace: TMPEffects.TextProcessing
  summary: Checks if the given string contains a substring starting at <code class="paramref">startIndex</code>, going up to <code class="paramref">maxIndex</code>, that is a well formed tag.
  example: []
  syntax:
    content: public static bool IsTag(string text, int startIndex, int maxIndex = -1, ParsingUtility.TagType type = TagType.Open | TagType.Close)
    parameters:
    - id: text
      type: System.String
      description: The string to check.
    - id: startIndex
      type: System.Int32
      description: The start index of the substring.
    - id: maxIndex
      type: System.Int32
      description: The end index of the substring. Leave at default to set to length of <code class="paramref">text</code>.
    - id: type
      type: TMPEffects.TextProcessing.ParsingUtility.TagType
    return:
      type: System.Boolean
      description: true if the given string contains a substring starting at <code class="paramref">startIndex</code>, going up to <code class="paramref">maxIndex</code>, that is a well formed tag; otherwise false.
    content.vb: Public Shared Function IsTag(text As String, startIndex As Integer, maxIndex As Integer = -1, type As ParsingUtility.TagType = TagType.Open Or TagType.Close) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.IsTag*
  nameWithType.vb: ParsingUtility.IsTag(String, Integer, Integer, ParsingUtility.TagType)
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.IsTag(String, Integer, Integer, TMPEffects.TextProcessing.ParsingUtility.TagType)
  name.vb: IsTag(String, Integer, Integer, TagType)
- uid: TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,TMPEffects.TextProcessing.ParsingUtility.TagType)
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.IsTag(System.String,TMPEffects.TextProcessing.ParsingUtility.TagType)
  id: IsTag(System.String,TMPEffects.TextProcessing.ParsingUtility.TagType)
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: IsTag(string, TagType)
  nameWithType: ParsingUtility.IsTag(string, ParsingUtility.TagType)
  fullName: TMPEffects.TextProcessing.ParsingUtility.IsTag(string, TMPEffects.TextProcessing.ParsingUtility.TagType)
  type: Method
  source:
    remote:
      path: Package/Runtime/TextProcessing/ParsingUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: IsTag
    path: ../Package/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 216
  namespace: TMPEffects.TextProcessing
  summary: Checks if the given string is a well-formed tag (of the given type, if supplied).
  example: []
  syntax:
    content: public static bool IsTag(string tag, ParsingUtility.TagType type = TagType.Open | TagType.Close)
    parameters:
    - id: tag
      type: System.String
      description: The string to check.
    - id: type
      type: TMPEffects.TextProcessing.ParsingUtility.TagType
      description: The type of tag to check for. Leave default for either type.
    return:
      type: System.Boolean
      description: true if the given string is a tag (of the given type, if supplied); otherwise false.
    content.vb: Public Shared Function IsTag(tag As String, type As ParsingUtility.TagType = TagType.Open Or TagType.Close) As Boolean
  overload: TMPEffects.TextProcessing.ParsingUtility.IsTag*
  nameWithType.vb: ParsingUtility.IsTag(String, ParsingUtility.TagType)
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.IsTag(String, TMPEffects.TextProcessing.ParsingUtility.TagType)
  name.vb: IsTag(String, TagType)
- uid: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict(System.String)
  commentId: M:TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict(System.String)
  id: GetTagParametersDict(System.String)
  parent: TMPEffects.TextProcessing.ParsingUtility
  langs:
  - csharp
  - vb
  name: GetTagParametersDict(string)
  nameWithType: ParsingUtility.GetTagParametersDict(string)
  fullName: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict(string)
  type: Method
  source:
    remote:
      path: Package/Runtime/TextProcessing/ParsingUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetTagParametersDict
    path: ../Package/Runtime/TextProcessing/ParsingUtility.cs
    startLine: 234
  namespace: TMPEffects.TextProcessing
  summary: >-
    Parses a string to a <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref>.<br />

    Pass in either a full tag string, e.g. &lt;example=10 arg="value"&gt;, or the same but

    without the brackets (example=10 arg="value").<br />

    Note that this only does some basic checks on the validity of the input string;

    malformed strings may lead to errors.<br />

    Ideally use by passing in a <xref href="TMPEffects.TextProcessing.ParsingUtility.TagInfo.parameterString" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Dictionary<string, string> GetTagParametersDict(string tag)
    parameters:
    - id: tag
      type: System.String
      description: The tag to parse the parameters of.
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: The parsed string as <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function GetTagParametersDict(tag As String) As Dictionary(Of String, String)
  overload: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: ''
  nameWithType.vb: ParsingUtility.GetTagParametersDict(String)
  fullName.vb: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict(String)
  name.vb: GetTagParametersDict(String)
references:
- uid: TMPEffects.TextProcessing
  commentId: N:TMPEffects.TextProcessing
  href: TMPEffects.html
  name: TMPEffects.TextProcessing
  nameWithType: TMPEffects.TextProcessing
  fullName: TMPEffects.TextProcessing
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TextProcessing
    name: TextProcessing
    href: TMPEffects.TextProcessing.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TextProcessing
    name: TextProcessing
    href: TMPEffects.TextProcessing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TMPEffects.TextProcessing.ParsingUtility.TagInfo
  commentId: T:TMPEffects.TextProcessing.ParsingUtility.TagInfo
  parent: TMPEffects.TextProcessing
  href: TMPEffects.TextProcessing.ParsingUtility.html
  name: ParsingUtility.TagInfo
  nameWithType: ParsingUtility.TagInfo
  fullName: TMPEffects.TextProcessing.ParsingUtility.TagInfo
  spec.csharp:
  - uid: TMPEffects.TextProcessing.ParsingUtility
    name: ParsingUtility
    href: TMPEffects.TextProcessing.ParsingUtility.html
  - name: .
  - uid: TMPEffects.TextProcessing.ParsingUtility.TagInfo
    name: TagInfo
    href: TMPEffects.TextProcessing.ParsingUtility.TagInfo.html
  spec.vb:
  - uid: TMPEffects.TextProcessing.ParsingUtility
    name: ParsingUtility
    href: TMPEffects.TextProcessing.ParsingUtility.html
  - name: .
  - uid: TMPEffects.TextProcessing.ParsingUtility.TagInfo
    name: TagInfo
    href: TMPEffects.TextProcessing.ParsingUtility.TagInfo.html
- uid: TMPEffects.TextProcessing.ParsingUtility.GetNextTag*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.GetNextTag
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_GetNextTag_System_String_System_Int32_TMPEffects_TextProcessing_ParsingUtility_TagInfo__TMPEffects_TextProcessing_ParsingUtility_TagType_
  name: GetNextTag
  nameWithType: ParsingUtility.GetNextTag
  fullName: TMPEffects.TextProcessing.ParsingUtility.GetNextTag
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TMPEffects.TextProcessing.ParsingUtility.TagType
  commentId: T:TMPEffects.TextProcessing.ParsingUtility.TagType
  parent: TMPEffects.TextProcessing
  href: TMPEffects.TextProcessing.ParsingUtility.html
  name: ParsingUtility.TagType
  nameWithType: ParsingUtility.TagType
  fullName: TMPEffects.TextProcessing.ParsingUtility.TagType
  spec.csharp:
  - uid: TMPEffects.TextProcessing.ParsingUtility
    name: ParsingUtility
    href: TMPEffects.TextProcessing.ParsingUtility.html
  - name: .
  - uid: TMPEffects.TextProcessing.ParsingUtility.TagType
    name: TagType
    href: TMPEffects.TextProcessing.ParsingUtility.TagType.html
  spec.vb:
  - uid: TMPEffects.TextProcessing.ParsingUtility
    name: ParsingUtility
    href: TMPEffects.TextProcessing.ParsingUtility.html
  - name: .
  - uid: TMPEffects.TextProcessing.ParsingUtility.TagType
    name: TagType
    href: TMPEffects.TextProcessing.ParsingUtility.TagType.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TMPEffects.TextProcessing.ParsingUtility.TryParseTag*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.TryParseTag
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_TryParseTag_System_String_System_Int32_System_Int32_TMPEffects_TextProcessing_ParsingUtility_TagInfo__TMPEffects_TextProcessing_ParsingUtility_TagType_
  name: TryParseTag
  nameWithType: ParsingUtility.TryParseTag
  fullName: TMPEffects.TextProcessing.ParsingUtility.TryParseTag
- uid: TMPEffects.TextProcessing.ParsingUtility.IsTag*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.IsTag
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_IsTag_System_String_System_Int32_System_Int32_TMPEffects_TextProcessing_ParsingUtility_TagType_
  name: IsTag
  nameWithType: ParsingUtility.IsTag
  fullName: TMPEffects.TextProcessing.ParsingUtility.IsTag
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TMPEffects.TextProcessing.ParsingUtility.TagInfo.parameterString
  commentId: F:TMPEffects.TextProcessing.ParsingUtility.TagInfo.parameterString
  href: TMPEffects.TextProcessing.ParsingUtility.TagInfo.html#TMPEffects_TextProcessing_ParsingUtility_TagInfo_parameterString
  name: parameterString
  nameWithType: ParsingUtility.TagInfo.parameterString
  fullName: TMPEffects.TextProcessing.ParsingUtility.TagInfo.parameterString
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict*
  commentId: Overload:TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict
  href: TMPEffects.TextProcessing.ParsingUtility.html#TMPEffects_TextProcessing_ParsingUtility_GetTagParametersDict_System_String_
  name: GetTagParametersDict
  nameWithType: ParsingUtility.GetTagParametersDict
  fullName: TMPEffects.TextProcessing.ParsingUtility.GetTagParametersDict
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
