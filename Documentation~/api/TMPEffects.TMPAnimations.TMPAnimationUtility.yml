### YamlMime:ManagedReference
items:
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility
  commentId: T:TMPEffects.TMPAnimations.TMPAnimationUtility
  id: TMPAnimationUtility
  parent: TMPEffects.TMPAnimations
  children:
  - TMPEffects.TMPAnimations.TMPAnimationUtility.AnchorToPosition(Vector2,TMPEffects.CharacterData.CharData)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.ClosestPointOnLine(Vector3,Vector3,Vector3)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetMinMaxOffset(System.Single@,System.Single@,TMPEffects.Parameters.TMPParameterTypes.OffsetType,TMPEffects.Components.Animator.ITMPSegmentData,TMPEffects.Components.Animator.IAnimatorDataProvider,System.Boolean)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetMockedSegment(System.Int32,System.Collections.Generic.IList{TMPEffects.CharacterData.CharData})
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Parameters.ITMPOffsetProvider,System.Boolean,System.Boolean)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext,TMPEffects.Parameters.ITMPOffsetProvider,System.Boolean,System.Boolean)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.Parameters.TMPParameterTypes.OffsetType,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.ITMPSegmentData,TMPEffects.Components.Animator.IAnimatorDataProvider,System.Boolean)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue(AnimationCurve,TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode,System.Single)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue(AnimationCurve,WrapMode,System.Single)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(System.Boolean,System.Single)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMPEffects.Components.Animator.IAnimatorDataProvider,System.Single)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMPEffects.TMPAnimations.IAnimationContext,System.Single)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMP_Text,System.Single)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.SetToCharacter(TMP_Character,TMP_Character,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.TMPAnimationUtility.ToWrapMode(TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode)
  langs:
  - csharp
  - vb
  name: TMPAnimationUtility
  nameWithType: TMPAnimationUtility
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility
  type: Class
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: TMPAnimationUtility
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 15
  namespace: TMPEffects.TMPAnimations
  summary: Utility methods for animations.
  example: []
  syntax:
    content: public static class TMPAnimationUtility
    content.vb: Public Module TMPAnimationUtility
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMP_Text,System.Single)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMP_Text,System.Single)
  id: ScaleTextMesh(TMP_Text,System.Single)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: ScaleTextMesh(TMP_Text, float)
  nameWithType: TMPAnimationUtility.ScaleTextMesh(TMP_Text, float)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMP_Text, float)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ScaleTextMesh
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 25
  namespace: TMPEffects.TMPAnimations
  summary: Scale a given value to make it uniform between TextMeshPro and TextMeshProUGUI components.
  example: []
  syntax:
    content: public static float ScaleTextMesh(TMP_Text text, float value)
    parameters:
    - id: text
      type: Global.TMP_Text
      description: ''
    - id: value
      type: System.Single
      description: The value to scale.
    return:
      type: System.Single
      description: The scaled value.
    content.vb: Public Shared Function ScaleTextMesh(text As TMP_Text, value As Single) As Single
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh*
  nameWithType.vb: TMPAnimationUtility.ScaleTextMesh(TMP_Text, Single)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMP_Text, Single)
  name.vb: ScaleTextMesh(TMP_Text, Single)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMPEffects.Components.Animator.IAnimatorDataProvider,System.Single)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMPEffects.Components.Animator.IAnimatorDataProvider,System.Single)
  id: ScaleTextMesh(TMPEffects.Components.Animator.IAnimatorDataProvider,System.Single)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: ScaleTextMesh(IAnimatorDataProvider, float)
  nameWithType: TMPAnimationUtility.ScaleTextMesh(IAnimatorDataProvider, float)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMPEffects.Components.Animator.IAnimatorDataProvider, float)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ScaleTextMesh
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 28
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static float ScaleTextMesh(IAnimatorDataProvider ctx, float value)
    parameters:
    - id: ctx
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function ScaleTextMesh(ctx As IAnimatorDataProvider, value As Single) As Single
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh*
  nameWithType.vb: TMPAnimationUtility.ScaleTextMesh(IAnimatorDataProvider, Single)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMPEffects.Components.Animator.IAnimatorDataProvider, Single)
  name.vb: ScaleTextMesh(IAnimatorDataProvider, Single)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMPEffects.TMPAnimations.IAnimationContext,System.Single)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMPEffects.TMPAnimations.IAnimationContext,System.Single)
  id: ScaleTextMesh(TMPEffects.TMPAnimations.IAnimationContext,System.Single)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: ScaleTextMesh(IAnimationContext, float)
  nameWithType: TMPAnimationUtility.ScaleTextMesh(IAnimationContext, float)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMPEffects.TMPAnimations.IAnimationContext, float)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ScaleTextMesh
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 31
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static float ScaleTextMesh(IAnimationContext ctx, float value)
    parameters:
    - id: ctx
      type: TMPEffects.TMPAnimations.IAnimationContext
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function ScaleTextMesh(ctx As IAnimationContext, value As Single) As Single
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh*
  nameWithType.vb: TMPAnimationUtility.ScaleTextMesh(IAnimationContext, Single)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(TMPEffects.TMPAnimations.IAnimationContext, Single)
  name.vb: ScaleTextMesh(IAnimationContext, Single)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(System.Boolean,System.Single)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(System.Boolean,System.Single)
  id: ScaleTextMesh(System.Boolean,System.Single)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: ScaleTextMesh(bool, float)
  nameWithType: TMPAnimationUtility.ScaleTextMesh(bool, float)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(bool, float)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ScaleTextMesh
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 34
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static float ScaleTextMesh(bool isTMProUGUI, float value)
    parameters:
    - id: isTMProUGUI
      type: System.Boolean
    - id: value
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function ScaleTextMesh(isTMProUGUI As Boolean, value As Single) As Single
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh*
  nameWithType.vb: TMPAnimationUtility.ScaleTextMesh(Boolean, Single)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh(Boolean, Single)
  name.vb: ScaleTextMesh(Boolean, Single)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: ScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: ScaleVector(Vector3, CharData, IAnimationContext)
  nameWithType: TMPAnimationUtility.ScaleVector(Vector3, CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ScaleVector
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 49
  namespace: TMPEffects.TMPAnimations
  summary: >-
    Scale a vector for an animation.<br />

    Makes vectors uniform relative to the size of the text.<br />

    Used by <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref> to automatically scale animations.
  example: []
  syntax:
    content: public static Vector3 ScaleVector(Vector3 vector, CharData cData, IAnimationContext context)
    parameters:
    - id: vector
      type: Global.Vector3
      description: The vector to scale.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> the vector will applied to.
    - id: context
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: The <xref href="TMPEffects.TMPAnimations.IAnimationContext" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The scaled vector.
    content.vb: Public Shared Function ScaleVector(vector As Vector3, cData As CharData, context As IAnimationContext) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  id: ScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: ScaleVector(Vector3, CharData, IAnimatorDataProvider)
  nameWithType: TMPAnimationUtility.ScaleVector(Vector3, CharData, IAnimatorDataProvider)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ScaleVector
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 62
  namespace: TMPEffects.TMPAnimations
  summary: >-
    Scale a vector for an animation.<br />

    Used by <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref> to automatically scale animations.
  example: []
  syntax:
    content: public static Vector3 ScaleVector(Vector3 vector, CharData cData, IAnimatorDataProvider context)
    parameters:
    - id: vector
      type: Global.Vector3
      description: The vector to scale.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> the vector will applied to.
    - id: context
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
      description: The <xref href="TMPEffects.Components.Animator.IAnimatorDataProvider" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The scaled vector.
    content.vb: Public Shared Function ScaleVector(vector As Vector3, cData As CharData, context As IAnimatorDataProvider) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single)
  id: ScaleVector(Vector3,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: ScaleVector(Vector3, bool, bool, bool, float, float)
  nameWithType: TMPAnimationUtility.ScaleVector(Vector3, bool, bool, bool, float, float)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3, bool, bool, bool, float, float)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ScaleVector
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 68
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static Vector3 ScaleVector(Vector3 vector, bool isTMProUGUI, bool scaleAnimations, bool scaleUniformly, float pointSize, float fontSize)
    parameters:
    - id: vector
      type: Global.Vector3
    - id: isTMProUGUI
      type: System.Boolean
    - id: scaleAnimations
      type: System.Boolean
    - id: scaleUniformly
      type: System.Boolean
    - id: pointSize
      type: System.Single
    - id: fontSize
      type: System.Single
    return:
      type: Global.Vector3
    content.vb: Public Shared Function ScaleVector(vector As Vector3, isTMProUGUI As Boolean, scaleAnimations As Boolean, scaleUniformly As Boolean, pointSize As Single, fontSize As Single) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector*
  nameWithType.vb: TMPAnimationUtility.ScaleVector(Vector3, Boolean, Boolean, Boolean, Single, Single)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector(Vector3, Boolean, Boolean, Boolean, Single, Single)
  name.vb: ScaleVector(Vector3, Boolean, Boolean, Boolean, Single, Single)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: IgnoreScaling(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: IgnoreScaling(Vector3, CharData, IAnimationContext)
  nameWithType: TMPAnimationUtility.IgnoreScaling(Vector3, CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: IgnoreScaling
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 77
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static Vector3 IgnoreScaling(Vector3 vector, CharData cData, IAnimationContext context)
    parameters:
    - id: vector
      type: Global.Vector3
    - id: cData
      type: TMPEffects.CharacterData.CharData
    - id: context
      type: TMPEffects.TMPAnimations.IAnimationContext
    return:
      type: Global.Vector3
    content.vb: Public Shared Function IgnoreScaling(vector As Vector3, cData As CharData, context As IAnimationContext) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  id: IgnoreScaling(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: IgnoreScaling(Vector3, CharData, IAnimatorDataProvider)
  nameWithType: TMPAnimationUtility.IgnoreScaling(Vector3, CharData, IAnimatorDataProvider)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: IgnoreScaling
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 82
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static Vector3 IgnoreScaling(Vector3 vector, CharData cData, IAnimatorDataProvider context)
    parameters:
    - id: vector
      type: Global.Vector3
    - id: cData
      type: TMPEffects.CharacterData.CharData
    - id: context
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
    return:
      type: Global.Vector3
    content.vb: Public Shared Function IgnoreScaling(vector As Vector3, cData As CharData, context As IAnimatorDataProvider) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single)
  id: IgnoreScaling(Vector3,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: IgnoreScaling(Vector3, bool, bool, bool, float, float)
  nameWithType: TMPAnimationUtility.IgnoreScaling(Vector3, bool, bool, bool, float, float)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3, bool, bool, bool, float, float)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: IgnoreScaling
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 87
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static Vector3 IgnoreScaling(Vector3 vector, bool isTMProUGUI, bool scaleAnimations, bool scaleUniformly, float pointSize, float fontSize)
    parameters:
    - id: vector
      type: Global.Vector3
    - id: isTMProUGUI
      type: System.Boolean
    - id: scaleAnimations
      type: System.Boolean
    - id: scaleUniformly
      type: System.Boolean
    - id: pointSize
      type: System.Single
    - id: fontSize
      type: System.Single
    return:
      type: Global.Vector3
    content.vb: Public Shared Function IgnoreScaling(vector As Vector3, isTMProUGUI As Boolean, scaleAnimations As Boolean, scaleUniformly As Boolean, pointSize As Single, fontSize As Single) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling*
  nameWithType.vb: TMPAnimationUtility.IgnoreScaling(Vector3, Boolean, Boolean, Boolean, Single, Single)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling(Vector3, Boolean, Boolean, Boolean, Single, Single)
  name.vb: IgnoreScaling(Vector3, Boolean, Boolean, Boolean, Single, Single)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: InverseScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: InverseScaleVector(Vector3, CharData, IAnimationContext)
  nameWithType: TMPAnimationUtility.InverseScaleVector(Vector3, CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: InverseScaleVector
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 104
  namespace: TMPEffects.TMPAnimations
  summary: Scale a vector for an animation inversely.<br /><xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref> automatically scales animations; using this method scales the vector in a way that makes it effectively ignore the <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>'s scaling.
  example: []
  syntax:
    content: public static Vector3 InverseScaleVector(Vector3 vector, CharData cData, IAnimationContext context)
    parameters:
    - id: vector
      type: Global.Vector3
      description: The vector to scale inversely.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> the vector will be applied to.
    - id: context
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: The <xref href="TMPEffects.TMPAnimations.IAnimationContext" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The inversely scaled vector.
    content.vb: Public Shared Function InverseScaleVector(vector As Vector3, cData As CharData, context As IAnimationContext) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  id: InverseScaleVector(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: InverseScaleVector(Vector3, CharData, IAnimatorDataProvider)
  nameWithType: TMPAnimationUtility.InverseScaleVector(Vector3, CharData, IAnimatorDataProvider)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: InverseScaleVector
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 115
  namespace: TMPEffects.TMPAnimations
  summary: Scale a vector for an animation inversely.<br /><xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref> automatically scales animations; using this method scales the vector in a way that makes it effectively ignore the <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>'s scaling.
  example: []
  syntax:
    content: public static Vector3 InverseScaleVector(Vector3 vector, CharData cData, IAnimatorDataProvider context)
    parameters:
    - id: vector
      type: Global.Vector3
      description: The vector to scale inversely.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> the vector will be applied to.
    - id: context
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
      description: The <xref href="TMPEffects.Components.Animator.IAnimatorDataProvider" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The inversely scaled vector.
    content.vb: Public Shared Function InverseScaleVector(vector As Vector3, cData As CharData, context As IAnimatorDataProvider) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.AnchorToPosition(Vector2,TMPEffects.CharacterData.CharData)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.AnchorToPosition(Vector2,TMPEffects.CharacterData.CharData)
  id: AnchorToPosition(Vector2,TMPEffects.CharacterData.CharData)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: AnchorToPosition(Vector2, CharData)
  nameWithType: TMPAnimationUtility.AnchorToPosition(Vector2, CharData)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.AnchorToPosition(Vector2, TMPEffects.CharacterData.CharData)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: AnchorToPosition
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 129
  namespace: TMPEffects.TMPAnimations
  summary: Convert an anchor vector to its actual position vector.
  example: []
  syntax:
    content: public static Vector2 AnchorToPosition(Vector2 anchor, CharData cData)
    parameters:
    - id: anchor
      type: Global.Vector2
      description: The anchor to convert.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> the anchor applies to.
    return:
      type: Global.Vector2
      description: The position vector.
    content.vb: Public Shared Function AnchorToPosition(anchor As Vector2, cData As CharData) As Vector2
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.AnchorToPosition*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: GetRawVertex(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetRawVertex(int, Vector3, CharData, IAnimationContext)
  nameWithType: TMPAnimationUtility.GetRawVertex(int, Vector3, CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex(int, Vector3, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetRawVertex
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 159
  namespace: TMPEffects.TMPAnimations
  summary: Calculate the raw version of the passed in vertex position, i.e. the one that will ignore the animator's scaling.
  example: []
  syntax:
    content: public static Vector3 GetRawVertex(int index, Vector3 position, CharData cData, IAnimationContext ctx)
    parameters:
    - id: index
      type: System.Int32
      description: Index of the vertex.
    - id: position
      type: Global.Vector3
      description: The position to set the vertex to.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: The <xref href="TMPEffects.TMPAnimations.IAnimationContext" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The raw version of the passed in vertex position, i.e. the one that will ignore the <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>'s scaling.
    content.vb: Public Shared Function GetRawVertex(index As Integer, position As Vector3, cData As CharData, ctx As IAnimationContext) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex*
  nameWithType.vb: TMPAnimationUtility.GetRawVertex(Integer, Vector3, CharData, IAnimationContext)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex(Integer, Vector3, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  name.vb: GetRawVertex(Integer, Vector3, CharData, IAnimationContext)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  id: GetRawVertex(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetRawVertex(int, Vector3, CharData, IAnimatorDataProvider)
  nameWithType: TMPAnimationUtility.GetRawVertex(int, Vector3, CharData, IAnimatorDataProvider)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex(int, Vector3, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetRawVertex
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 170
  namespace: TMPEffects.TMPAnimations
  summary: Calculate the raw version of the passed in vertex position, i.e. the one that will ignore the animator's scaling.
  example: []
  syntax:
    content: public static Vector3 GetRawVertex(int index, Vector3 position, CharData cData, IAnimatorDataProvider ctx)
    parameters:
    - id: index
      type: System.Int32
      description: Index of the vertex.
    - id: position
      type: Global.Vector3
      description: The position to set the vertex to.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
      description: The <xref href="TMPEffects.Components.Animator.IAnimatorDataProvider" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The raw version of the passed in vertex position, i.e. the one that will ignore the <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>'s scaling.
    content.vb: Public Shared Function GetRawVertex(index As Integer, position As Vector3, cData As CharData, ctx As IAnimatorDataProvider) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex*
  nameWithType.vb: TMPAnimationUtility.GetRawVertex(Integer, Vector3, CharData, IAnimatorDataProvider)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex(Integer, Vector3, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider)
  name.vb: GetRawVertex(Integer, Vector3, CharData, IAnimatorDataProvider)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: GetRawPosition(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetRawPosition(Vector3, CharData, IAnimationContext)
  nameWithType: TMPAnimationUtility.GetRawPosition(Vector3, CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetRawPosition
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 182
  namespace: TMPEffects.TMPAnimations
  summary: Calculate the raw version of the passed in character position, i.e. the one that will ignore the animator's scaling.
  example: []
  syntax:
    content: public static Vector3 GetRawPosition(Vector3 position, CharData cData, IAnimationContext ctx)
    parameters:
    - id: position
      type: Global.Vector3
      description: The position to set the character to.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: The <xref href="TMPEffects.TMPAnimations.IAnimationContext" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The raw version of the passed in character position, i.e. the one that will ignore the <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>'s scaling.
    content.vb: Public Shared Function GetRawPosition(position As Vector3, cData As CharData, ctx As IAnimationContext) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  id: GetRawPosition(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetRawPosition(Vector3, CharData, IAnimatorDataProvider)
  nameWithType: TMPAnimationUtility.GetRawPosition(Vector3, CharData, IAnimatorDataProvider)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetRawPosition
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 192
  namespace: TMPEffects.TMPAnimations
  summary: Calculate the raw version of the passed in character position, i.e. the one that will ignore the animator's scaling.
  example: []
  syntax:
    content: public static Vector3 GetRawPosition(Vector3 position, CharData cData, IAnimatorDataProvider ctx)
    parameters:
    - id: position
      type: Global.Vector3
      description: The position to set the character to.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
      description: The <xref href="TMPEffects.Components.Animator.IAnimatorDataProvider" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The raw version of the passed in character position, i.e. the one that will ignore the <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>'s scaling.
    content.vb: Public Shared Function GetRawPosition(position As Vector3, cData As CharData, ctx As IAnimatorDataProvider) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: GetRawPivot(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetRawPivot(Vector3, CharData, IAnimationContext)
  nameWithType: TMPAnimationUtility.GetRawPivot(Vector3, CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetRawPivot
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 204
  namespace: TMPEffects.TMPAnimations
  summary: Calculate the raw version of the passed in pivot position, i.e. the one that will ignore the animator's scaling.
  example: []
  syntax:
    content: public static Vector3 GetRawPivot(Vector3 position, CharData cData, IAnimationContext ctx)
    parameters:
    - id: position
      type: Global.Vector3
      description: The position to set the pivot to.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: The <xref href="TMPEffects.TMPAnimations.IAnimationContext" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The raw version of the passed in pivot position, i.e. the one that will ignore the <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>'s scaling.
    content.vb: Public Shared Function GetRawPivot(position As Vector3, cData As CharData, ctx As IAnimationContext) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  id: GetRawPivot(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetRawPivot(Vector3, CharData, IAnimatorDataProvider)
  nameWithType: TMPAnimationUtility.GetRawPivot(Vector3, CharData, IAnimatorDataProvider)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetRawPivot
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 214
  namespace: TMPEffects.TMPAnimations
  summary: Calculate the raw version of the passed in pivot position, i.e. the one that will ignore the animator's scaling.
  example: []
  syntax:
    content: public static Vector3 GetRawPivot(Vector3 position, CharData cData, IAnimatorDataProvider ctx)
    parameters:
    - id: position
      type: Global.Vector3
      description: The position to set the pivot to.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
      description: The <xref href="TMPEffects.Components.Animator.IAnimatorDataProvider" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The raw version of the passed in pivot position, i.e. the one that will ignore the <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>'s scaling.
    content.vb: Public Shared Function GetRawPivot(position As Vector3, cData As CharData, ctx As IAnimatorDataProvider) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: GetRawDelta(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetRawDelta(Vector3, CharData, IAnimationContext)
  nameWithType: TMPAnimationUtility.GetRawDelta(Vector3, CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetRawDelta
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 226
  namespace: TMPEffects.TMPAnimations
  summary: Calculate the raw version of the passed in delta, i.e. the one that will ignore the animator's scaling.
  example: []
  syntax:
    content: public static Vector3 GetRawDelta(Vector3 delta, CharData cData, IAnimationContext ctx)
    parameters:
    - id: delta
      type: Global.Vector3
      description: The delta.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: The <xref href="TMPEffects.TMPAnimations.IAnimationContext" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The raw version of the passed in delta, i.e. the one that will ignore the <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>'s scaling.
    content.vb: Public Shared Function GetRawDelta(delta As Vector3, cData As CharData, ctx As IAnimationContext) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  id: GetRawDelta(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetRawDelta(Vector3, CharData, IAnimatorDataProvider)
  nameWithType: TMPAnimationUtility.GetRawDelta(Vector3, CharData, IAnimatorDataProvider)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetRawDelta
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 236
  namespace: TMPEffects.TMPAnimations
  summary: Calculate the raw version of the passed in delta, i.e. the one that will ignore the animator's scaling.
  example: []
  syntax:
    content: public static Vector3 GetRawDelta(Vector3 delta, CharData cData, IAnimatorDataProvider ctx)
    parameters:
    - id: delta
      type: Global.Vector3
      description: The delta.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
      description: The <xref href="TMPEffects.Components.Animator.IAnimatorDataProvider" data-throw-if-not-resolved="false"></xref> of the animation.
    return:
      type: Global.Vector3
      description: The raw version of the passed in delta, i.e. the one that will ignore the <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>'s scaling.
    content.vb: Public Shared Function GetRawDelta(delta As Vector3, cData As CharData, ctx As IAnimatorDataProvider) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: SetVertexRaw(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: SetVertexRaw(int, Vector3, CharData, IAnimationContext)
  nameWithType: TMPAnimationUtility.SetVertexRaw(int, Vector3, CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw(int, Vector3, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: SetVertexRaw
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 255
  namespace: TMPEffects.TMPAnimations
  summary: Set the raw position of the vertex at the given index. This position will ignore the animator's scaling.
  example: []
  syntax:
    content: public static void SetVertexRaw(int index, Vector3 position, CharData cData, IAnimationContext ctx)
    parameters:
    - id: index
      type: System.Int32
      description: Index of the vertex.
    - id: position
      type: Global.Vector3
      description: The position to set the vertex to.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: The <xref href="TMPEffects.TMPAnimations.IAnimationContext" data-throw-if-not-resolved="false"></xref> of the animation.
    content.vb: Public Shared Sub SetVertexRaw(index As Integer, position As Vector3, cData As CharData, ctx As IAnimationContext)
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw*
  nameWithType.vb: TMPAnimationUtility.SetVertexRaw(Integer, Vector3, CharData, IAnimationContext)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw(Integer, Vector3, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  name.vb: SetVertexRaw(Integer, Vector3, CharData, IAnimationContext)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  id: SetVertexRaw(System.Int32,Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: SetVertexRaw(int, Vector3, CharData, IAnimatorDataProvider)
  nameWithType: TMPAnimationUtility.SetVertexRaw(int, Vector3, CharData, IAnimatorDataProvider)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw(int, Vector3, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: SetVertexRaw
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 265
  namespace: TMPEffects.TMPAnimations
  summary: Set the raw position of the vertex at the given index. This position will ignore the animator's scaling.
  example: []
  syntax:
    content: public static void SetVertexRaw(int index, Vector3 position, CharData cData, IAnimatorDataProvider ctx)
    parameters:
    - id: index
      type: System.Int32
      description: Index of the vertex.
    - id: position
      type: Global.Vector3
      description: The position to set the vertex to.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
      description: The <xref href="TMPEffects.Components.Animator.IAnimatorDataProvider" data-throw-if-not-resolved="false"></xref> of the animation.
    content.vb: Public Shared Sub SetVertexRaw(index As Integer, position As Vector3, cData As CharData, ctx As IAnimatorDataProvider)
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw*
  nameWithType.vb: TMPAnimationUtility.SetVertexRaw(Integer, Vector3, CharData, IAnimatorDataProvider)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw(Integer, Vector3, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider)
  name.vb: SetVertexRaw(Integer, Vector3, CharData, IAnimatorDataProvider)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: SetPositionRaw(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: SetPositionRaw(Vector3, CharData, IAnimationContext)
  nameWithType: TMPAnimationUtility.SetPositionRaw(Vector3, CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: SetPositionRaw
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 277
  namespace: TMPEffects.TMPAnimations
  summary: Set the raw position of the character. This position will ignore the animator's scaling.
  example: []
  syntax:
    content: public static void SetPositionRaw(Vector3 position, CharData cData, IAnimationContext ctx)
    parameters:
    - id: position
      type: Global.Vector3
      description: The position to set the character to.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: The <xref href="TMPEffects.TMPAnimations.IAnimationContext" data-throw-if-not-resolved="false"></xref> of the animation.
    content.vb: Public Shared Sub SetPositionRaw(position As Vector3, cData As CharData, ctx As IAnimationContext)
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  id: SetPositionRaw(Vector3,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: SetPositionRaw(Vector3, CharData, IAnimatorDataProvider)
  nameWithType: TMPAnimationUtility.SetPositionRaw(Vector3, CharData, IAnimatorDataProvider)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw(Vector3, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: SetPositionRaw
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 286
  namespace: TMPEffects.TMPAnimations
  summary: Set the raw position of the character. This position will ignore the animator's scaling.
  example: []
  syntax:
    content: public static void SetPositionRaw(Vector3 position, CharData cData, IAnimatorDataProvider ctx)
    parameters:
    - id: position
      type: Global.Vector3
      description: The position to set the character to.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> to act on.
    - id: ctx
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
      description: The <xref href="TMPEffects.Components.Animator.IAnimatorDataProvider" data-throw-if-not-resolved="false"></xref> of the animation.
    content.vb: Public Shared Sub SetPositionRaw(position As Vector3, cData As CharData, ctx As IAnimatorDataProvider)
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ClosestPointOnLine(Vector3,Vector3,Vector3)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.ClosestPointOnLine(Vector3,Vector3,Vector3)
  id: ClosestPointOnLine(Vector3,Vector3,Vector3)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: ClosestPointOnLine(Vector3, Vector3, Vector3)
  nameWithType: TMPAnimationUtility.ClosestPointOnLine(Vector3, Vector3, Vector3)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ClosestPointOnLine(Vector3, Vector3, Vector3)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ClosestPointOnLine
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 303
  namespace: TMPEffects.TMPAnimations
  summary: Get the point on a line closest to the given point.
  example: []
  syntax:
    content: public static Vector3 ClosestPointOnLine(Vector3 lineStart, Vector3 lineEnd, Vector3 point)
    parameters:
    - id: lineStart
      type: Global.Vector3
      description: ''
    - id: lineEnd
      type: Global.Vector3
      description: ''
    - id: point
      type: Global.Vector3
      description: ''
    return:
      type: Global.Vector3
      description: ''
    content.vb: Public Shared Function ClosestPointOnLine(lineStart As Vector3, lineEnd As Vector3, point As Vector3) As Vector3
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.ClosestPointOnLine*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMockedSegment(System.Int32,System.Collections.Generic.IList{TMPEffects.CharacterData.CharData})
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetMockedSegment(System.Int32,System.Collections.Generic.IList{TMPEffects.CharacterData.CharData})
  id: GetMockedSegment(System.Int32,System.Collections.Generic.IList{TMPEffects.CharacterData.CharData})
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetMockedSegment(int, IList<CharData>)
  nameWithType: TMPAnimationUtility.GetMockedSegment(int, IList<CharData>)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMockedSegment(int, System.Collections.Generic.IList<TMPEffects.CharacterData.CharData>)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetMockedSegment
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 326
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static ITMPSegmentData GetMockedSegment(int len, IList<CharData> cData)
    parameters:
    - id: len
      type: System.Int32
    - id: cData
      type: System.Collections.Generic.IList{TMPEffects.CharacterData.CharData}
    return:
      type: TMPEffects.Components.Animator.ITMPSegmentData
    content.vb: Public Shared Function GetMockedSegment(len As Integer, cData As IList(Of CharData)) As ITMPSegmentData
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMockedSegment*
  nameWithType.vb: TMPAnimationUtility.GetMockedSegment(Integer, IList(Of CharData))
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMockedSegment(Integer, System.Collections.Generic.IList(Of TMPEffects.CharacterData.CharData))
  name.vb: GetMockedSegment(Integer, IList(Of CharData))
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext,TMPEffects.Parameters.ITMPOffsetProvider,System.Boolean,System.Boolean)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext,TMPEffects.Parameters.ITMPOffsetProvider,System.Boolean,System.Boolean)
  id: GetOffset(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext,TMPEffects.Parameters.ITMPOffsetProvider,System.Boolean,System.Boolean)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetOffset(CharData, IAnimationContext, ITMPOffsetProvider, bool, bool)
  nameWithType: TMPAnimationUtility.GetOffset(CharData, IAnimationContext, ITMPOffsetProvider, bool, bool)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext, TMPEffects.Parameters.ITMPOffsetProvider, bool, bool)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetOffset
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 375
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static float GetOffset(CharData cData, IAnimationContext context, ITMPOffsetProvider provider, bool ignoreScaling = false, bool ignoreSegmentLenght = false)
    parameters:
    - id: cData
      type: TMPEffects.CharacterData.CharData
    - id: context
      type: TMPEffects.TMPAnimations.IAnimationContext
    - id: provider
      type: TMPEffects.Parameters.ITMPOffsetProvider
    - id: ignoreScaling
      type: System.Boolean
    - id: ignoreSegmentLenght
      type: System.Boolean
    return:
      type: System.Single
    content.vb: Public Shared Function GetOffset(cData As CharData, context As IAnimationContext, provider As ITMPOffsetProvider, ignoreScaling As Boolean = False, ignoreSegmentLenght As Boolean = False) As Single
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset*
  nameWithType.vb: TMPAnimationUtility.GetOffset(CharData, IAnimationContext, ITMPOffsetProvider, Boolean, Boolean)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext, TMPEffects.Parameters.ITMPOffsetProvider, Boolean, Boolean)
  name.vb: GetOffset(CharData, IAnimationContext, ITMPOffsetProvider, Boolean, Boolean)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Parameters.ITMPOffsetProvider,System.Boolean,System.Boolean)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Parameters.ITMPOffsetProvider,System.Boolean,System.Boolean)
  id: GetOffset(TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Parameters.ITMPOffsetProvider,System.Boolean,System.Boolean)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetOffset(CharData, IAnimatorDataProvider, ITMPOffsetProvider, bool, bool)
  nameWithType: TMPAnimationUtility.GetOffset(CharData, IAnimatorDataProvider, ITMPOffsetProvider, bool, bool)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider, TMPEffects.Parameters.ITMPOffsetProvider, bool, bool)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetOffset
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 386
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static float GetOffset(CharData cData, IAnimatorDataProvider context, ITMPOffsetProvider provider, bool ignoreScaling = false, bool ignoreSegmentLenght = false)
    parameters:
    - id: cData
      type: TMPEffects.CharacterData.CharData
    - id: context
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
    - id: provider
      type: TMPEffects.Parameters.ITMPOffsetProvider
    - id: ignoreScaling
      type: System.Boolean
    - id: ignoreSegmentLenght
      type: System.Boolean
    return:
      type: System.Single
    content.vb: Public Shared Function GetOffset(cData As CharData, context As IAnimatorDataProvider, provider As ITMPOffsetProvider, ignoreScaling As Boolean = False, ignoreSegmentLenght As Boolean = False) As Single
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset*
  nameWithType.vb: TMPAnimationUtility.GetOffset(CharData, IAnimatorDataProvider, ITMPOffsetProvider, Boolean, Boolean)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider, TMPEffects.Parameters.ITMPOffsetProvider, Boolean, Boolean)
  name.vb: GetOffset(CharData, IAnimatorDataProvider, ITMPOffsetProvider, Boolean, Boolean)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMinMaxOffset(System.Single@,System.Single@,TMPEffects.Parameters.TMPParameterTypes.OffsetType,TMPEffects.Components.Animator.ITMPSegmentData,TMPEffects.Components.Animator.IAnimatorDataProvider,System.Boolean)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetMinMaxOffset(System.Single@,System.Single@,TMPEffects.Parameters.TMPParameterTypes.OffsetType,TMPEffects.Components.Animator.ITMPSegmentData,TMPEffects.Components.Animator.IAnimatorDataProvider,System.Boolean)
  id: GetMinMaxOffset(System.Single@,System.Single@,TMPEffects.Parameters.TMPParameterTypes.OffsetType,TMPEffects.Components.Animator.ITMPSegmentData,TMPEffects.Components.Animator.IAnimatorDataProvider,System.Boolean)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetMinMaxOffset(out float, out float, OffsetType, ITMPSegmentData, IAnimatorDataProvider, bool)
  nameWithType: TMPAnimationUtility.GetMinMaxOffset(out float, out float, TMPParameterTypes.OffsetType, ITMPSegmentData, IAnimatorDataProvider, bool)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMinMaxOffset(out float, out float, TMPEffects.Parameters.TMPParameterTypes.OffsetType, TMPEffects.Components.Animator.ITMPSegmentData, TMPEffects.Components.Animator.IAnimatorDataProvider, bool)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetMinMaxOffset
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 401
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static void GetMinMaxOffset(out float min, out float max, TMPParameterTypes.OffsetType type, ITMPSegmentData segmentData, IAnimatorDataProvider animatorData, bool ignoreAnimatorScaling = false)
    parameters:
    - id: min
      type: System.Single
    - id: max
      type: System.Single
    - id: type
      type: TMPEffects.Parameters.TMPParameterTypes.OffsetType
    - id: segmentData
      type: TMPEffects.Components.Animator.ITMPSegmentData
    - id: animatorData
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
    - id: ignoreAnimatorScaling
      type: System.Boolean
    content.vb: Public Shared Sub GetMinMaxOffset(min As Single, max As Single, type As TMPParameterTypes.OffsetType, segmentData As ITMPSegmentData, animatorData As IAnimatorDataProvider, ignoreAnimatorScaling As Boolean = False)
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMinMaxOffset*
  nameWithType.vb: TMPAnimationUtility.GetMinMaxOffset(Single, Single, TMPParameterTypes.OffsetType, ITMPSegmentData, IAnimatorDataProvider, Boolean)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMinMaxOffset(Single, Single, TMPEffects.Parameters.TMPParameterTypes.OffsetType, TMPEffects.Components.Animator.ITMPSegmentData, TMPEffects.Components.Animator.IAnimatorDataProvider, Boolean)
  name.vb: GetMinMaxOffset(Single, Single, OffsetType, ITMPSegmentData, IAnimatorDataProvider, Boolean)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.Parameters.TMPParameterTypes.OffsetType,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.ITMPSegmentData,TMPEffects.Components.Animator.IAnimatorDataProvider,System.Boolean)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.Parameters.TMPParameterTypes.OffsetType,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.ITMPSegmentData,TMPEffects.Components.Animator.IAnimatorDataProvider,System.Boolean)
  id: GetOffset(TMPEffects.Parameters.TMPParameterTypes.OffsetType,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.ITMPSegmentData,TMPEffects.Components.Animator.IAnimatorDataProvider,System.Boolean)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetOffset(OffsetType, CharData, ITMPSegmentData, IAnimatorDataProvider, bool)
  nameWithType: TMPAnimationUtility.GetOffset(TMPParameterTypes.OffsetType, CharData, ITMPSegmentData, IAnimatorDataProvider, bool)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.Parameters.TMPParameterTypes.OffsetType, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.ITMPSegmentData, TMPEffects.Components.Animator.IAnimatorDataProvider, bool)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetOffset
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 644
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static float GetOffset(TMPParameterTypes.OffsetType type, CharData cData, ITMPSegmentData segmentData, IAnimatorDataProvider animatorData, bool ignoreAnimatorScaling = false)
    parameters:
    - id: type
      type: TMPEffects.Parameters.TMPParameterTypes.OffsetType
    - id: cData
      type: TMPEffects.CharacterData.CharData
    - id: segmentData
      type: TMPEffects.Components.Animator.ITMPSegmentData
    - id: animatorData
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
    - id: ignoreAnimatorScaling
      type: System.Boolean
    return:
      type: System.Single
    content.vb: Public Shared Function GetOffset(type As TMPParameterTypes.OffsetType, cData As CharData, segmentData As ITMPSegmentData, animatorData As IAnimatorDataProvider, ignoreAnimatorScaling As Boolean = False) As Single
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset*
  nameWithType.vb: TMPAnimationUtility.GetOffset(TMPParameterTypes.OffsetType, CharData, ITMPSegmentData, IAnimatorDataProvider, Boolean)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset(TMPEffects.Parameters.TMPParameterTypes.OffsetType, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.ITMPSegmentData, TMPEffects.Components.Animator.IAnimatorDataProvider, Boolean)
  name.vb: GetOffset(OffsetType, CharData, ITMPSegmentData, IAnimatorDataProvider, Boolean)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.SetToCharacter(TMP_Character,TMP_Character,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.SetToCharacter(TMP_Character,TMP_Character,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: SetToCharacter(TMP_Character,TMP_Character,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: SetToCharacter(TMP_Character, TMP_Character, CharData, IAnimationContext)
  nameWithType: TMPAnimationUtility.SetToCharacter(TMP_Character, TMP_Character, CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.SetToCharacter(TMP_Character, TMP_Character, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: SetToCharacter
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 700
  namespace: TMPEffects.TMPAnimations
  summary: Set a character's UVs so it will look like another character.
  example: []
  syntax:
    content: public static void SetToCharacter(TMP_Character newCharacter, TMP_Character originalCharacter, CharData cData, IAnimationContext context)
    parameters:
    - id: newCharacter
      type: Global.TMP_Character
      description: The character to change to.
    - id: originalCharacter
      type: Global.TMP_Character
      description: The original character of the <code class="paramref">cData</code>.
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> of the character.
    - id: context
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: The context of the animation.
    content.vb: Public Shared Sub SetToCharacter(newCharacter As TMP_Character, originalCharacter As TMP_Character, cData As CharData, context As IAnimationContext)
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.SetToCharacter*
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue(AnimationCurve,WrapMode,System.Single)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue(AnimationCurve,WrapMode,System.Single)
  id: GetValue(AnimationCurve,WrapMode,System.Single)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetValue(AnimationCurve, WrapMode, float)
  nameWithType: TMPAnimationUtility.GetValue(AnimationCurve, WrapMode, float)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue(AnimationCurve, WrapMode, float)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetValue
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 767
  namespace: TMPEffects.TMPAnimations
  summary: Evaluate an AnimationCurve with different WrapModes.
  example: []
  syntax:
    content: public static float GetValue(AnimationCurve curve, WrapMode wrapMode, float time)
    parameters:
    - id: curve
      type: Global.AnimationCurve
      description: The curve to evaluate.
    - id: wrapMode
      type: Global.WrapMode
      description: The WrapMode to use.
    - id: time
      type: System.Single
      description: The time value.
    return:
      type: System.Single
      description: The value of the curve at the given time value.
    content.vb: Public Shared Function GetValue(curve As AnimationCurve, wrapMode As WrapMode, time As Single) As Single
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: ''
  nameWithType.vb: TMPAnimationUtility.GetValue(AnimationCurve, WrapMode, Single)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue(AnimationCurve, WrapMode, Single)
  name.vb: GetValue(AnimationCurve, WrapMode, Single)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue(AnimationCurve,TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode,System.Single)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue(AnimationCurve,TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode,System.Single)
  id: GetValue(AnimationCurve,TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode,System.Single)
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: GetValue(AnimationCurve, TMPWrapMode, float)
  nameWithType: TMPAnimationUtility.GetValue(AnimationCurve, TMPAnimationUtility.TMPWrapMode, float)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue(AnimationCurve, TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode, float)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: GetValue
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 772
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static float GetValue(AnimationCurve curve, TMPAnimationUtility.TMPWrapMode wrapMode, float time)
    parameters:
    - id: curve
      type: Global.AnimationCurve
    - id: wrapMode
      type: TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode
    - id: time
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function GetValue(curve As AnimationCurve, wrapMode As TMPAnimationUtility.TMPWrapMode, time As Single) As Single
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue*
  nameWithType.vb: TMPAnimationUtility.GetValue(AnimationCurve, TMPAnimationUtility.TMPWrapMode, Single)
  fullName.vb: TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue(AnimationCurve, TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode, Single)
  name.vb: GetValue(AnimationCurve, TMPWrapMode, Single)
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ToWrapMode(TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode)
  commentId: M:TMPEffects.TMPAnimations.TMPAnimationUtility.ToWrapMode(TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode)
  id: ToWrapMode(TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode)
  isExtensionMethod: true
  parent: TMPEffects.TMPAnimations.TMPAnimationUtility
  langs:
  - csharp
  - vb
  name: ToWrapMode(TMPWrapMode)
  nameWithType: TMPAnimationUtility.ToWrapMode(TMPAnimationUtility.TMPWrapMode)
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ToWrapMode(TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ToWrapMode
    path: ../Package/Runtime/Effects/TMPAnimations/TMPAnimationUtility.cs
    startLine: 803
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public static WrapMode ToWrapMode(this TMPAnimationUtility.TMPWrapMode wrapMode)
    parameters:
    - id: wrapMode
      type: TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode
    return:
      type: Global.WrapMode
    content.vb: Public Shared Function ToWrapMode(wrapMode As TMPAnimationUtility.TMPWrapMode) As WrapMode
  overload: TMPEffects.TMPAnimations.TMPAnimationUtility.ToWrapMode*
references:
- uid: TMPEffects.TMPAnimations
  commentId: N:TMPEffects.TMPAnimations
  href: TMPEffects.html
  name: TMPEffects.TMPAnimations
  nameWithType: TMPEffects.TMPAnimations
  fullName: TMPEffects.TMPAnimations
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_ScaleTextMesh_TMP_Text_System_Single_
  name: ScaleTextMesh
  nameWithType: TMPAnimationUtility.ScaleTextMesh
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleTextMesh
- uid: Global.TMP_Text
  isExternal: true
  name: TMP_Text
  nameWithType: TMP_Text
  fullName: TMP_Text
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TMPEffects.Components.Animator.IAnimatorDataProvider
  commentId: T:TMPEffects.Components.Animator.IAnimatorDataProvider
  parent: TMPEffects.Components.Animator
  href: TMPEffects.Components.Animator.IAnimatorDataProvider.html
  name: IAnimatorDataProvider
  nameWithType: IAnimatorDataProvider
  fullName: TMPEffects.Components.Animator.IAnimatorDataProvider
- uid: TMPEffects.Components.Animator
  commentId: N:TMPEffects.Components.Animator
  href: TMPEffects.html
  name: TMPEffects.Components.Animator
  nameWithType: TMPEffects.Components.Animator
  fullName: TMPEffects.Components.Animator
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Components
    name: Components
    href: TMPEffects.Components.html
  - name: .
  - uid: TMPEffects.Components.Animator
    name: Animator
    href: TMPEffects.Components.Animator.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Components
    name: Components
    href: TMPEffects.Components.html
  - name: .
  - uid: TMPEffects.Components.Animator
    name: Animator
    href: TMPEffects.Components.Animator.html
- uid: TMPEffects.TMPAnimations.IAnimationContext
  commentId: T:TMPEffects.TMPAnimations.IAnimationContext
  parent: TMPEffects.TMPAnimations
  href: TMPEffects.TMPAnimations.IAnimationContext.html
  name: IAnimationContext
  nameWithType: IAnimationContext
  fullName: TMPEffects.TMPAnimations.IAnimationContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TMPEffects.Components.TMPAnimator
  commentId: T:TMPEffects.Components.TMPAnimator
  parent: TMPEffects.Components
  href: TMPEffects.Components.TMPAnimator.html
  name: TMPAnimator
  nameWithType: TMPAnimator
  fullName: TMPEffects.Components.TMPAnimator
- uid: TMPEffects.CharacterData.CharData
  commentId: T:TMPEffects.CharacterData.CharData
  parent: TMPEffects.CharacterData
  href: TMPEffects.CharacterData.CharData.html
  name: CharData
  nameWithType: CharData
  fullName: TMPEffects.CharacterData.CharData
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_ScaleVector_Vector3_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: ScaleVector
  nameWithType: TMPAnimationUtility.ScaleVector
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ScaleVector
- uid: Global.Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: TMPEffects.Components
  commentId: N:TMPEffects.Components
  href: TMPEffects.html
  name: TMPEffects.Components
  nameWithType: TMPEffects.Components
  fullName: TMPEffects.Components
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Components
    name: Components
    href: TMPEffects.Components.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Components
    name: Components
    href: TMPEffects.Components.html
- uid: TMPEffects.CharacterData
  commentId: N:TMPEffects.CharacterData
  href: TMPEffects.html
  name: TMPEffects.CharacterData
  nameWithType: TMPEffects.CharacterData
  fullName: TMPEffects.CharacterData
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.CharacterData
    name: CharacterData
    href: TMPEffects.CharacterData.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.CharacterData
    name: CharacterData
    href: TMPEffects.CharacterData.html
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_IgnoreScaling_Vector3_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: IgnoreScaling
  nameWithType: TMPAnimationUtility.IgnoreScaling
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.IgnoreScaling
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_InverseScaleVector_Vector3_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: InverseScaleVector
  nameWithType: TMPAnimationUtility.InverseScaleVector
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.InverseScaleVector
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.AnchorToPosition*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.AnchorToPosition
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_AnchorToPosition_Vector2_TMPEffects_CharacterData_CharData_
  name: AnchorToPosition
  nameWithType: TMPAnimationUtility.AnchorToPosition
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.AnchorToPosition
- uid: Global.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Vector2
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_GetRawVertex_System_Int32_Vector3_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: GetRawVertex
  nameWithType: TMPAnimationUtility.GetRawVertex
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawVertex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_GetRawPosition_Vector3_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: GetRawPosition
  nameWithType: TMPAnimationUtility.GetRawPosition
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPosition
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_GetRawPivot_Vector3_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: GetRawPivot
  nameWithType: TMPAnimationUtility.GetRawPivot
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawPivot
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_GetRawDelta_Vector3_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: GetRawDelta
  nameWithType: TMPAnimationUtility.GetRawDelta
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetRawDelta
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_SetVertexRaw_System_Int32_Vector3_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: SetVertexRaw
  nameWithType: TMPAnimationUtility.SetVertexRaw
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.SetVertexRaw
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_SetPositionRaw_Vector3_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: SetPositionRaw
  nameWithType: TMPAnimationUtility.SetPositionRaw
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.SetPositionRaw
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ClosestPointOnLine*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.ClosestPointOnLine
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_ClosestPointOnLine_Vector3_Vector3_Vector3_
  name: ClosestPointOnLine
  nameWithType: TMPAnimationUtility.ClosestPointOnLine
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ClosestPointOnLine
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMockedSegment*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.GetMockedSegment
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_GetMockedSegment_System_Int32_System_Collections_Generic_IList_TMPEffects_CharacterData_CharData__
  name: GetMockedSegment
  nameWithType: TMPAnimationUtility.GetMockedSegment
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMockedSegment
- uid: System.Collections.Generic.IList{TMPEffects.CharacterData.CharData}
  commentId: T:System.Collections.Generic.IList{TMPEffects.CharacterData.CharData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<CharData>
  nameWithType: IList<CharData>
  fullName: System.Collections.Generic.IList<TMPEffects.CharacterData.CharData>
  nameWithType.vb: IList(Of CharData)
  fullName.vb: System.Collections.Generic.IList(Of TMPEffects.CharacterData.CharData)
  name.vb: IList(Of CharData)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: TMPEffects.CharacterData.CharData
    name: CharData
    href: TMPEffects.CharacterData.CharData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: TMPEffects.CharacterData.CharData
    name: CharData
    href: TMPEffects.CharacterData.CharData.html
  - name: )
- uid: TMPEffects.Components.Animator.ITMPSegmentData
  commentId: T:TMPEffects.Components.Animator.ITMPSegmentData
  parent: TMPEffects.Components.Animator
  href: TMPEffects.Components.Animator.ITMPSegmentData.html
  name: ITMPSegmentData
  nameWithType: ITMPSegmentData
  fullName: TMPEffects.Components.Animator.ITMPSegmentData
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_GetOffset_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_TMPEffects_Parameters_ITMPOffsetProvider_System_Boolean_System_Boolean_
  name: GetOffset
  nameWithType: TMPAnimationUtility.GetOffset
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetOffset
- uid: TMPEffects.Parameters.ITMPOffsetProvider
  commentId: T:TMPEffects.Parameters.ITMPOffsetProvider
  parent: TMPEffects.Parameters
  href: TMPEffects.Parameters.ITMPOffsetProvider.html
  name: ITMPOffsetProvider
  nameWithType: ITMPOffsetProvider
  fullName: TMPEffects.Parameters.ITMPOffsetProvider
- uid: TMPEffects.Parameters
  commentId: N:TMPEffects.Parameters
  href: TMPEffects.html
  name: TMPEffects.Parameters
  nameWithType: TMPEffects.Parameters
  fullName: TMPEffects.Parameters
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Parameters
    name: Parameters
    href: TMPEffects.Parameters.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Parameters
    name: Parameters
    href: TMPEffects.Parameters.html
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMinMaxOffset*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.GetMinMaxOffset
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_GetMinMaxOffset_System_Single__System_Single__TMPEffects_Parameters_TMPParameterTypes_OffsetType_TMPEffects_Components_Animator_ITMPSegmentData_TMPEffects_Components_Animator_IAnimatorDataProvider_System_Boolean_
  name: GetMinMaxOffset
  nameWithType: TMPAnimationUtility.GetMinMaxOffset
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetMinMaxOffset
- uid: TMPEffects.Parameters.TMPParameterTypes.OffsetType
  commentId: T:TMPEffects.Parameters.TMPParameterTypes.OffsetType
  parent: TMPEffects.Parameters
  href: TMPEffects.Parameters.TMPParameterTypes.html
  name: TMPParameterTypes.OffsetType
  nameWithType: TMPParameterTypes.OffsetType
  fullName: TMPEffects.Parameters.TMPParameterTypes.OffsetType
  spec.csharp:
  - uid: TMPEffects.Parameters.TMPParameterTypes
    name: TMPParameterTypes
    href: TMPEffects.Parameters.TMPParameterTypes.html
  - name: .
  - uid: TMPEffects.Parameters.TMPParameterTypes.OffsetType
    name: OffsetType
    href: TMPEffects.Parameters.TMPParameterTypes.OffsetType.html
  spec.vb:
  - uid: TMPEffects.Parameters.TMPParameterTypes
    name: TMPParameterTypes
    href: TMPEffects.Parameters.TMPParameterTypes.html
  - name: .
  - uid: TMPEffects.Parameters.TMPParameterTypes.OffsetType
    name: OffsetType
    href: TMPEffects.Parameters.TMPParameterTypes.OffsetType.html
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.SetToCharacter*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.SetToCharacter
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_SetToCharacter_TMP_Character_TMP_Character_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: SetToCharacter
  nameWithType: TMPAnimationUtility.SetToCharacter
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.SetToCharacter
- uid: Global.TMP_Character
  isExternal: true
  name: TMP_Character
  nameWithType: TMP_Character
  fullName: TMP_Character
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_GetValue_AnimationCurve_WrapMode_System_Single_
  name: GetValue
  nameWithType: TMPAnimationUtility.GetValue
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.GetValue
- uid: Global.AnimationCurve
  isExternal: true
  name: AnimationCurve
  nameWithType: AnimationCurve
  fullName: AnimationCurve
- uid: Global.WrapMode
  isExternal: true
  name: WrapMode
  nameWithType: WrapMode
  fullName: WrapMode
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode
  commentId: T:TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode
  parent: TMPEffects.TMPAnimations
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html
  name: TMPAnimationUtility.TMPWrapMode
  nameWithType: TMPAnimationUtility.TMPWrapMode
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode
  spec.csharp:
  - uid: TMPEffects.TMPAnimations.TMPAnimationUtility
    name: TMPAnimationUtility
    href: TMPEffects.TMPAnimations.TMPAnimationUtility.html
  - name: .
  - uid: TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode
    name: TMPWrapMode
    href: TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode.html
  spec.vb:
  - uid: TMPEffects.TMPAnimations.TMPAnimationUtility
    name: TMPAnimationUtility
    href: TMPEffects.TMPAnimations.TMPAnimationUtility.html
  - name: .
  - uid: TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode
    name: TMPWrapMode
    href: TMPEffects.TMPAnimations.TMPAnimationUtility.TMPWrapMode.html
- uid: TMPEffects.TMPAnimations.TMPAnimationUtility.ToWrapMode*
  commentId: Overload:TMPEffects.TMPAnimations.TMPAnimationUtility.ToWrapMode
  href: TMPEffects.TMPAnimations.TMPAnimationUtility.html#TMPEffects_TMPAnimations_TMPAnimationUtility_ToWrapMode_TMPEffects_TMPAnimations_TMPAnimationUtility_TMPWrapMode_
  name: ToWrapMode
  nameWithType: TMPAnimationUtility.ToWrapMode
  fullName: TMPEffects.TMPAnimations.TMPAnimationUtility.ToWrapMode
