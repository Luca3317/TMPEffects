### YamlMime:ManagedReference
items:
- uid: TMPEffects.Parameters.ParameterUtility.ParseDelegate`4
  commentId: T:TMPEffects.Parameters.ParameterUtility.ParseDelegate`4
  id: ParameterUtility.ParseDelegate`4
  parent: TMPEffects.Parameters
  children: []
  langs:
  - csharp
  - vb
  name: ParameterUtility.ParseDelegate<T, U, V, W>
  nameWithType: ParameterUtility.ParseDelegate<T, U, V, W>
  fullName: TMPEffects.Parameters.ParameterUtility.ParseDelegate<T, U, V, W>
  type: Delegate
  source:
    remote:
      path: Package/Runtime/Parameters/ParameterUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: ParseDelegate
    path: ../Package/Runtime/Parameters/ParameterUtility.cs
    startLine: 139
  namespace: TMPEffects.Parameters
  syntax:
    content: public delegate W ParameterUtility.ParseDelegate<T, U, V, W>(T input, out U output, V keywords)
    parameters:
    - id: input
      type: '{T}'
    - id: output
      type: '{U}'
    - id: keywords
      type: '{V}'
    typeParameters:
    - id: T
    - id: U
    - id: V
    - id: W
    return:
      type: '{W}'
    content.vb: Public Delegate Function ParameterUtility.ParseDelegate(Of T, U, V, W)(input As T, output As U, keywords As V) As W
  nameWithType.vb: ParameterUtility.ParseDelegate(Of T, U, V, W)
  fullName.vb: TMPEffects.Parameters.ParameterUtility.ParseDelegate(Of T, U, V, W)
  name.vb: ParameterUtility.ParseDelegate(Of T, U, V, W)
references:
- uid: TMPEffects.Parameters
  commentId: N:TMPEffects.Parameters
  href: TMPEffects.html
  name: TMPEffects.Parameters
  nameWithType: TMPEffects.Parameters
  fullName: TMPEffects.Parameters
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Parameters
    name: Parameters
    href: TMPEffects.Parameters.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Parameters
    name: Parameters
    href: TMPEffects.Parameters.html
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: '{U}'
  commentId: '!:U'
  definition: U
  name: U
  nameWithType: U
  fullName: U
- uid: '{V}'
  commentId: '!:V'
  definition: V
  name: V
  nameWithType: V
  fullName: V
- uid: '{W}'
  commentId: '!:W'
  definition: W
  name: W
  nameWithType: W
  fullName: W
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: U
  commentId: '!:U'
  name: U
  nameWithType: U
  fullName: U
- uid: V
  commentId: '!:V'
  name: V
  nameWithType: V
  fullName: V
- uid: W
  commentId: '!:W'
  name: W
  nameWithType: W
  fullName: W
