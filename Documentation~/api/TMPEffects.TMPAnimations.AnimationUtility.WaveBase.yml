### YamlMime:ManagedReference
items:
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  commentId: T:TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  id: AnimationUtility.WaveBase
  parent: TMPEffects.TMPAnimations
  children:
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.#ctor
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.#ctor(System.Single,System.Single,System.Single,System.Single)
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Amplitude
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Frequency
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnAfterDeserialize
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnBeforeSerialize
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Period
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.WaveLength
  - TMPEffects.TMPAnimations.AnimationUtility.WaveBase.wavelength
  langs:
  - csharp
  - vb
  name: AnimationUtility.WaveBase
  nameWithType: AnimationUtility.WaveBase
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  type: Class
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: WaveBase
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 350
  namespace: TMPEffects.TMPAnimations
  summary: >-
    Base class for <xref href="TMPEffects.TMPAnimations.AnimationUtility.Wave" data-throw-if-not-resolved="false"></xref>.<br />

    Allows you to easily create periodic animations.<b></b>

    You should take a look at the online documentation for this one:<b></b>

    https://tmpeffects.luca3317.dev/docs/tmpanimator_animationutility_wave.html
  example: []
  syntax:
    content: >-
      [Serializable]

      public abstract class AnimationUtility.WaveBase : ISerializationCallbackReceiver
    content.vb: >-
      <Serializable>

      Public MustInherit Class AnimationUtility.WaveBase Inherits ISerializationCallbackReceiver
  inheritance:
  - System.Object
  derivedClasses:
  - TMPEffects.TMPAnimations.AnimationUtility.Wave
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod
  id: UpPeriod
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: UpPeriod
  nameWithType: AnimationUtility.WaveBase.UpPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod
  type: Property
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: UpPeriod
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 358
  namespace: TMPEffects.TMPAnimations
  summary: >-
    The up period of the wave; how long it takes to travel up the wave.<br />

    Ignores the <xref href="TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity" data-throw-if-not-resolved="false"></xref> of the wave, if you want to know it'll actually

    take to travel up the wave, use <xref href="TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float UpPeriod { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property UpPeriod As Single
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod*
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod
  id: DownPeriod
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: DownPeriod
  nameWithType: AnimationUtility.WaveBase.DownPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod
  type: Property
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: DownPeriod
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 389
  namespace: TMPEffects.TMPAnimations
  summary: >-
    The down period of the wave; how long it takes to travel down the wave.<br />

    Ignores the <xref href="TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity" data-throw-if-not-resolved="false"></xref> of the wave, if you want to know it'll actually

    take to travel down the wave, use <xref href="TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float DownPeriod { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property DownPeriod As Single
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod*
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Amplitude
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Amplitude
  id: Amplitude
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: Amplitude
  nameWithType: AnimationUtility.WaveBase.Amplitude
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Amplitude
  type: Property
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: Amplitude
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 418
  namespace: TMPEffects.TMPAnimations
  summary: The amplitude of the wave.
  example: []
  syntax:
    content: public float Amplitude { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Amplitude As Single
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Amplitude*
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity
  id: Velocity
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: Velocity
  nameWithType: AnimationUtility.WaveBase.Velocity
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity
  type: Property
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: Velocity
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 427
  namespace: TMPEffects.TMPAnimations
  summary: The velocity at which the wave travels.
  example: []
  syntax:
    content: public float Velocity { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Velocity As Single
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity*
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Period
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Period
  id: Period
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: Period
  nameWithType: AnimationUtility.WaveBase.Period
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Period
  type: Property
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: Period
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 448
  namespace: TMPEffects.TMPAnimations
  summary: >-
    The period of the wave; how long it takes to travel up and down the wave.<br />

    Sum of <xref href="TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod" data-throw-if-not-resolved="false"></xref> and <xref href="TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod" data-throw-if-not-resolved="false"></xref>.<br />

    Ignores the <xref href="TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity" data-throw-if-not-resolved="false"></xref> of the wave, if you want to know it'll actually

    take to travel the wave, use <xref href="TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float Period { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Period As Single
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Period*
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.WaveLength
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.WaveLength
  id: WaveLength
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: WaveLength
  nameWithType: AnimationUtility.WaveBase.WaveLength
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.WaveLength
  type: Property
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: WaveLength
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 456
  namespace: TMPEffects.TMPAnimations
  summary: The wavelength of the wave.
  example: []
  syntax:
    content: public float WaveLength { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property WaveLength As Single
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.WaveLength*
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod
  id: EffectiveUpPeriod
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: EffectiveUpPeriod
  nameWithType: AnimationUtility.WaveBase.EffectiveUpPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod
  type: Property
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: EffectiveUpPeriod
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 464
  namespace: TMPEffects.TMPAnimations
  summary: The amount of time it takes to travel up the wave.
  example: []
  syntax:
    content: public float EffectiveUpPeriod { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property EffectiveUpPeriod As Single
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod*
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod
  id: EffectiveDownPeriod
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: EffectiveDownPeriod
  nameWithType: AnimationUtility.WaveBase.EffectiveDownPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod
  type: Property
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: EffectiveDownPeriod
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 472
  namespace: TMPEffects.TMPAnimations
  summary: The amount of time it takes to travel down the wave.
  example: []
  syntax:
    content: public float EffectiveDownPeriod { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property EffectiveDownPeriod As Single
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod*
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod
  id: EffectivePeriod
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: EffectivePeriod
  nameWithType: AnimationUtility.WaveBase.EffectivePeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod
  type: Property
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: EffectivePeriod
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 481
  namespace: TMPEffects.TMPAnimations
  summary: >-
    The amount of time it takes to travel the wave.<br />

    Sum of <xref href="TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod" data-throw-if-not-resolved="false"></xref> and <xref href="TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public float EffectivePeriod { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property EffectivePeriod As Single
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod*
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Frequency
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Frequency
  id: Frequency
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: Frequency
  nameWithType: AnimationUtility.WaveBase.Frequency
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Frequency
  type: Property
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: Frequency
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 489
  namespace: TMPEffects.TMPAnimations
  summary: The frequency of the wave.
  example: []
  syntax:
    content: public float Frequency { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Frequency As Single
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Frequency*
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.#ctor
  commentId: M:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.#ctor
  id: '#ctor'
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: WaveBase()
  nameWithType: AnimationUtility.WaveBase.WaveBase()
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.WaveBase()
  type: Constructor
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: .ctor
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 494
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public WaveBase()
    content.vb: Public Sub New()
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.#ctor*
  nameWithType.vb: AnimationUtility.WaveBase.New()
  fullName.vb: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.New()
  name.vb: New()
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: WaveBase(float, float, float, float)
  nameWithType: AnimationUtility.WaveBase.WaveBase(float, float, float, float)
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.WaveBase(float, float, float, float)
  type: Constructor
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: .ctor
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 497
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public WaveBase(float upPeriod, float downPeriod, float velocity, float amplitude)
    parameters:
    - id: upPeriod
      type: System.Single
    - id: downPeriod
      type: System.Single
    - id: velocity
      type: System.Single
    - id: amplitude
      type: System.Single
    content.vb: Public Sub New(upPeriod As Single, downPeriod As Single, velocity As Single, amplitude As Single)
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.#ctor*
  nameWithType.vb: AnimationUtility.WaveBase.New(Single, Single, Single, Single)
  fullName.vb: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.New(Single, Single, Single, Single)
  name.vb: New(Single, Single, Single, Single)
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.wavelength
  commentId: F:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.wavelength
  id: wavelength
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: wavelength
  nameWithType: AnimationUtility.WaveBase.wavelength
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.wavelength
  type: Field
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: wavelength
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 531
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: >-
      [NonSerialized]

      public float wavelength
    return:
      type: System.Single
    content.vb: >-
      <NonSerialized>

      Public wavelength As Single
  attributes:
  - type: System.NonSerializedAttribute
    ctor: System.NonSerializedAttribute.#ctor
    arguments: []
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnBeforeSerialize
  commentId: M:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnBeforeSerialize
  id: OnBeforeSerialize
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: OnBeforeSerialize()
  nameWithType: AnimationUtility.WaveBase.OnBeforeSerialize()
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnBeforeSerialize()
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: OnBeforeSerialize
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 533
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public virtual void OnBeforeSerialize()
    content.vb: Public Overridable Sub OnBeforeSerialize()
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnBeforeSerialize*
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnAfterDeserialize
  commentId: M:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnAfterDeserialize
  id: OnAfterDeserialize
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  langs:
  - csharp
  - vb
  name: OnAfterDeserialize()
  nameWithType: AnimationUtility.WaveBase.OnAfterDeserialize()
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnAfterDeserialize()
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: OnAfterDeserialize
    path: ../Package/Runtime/Effects/TMPAnimations/AnimationUtility.cs
    startLine: 546
  namespace: TMPEffects.TMPAnimations
  syntax:
    content: public virtual void OnAfterDeserialize()
    content.vb: Public Overridable Sub OnAfterDeserialize()
  overload: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnAfterDeserialize*
references:
- uid: TMPEffects.TMPAnimations.AnimationUtility.Wave
  commentId: T:TMPEffects.TMPAnimations.AnimationUtility.Wave
  parent: TMPEffects.TMPAnimations
  href: TMPEffects.TMPAnimations.AnimationUtility.html
  name: AnimationUtility.Wave
  nameWithType: AnimationUtility.Wave
  fullName: TMPEffects.TMPAnimations.AnimationUtility.Wave
  spec.csharp:
  - uid: TMPEffects.TMPAnimations.AnimationUtility
    name: AnimationUtility
    href: TMPEffects.TMPAnimations.AnimationUtility.html
  - name: .
  - uid: TMPEffects.TMPAnimations.AnimationUtility.Wave
    name: Wave
    href: TMPEffects.TMPAnimations.AnimationUtility.Wave.html
  spec.vb:
  - uid: TMPEffects.TMPAnimations.AnimationUtility
    name: AnimationUtility
    href: TMPEffects.TMPAnimations.AnimationUtility.html
  - name: .
  - uid: TMPEffects.TMPAnimations.AnimationUtility.Wave
    name: Wave
    href: TMPEffects.TMPAnimations.AnimationUtility.Wave.html
- uid: TMPEffects.TMPAnimations
  commentId: N:TMPEffects.TMPAnimations
  href: TMPEffects.html
  name: TMPEffects.TMPAnimations
  nameWithType: TMPEffects.TMPAnimations
  fullName: TMPEffects.TMPAnimations
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_Velocity
  name: Velocity
  nameWithType: AnimationUtility.WaveBase.Velocity
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_EffectiveUpPeriod
  name: EffectiveUpPeriod
  nameWithType: AnimationUtility.WaveBase.EffectiveUpPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_UpPeriod
  name: UpPeriod
  nameWithType: AnimationUtility.WaveBase.UpPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  commentId: T:TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  parent: TMPEffects.TMPAnimations
  href: TMPEffects.TMPAnimations.AnimationUtility.html
  name: AnimationUtility.WaveBase
  nameWithType: AnimationUtility.WaveBase
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  spec.csharp:
  - uid: TMPEffects.TMPAnimations.AnimationUtility
    name: AnimationUtility
    href: TMPEffects.TMPAnimations.AnimationUtility.html
  - name: .
  - uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
    name: WaveBase
    href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html
  spec.vb:
  - uid: TMPEffects.TMPAnimations.AnimationUtility
    name: AnimationUtility
    href: TMPEffects.TMPAnimations.AnimationUtility.html
  - name: .
  - uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
    name: WaveBase
    href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_EffectiveDownPeriod
  name: EffectiveDownPeriod
  nameWithType: AnimationUtility.WaveBase.EffectiveDownPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_DownPeriod
  name: DownPeriod
  nameWithType: AnimationUtility.WaveBase.DownPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Amplitude*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Amplitude
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_Amplitude
  name: Amplitude
  nameWithType: AnimationUtility.WaveBase.Amplitude
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Amplitude
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_Velocity
  name: Velocity
  nameWithType: AnimationUtility.WaveBase.Velocity
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Velocity
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_UpPeriod
  name: UpPeriod
  nameWithType: AnimationUtility.WaveBase.UpPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.UpPeriod
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_DownPeriod
  name: DownPeriod
  nameWithType: AnimationUtility.WaveBase.DownPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.DownPeriod
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod
  commentId: P:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod
  parent: TMPEffects.TMPAnimations.AnimationUtility.WaveBase
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_EffectivePeriod
  name: EffectivePeriod
  nameWithType: AnimationUtility.WaveBase.EffectivePeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Period*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Period
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_Period
  name: Period
  nameWithType: AnimationUtility.WaveBase.Period
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Period
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.WaveLength*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.WaveLength
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_WaveLength
  name: WaveLength
  nameWithType: AnimationUtility.WaveBase.WaveLength
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.WaveLength
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_EffectiveUpPeriod
  name: EffectiveUpPeriod
  nameWithType: AnimationUtility.WaveBase.EffectiveUpPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveUpPeriod
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_EffectiveDownPeriod
  name: EffectiveDownPeriod
  nameWithType: AnimationUtility.WaveBase.EffectiveDownPeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectiveDownPeriod
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_EffectivePeriod
  name: EffectivePeriod
  nameWithType: AnimationUtility.WaveBase.EffectivePeriod
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.EffectivePeriod
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Frequency*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Frequency
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_Frequency
  name: Frequency
  nameWithType: AnimationUtility.WaveBase.Frequency
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.Frequency
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.#ctor*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.#ctor
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase__ctor
  name: WaveBase
  nameWithType: AnimationUtility.WaveBase.WaveBase
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.WaveBase
  nameWithType.vb: AnimationUtility.WaveBase.New
  fullName.vb: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.New
  name.vb: New
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnBeforeSerialize*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnBeforeSerialize
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_OnBeforeSerialize
  name: OnBeforeSerialize
  nameWithType: AnimationUtility.WaveBase.OnBeforeSerialize
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnBeforeSerialize
- uid: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnAfterDeserialize*
  commentId: Overload:TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnAfterDeserialize
  href: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.html#TMPEffects_TMPAnimations_AnimationUtility_WaveBase_OnAfterDeserialize
  name: OnAfterDeserialize
  nameWithType: AnimationUtility.WaveBase.OnAfterDeserialize
  fullName: TMPEffects.TMPAnimations.AnimationUtility.WaveBase.OnAfterDeserialize
