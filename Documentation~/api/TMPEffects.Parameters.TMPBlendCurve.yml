### YamlMime:ManagedReference
items:
- uid: TMPEffects.Parameters.TMPBlendCurve
  commentId: T:TMPEffects.Parameters.TMPBlendCurve
  id: TMPBlendCurve
  parent: TMPEffects.Parameters
  children:
  - TMPEffects.Parameters.TMPBlendCurve.#ctor
  - TMPEffects.Parameters.TMPBlendCurve.#ctor(TMPEffects.Parameters.TMPBlendCurve)
  - TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(System.Single,System.Single,System.Single,System.Single,System.Single)
  - TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Components.Animator.ITMPSegmentData)
  - TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(System.Single,System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Components.Animator.ITMPSegmentData)
  - TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(System.Single,System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.Parameters.TMPBlendCurve.curve
  - TMPEffects.Parameters.TMPBlendCurve.finishWholeSegmentInTime
  - TMPEffects.Parameters.TMPBlendCurve.ignoreAnimatorScaling
  - TMPEffects.Parameters.TMPBlendCurve.provider
  - TMPEffects.Parameters.TMPBlendCurve.uniformity
  langs:
  - csharp
  - vb
  name: TMPBlendCurve
  nameWithType: TMPBlendCurve
  fullName: TMPEffects.Parameters.TMPBlendCurve
  type: Class
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: TMPBlendCurve
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 14
  namespace: TMPEffects.Parameters
  summary: >-
    Blend curve with built-in offsets.<br />

    This uses a different, internal way to calculate offsets (different from e.g. <xref href="TMPEffects.Parameters.OffsetBundle" data-throw-if-not-resolved="false"></xref>)

    because it was created to be used for TMPMeshModifier clips in the timeline, which requires the offset to be

    adjustable in certain ways, in some cases.
  example: []
  syntax:
    content: >-
      [Serializable]

      [TMPParameterBundle("BlendCurve")]

      public class TMPBlendCurve
    content.vb: >-
      <Serializable>

      <TMPParameterBundle("BlendCurve")>

      Public Class TMPBlendCurve
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: TMPEffects.Parameters.Attributes.TMPParameterBundleAttribute
    ctor: TMPEffects.Parameters.Attributes.TMPParameterBundleAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: BlendCurve
- uid: TMPEffects.Parameters.TMPBlendCurve.curve
  commentId: F:TMPEffects.Parameters.TMPBlendCurve.curve
  id: curve
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: curve
  nameWithType: TMPBlendCurve.curve
  fullName: TMPEffects.Parameters.TMPBlendCurve.curve
  type: Field
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: curve
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 22
  namespace: TMPEffects.Parameters
  summary: The curve used for evaluation.
  example: []
  syntax:
    content: >-
      [TMPParameterBundleField("curve", new string[] { "crv" })]

      public AnimationCurve curve
    return:
      type: Global.AnimationCurve
    content.vb: >-
      <TMPParameterBundleField("curve", New String() { "crv" })>

      Public curve As AnimationCurve
- uid: TMPEffects.Parameters.TMPBlendCurve.provider
  commentId: P:TMPEffects.Parameters.TMPBlendCurve.provider
  id: provider
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: provider
  nameWithType: TMPBlendCurve.provider
  fullName: TMPEffects.Parameters.TMPBlendCurve.provider
  type: Property
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: provider
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 27
  namespace: TMPEffects.Parameters
  summary: The <xref href="TMPEffects.Parameters.ITMPOffsetProvider" data-throw-if-not-resolved="false"></xref> used to calculate offsets.
  example: []
  syntax:
    content: public ITMPOffsetProvider provider { get; set; }
    parameters: []
    return:
      type: TMPEffects.Parameters.ITMPOffsetProvider
    content.vb: Public Property provider As ITMPOffsetProvider
  overload: TMPEffects.Parameters.TMPBlendCurve.provider*
- uid: TMPEffects.Parameters.TMPBlendCurve.uniformity
  commentId: F:TMPEffects.Parameters.TMPBlendCurve.uniformity
  id: uniformity
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: uniformity
  nameWithType: TMPBlendCurve.uniformity
  fullName: TMPEffects.Parameters.TMPBlendCurve.uniformity
  type: Field
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: uniformity
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 42
  namespace: TMPEffects.Parameters
  summary: The uniformity that should be applied to the offset.
  example: []
  syntax:
    content: >-
      [TMPParameterBundleField("uniformity", new string[] { "uni" })]

      public float uniformity
    return:
      type: System.Single
    content.vb: >-
      <TMPParameterBundleField("uniformity", New String() { "uni" })>

      Public uniformity As Single
- uid: TMPEffects.Parameters.TMPBlendCurve.ignoreAnimatorScaling
  commentId: F:TMPEffects.Parameters.TMPBlendCurve.ignoreAnimatorScaling
  id: ignoreAnimatorScaling
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: ignoreAnimatorScaling
  nameWithType: TMPBlendCurve.ignoreAnimatorScaling
  fullName: TMPEffects.Parameters.TMPBlendCurve.ignoreAnimatorScaling
  type: Field
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: ignoreAnimatorScaling
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 48
  namespace: TMPEffects.Parameters
  summary: Whether to ignore animator scaling (for relevant offset types).
  example: []
  syntax:
    content: >-
      [TMPParameterBundleField("ignorescaling", new string[] { "ignorescl", "ignscl", "ignscaling" })]

      public bool ignoreAnimatorScaling
    return:
      type: System.Boolean
    content.vb: >-
      <TMPParameterBundleField("ignorescaling", New String() { "ignorescl", "ignscl", "ignscaling" })>

      Public ignoreAnimatorScaling As Boolean
- uid: TMPEffects.Parameters.TMPBlendCurve.finishWholeSegmentInTime
  commentId: F:TMPEffects.Parameters.TMPBlendCurve.finishWholeSegmentInTime
  id: finishWholeSegmentInTime
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: finishWholeSegmentInTime
  nameWithType: TMPBlendCurve.finishWholeSegmentInTime
  fullName: TMPEffects.Parameters.TMPBlendCurve.finishWholeSegmentInTime
  type: Field
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: finishWholeSegmentInTime
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 55
  namespace: TMPEffects.Parameters
  summary: Whether to finish blending the entire segment in the specified duration, or the first character.
  example: []
  syntax:
    content: >-
      [TMPParameterBundleField("ignoresegmentlength", new string[] { "ignoresegmentlen", "ignoreseglen", "ignseglen", "ignsegmentlength", "ignsegmentlen" })]

      public bool finishWholeSegmentInTime
    return:
      type: System.Boolean
    content.vb: >-
      <TMPParameterBundleField("ignoresegmentlength", New String() { "ignoresegmentlen", "ignoreseglen", "ignseglen", "ignsegmentlength", "ignsegmentlen" })>

      Public finishWholeSegmentInTime As Boolean
- uid: TMPEffects.Parameters.TMPBlendCurve.#ctor
  commentId: M:TMPEffects.Parameters.TMPBlendCurve.#ctor
  id: '#ctor'
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: TMPBlendCurve()
  nameWithType: TMPBlendCurve.TMPBlendCurve()
  fullName: TMPEffects.Parameters.TMPBlendCurve.TMPBlendCurve()
  type: Constructor
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: .ctor
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 57
  namespace: TMPEffects.Parameters
  syntax:
    content: public TMPBlendCurve()
    content.vb: Public Sub New()
  overload: TMPEffects.Parameters.TMPBlendCurve.#ctor*
  nameWithType.vb: TMPBlendCurve.New()
  fullName.vb: TMPEffects.Parameters.TMPBlendCurve.New()
  name.vb: New()
- uid: TMPEffects.Parameters.TMPBlendCurve.#ctor(TMPEffects.Parameters.TMPBlendCurve)
  commentId: M:TMPEffects.Parameters.TMPBlendCurve.#ctor(TMPEffects.Parameters.TMPBlendCurve)
  id: '#ctor(TMPEffects.Parameters.TMPBlendCurve)'
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: TMPBlendCurve(TMPBlendCurve)
  nameWithType: TMPBlendCurve.TMPBlendCurve(TMPBlendCurve)
  fullName: TMPEffects.Parameters.TMPBlendCurve.TMPBlendCurve(TMPEffects.Parameters.TMPBlendCurve)
  type: Constructor
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: .ctor
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 61
  namespace: TMPEffects.Parameters
  syntax:
    content: public TMPBlendCurve(TMPBlendCurve crv)
    parameters:
    - id: crv
      type: TMPEffects.Parameters.TMPBlendCurve
    content.vb: Public Sub New(crv As TMPBlendCurve)
  overload: TMPEffects.Parameters.TMPBlendCurve.#ctor*
  nameWithType.vb: TMPBlendCurve.New(TMPBlendCurve)
  fullName.vb: TMPEffects.Parameters.TMPBlendCurve.New(TMPEffects.Parameters.TMPBlendCurve)
  name.vb: New(TMPBlendCurve)
- uid: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(System.Single,System.Single,System.Single,System.Single,System.Single)
  id: EvaluateIn(System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: EvaluateIn(float, float, float, float, float)
  nameWithType: TMPBlendCurve.EvaluateIn(float, float, float, float, float)
  fullName: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(float, float, float, float, float)
  type: Method
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: EvaluateIn
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 80
  namespace: TMPEffects.Parameters
  summary: Evaluate as an "in" blending curve.
  example: []
  syntax:
    content: public float EvaluateIn(float timeValue, float totalDuration, float minOffset, float maxOffset, float offset)
    parameters:
    - id: timeValue
      type: System.Single
      description: ''
    - id: totalDuration
      type: System.Single
      description: ''
    - id: minOffset
      type: System.Single
      description: ''
    - id: maxOffset
      type: System.Single
      description: ''
    - id: offset
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Function EvaluateIn(timeValue As Single, totalDuration As Single, minOffset As Single, maxOffset As Single, offset As Single) As Single
  overload: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn*
  nameWithType.vb: TMPBlendCurve.EvaluateIn(Single, Single, Single, Single, Single)
  fullName.vb: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(Single, Single, Single, Single, Single)
  name.vb: EvaluateIn(Single, Single, Single, Single, Single)
- uid: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Components.Animator.ITMPSegmentData)
  commentId: M:TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Components.Animator.ITMPSegmentData)
  id: EvaluateIn(System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Components.Animator.ITMPSegmentData)
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: EvaluateIn(float, float, CharData, IAnimatorDataProvider, ITMPSegmentData)
  nameWithType: TMPBlendCurve.EvaluateIn(float, float, CharData, IAnimatorDataProvider, ITMPSegmentData)
  fullName: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(float, float, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider, TMPEffects.Components.Animator.ITMPSegmentData)
  type: Method
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: EvaluateIn
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 111
  namespace: TMPEffects.Parameters
  summary: Evaluate as an "in" blending curve.
  example: []
  syntax:
    content: public float EvaluateIn(float timeValue, float totalDuration, CharData cData, IAnimatorDataProvider animatorData, ITMPSegmentData segmentData)
    parameters:
    - id: timeValue
      type: System.Single
      description: ''
    - id: totalDuration
      type: System.Single
      description: ''
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: ''
    - id: animatorData
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
      description: ''
    - id: segmentData
      type: TMPEffects.Components.Animator.ITMPSegmentData
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Function EvaluateIn(timeValue As Single, totalDuration As Single, cData As CharData, animatorData As IAnimatorDataProvider, segmentData As ITMPSegmentData) As Single
  overload: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn*
  nameWithType.vb: TMPBlendCurve.EvaluateIn(Single, Single, CharData, IAnimatorDataProvider, ITMPSegmentData)
  fullName.vb: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(Single, Single, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider, TMPEffects.Components.Animator.ITMPSegmentData)
  name.vb: EvaluateIn(Single, Single, CharData, IAnimatorDataProvider, ITMPSegmentData)
- uid: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: EvaluateIn(System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: EvaluateIn(float, float, CharData, IAnimationContext)
  nameWithType: TMPBlendCurve.EvaluateIn(float, float, CharData, IAnimationContext)
  fullName: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(float, float, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: EvaluateIn
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 128
  namespace: TMPEffects.Parameters
  summary: Evaluate as an "in" blending curve.
  example: []
  syntax:
    content: public float EvaluateIn(float timeValue, float duration, CharData cData, IAnimationContext context)
    parameters:
    - id: timeValue
      type: System.Single
      description: ''
    - id: duration
      type: System.Single
      description: ''
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: ''
    - id: context
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Function EvaluateIn(timeValue As Single, duration As Single, cData As CharData, context As IAnimationContext) As Single
  overload: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn*
  nameWithType.vb: TMPBlendCurve.EvaluateIn(Single, Single, CharData, IAnimationContext)
  fullName.vb: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn(Single, Single, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  name.vb: EvaluateIn(Single, Single, CharData, IAnimationContext)
- uid: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: EvaluateOut(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: EvaluateOut(float, float, float, float, float, float)
  nameWithType: TMPBlendCurve.EvaluateOut(float, float, float, float, float, float)
  fullName: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(float, float, float, float, float, float)
  type: Method
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: EvaluateOut
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 140
  namespace: TMPEffects.Parameters
  summary: Evaluate as an "out" blending curve.
  example: []
  syntax:
    content: public float EvaluateOut(float timeValue, float totalDuration, float preTime, float minOffset, float maxOffset, float offset)
    parameters:
    - id: timeValue
      type: System.Single
      description: ''
    - id: totalDuration
      type: System.Single
      description: ''
    - id: preTime
      type: System.Single
    - id: minOffset
      type: System.Single
      description: ''
    - id: maxOffset
      type: System.Single
      description: ''
    - id: offset
      type: System.Single
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Function EvaluateOut(timeValue As Single, totalDuration As Single, preTime As Single, minOffset As Single, maxOffset As Single, offset As Single) As Single
  overload: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut*
  nameWithType.vb: TMPBlendCurve.EvaluateOut(Single, Single, Single, Single, Single, Single)
  fullName.vb: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(Single, Single, Single, Single, Single, Single)
  name.vb: EvaluateOut(Single, Single, Single, Single, Single, Single)
- uid: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(System.Single,System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Components.Animator.ITMPSegmentData)
  commentId: M:TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(System.Single,System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Components.Animator.ITMPSegmentData)
  id: EvaluateOut(System.Single,System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.Components.Animator.IAnimatorDataProvider,TMPEffects.Components.Animator.ITMPSegmentData)
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: EvaluateOut(float, float, float, CharData, IAnimatorDataProvider, ITMPSegmentData)
  nameWithType: TMPBlendCurve.EvaluateOut(float, float, float, CharData, IAnimatorDataProvider, ITMPSegmentData)
  fullName: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(float, float, float, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider, TMPEffects.Components.Animator.ITMPSegmentData)
  type: Method
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: EvaluateOut
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 171
  namespace: TMPEffects.Parameters
  summary: Evaluate as an "out" blending curve.
  example: []
  syntax:
    content: public float EvaluateOut(float timeValue, float totalDuration, float preTime, CharData cData, IAnimatorDataProvider animatorData, ITMPSegmentData segmentData)
    parameters:
    - id: timeValue
      type: System.Single
      description: ''
    - id: totalDuration
      type: System.Single
      description: ''
    - id: preTime
      type: System.Single
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: ''
    - id: animatorData
      type: TMPEffects.Components.Animator.IAnimatorDataProvider
      description: ''
    - id: segmentData
      type: TMPEffects.Components.Animator.ITMPSegmentData
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Function EvaluateOut(timeValue As Single, totalDuration As Single, preTime As Single, cData As CharData, animatorData As IAnimatorDataProvider, segmentData As ITMPSegmentData) As Single
  overload: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut*
  nameWithType.vb: TMPBlendCurve.EvaluateOut(Single, Single, Single, CharData, IAnimatorDataProvider, ITMPSegmentData)
  fullName.vb: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(Single, Single, Single, TMPEffects.CharacterData.CharData, TMPEffects.Components.Animator.IAnimatorDataProvider, TMPEffects.Components.Animator.ITMPSegmentData)
  name.vb: EvaluateOut(Single, Single, Single, CharData, IAnimatorDataProvider, ITMPSegmentData)
- uid: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(System.Single,System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(System.Single,System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: EvaluateOut(System.Single,System.Single,System.Single,TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.Parameters.TMPBlendCurve
  langs:
  - csharp
  - vb
  name: EvaluateOut(float, float, float, CharData, IAnimationContext)
  nameWithType: TMPBlendCurve.EvaluateOut(float, float, float, CharData, IAnimationContext)
  fullName: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(float, float, float, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: EvaluateOut
    path: ../Package/Runtime/Parameters/Bundles/TMPBlendCurve.cs
    startLine: 188
  namespace: TMPEffects.Parameters
  summary: Evaluate as an "out" blending curve.
  example: []
  syntax:
    content: public float EvaluateOut(float timeValue, float duration, float preTime, CharData cData, IAnimationContext context)
    parameters:
    - id: timeValue
      type: System.Single
      description: ''
    - id: duration
      type: System.Single
      description: ''
    - id: preTime
      type: System.Single
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: ''
    - id: context
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Function EvaluateOut(timeValue As Single, duration As Single, preTime As Single, cData As CharData, context As IAnimationContext) As Single
  overload: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut*
  nameWithType.vb: TMPBlendCurve.EvaluateOut(Single, Single, Single, CharData, IAnimationContext)
  fullName.vb: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut(Single, Single, Single, TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  name.vb: EvaluateOut(Single, Single, Single, CharData, IAnimationContext)
references:
- uid: TMPEffects.Parameters.OffsetBundle
  commentId: T:TMPEffects.Parameters.OffsetBundle
  parent: TMPEffects.Parameters
  href: TMPEffects.Parameters.OffsetBundle.html
  name: OffsetBundle
  nameWithType: OffsetBundle
  fullName: TMPEffects.Parameters.OffsetBundle
- uid: TMPEffects.Parameters
  commentId: N:TMPEffects.Parameters
  href: TMPEffects.html
  name: TMPEffects.Parameters
  nameWithType: TMPEffects.Parameters
  fullName: TMPEffects.Parameters
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Parameters
    name: Parameters
    href: TMPEffects.Parameters.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Parameters
    name: Parameters
    href: TMPEffects.Parameters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.AnimationCurve
  isExternal: true
  name: AnimationCurve
  nameWithType: AnimationCurve
  fullName: AnimationCurve
- uid: TMPEffects.Parameters.ITMPOffsetProvider
  commentId: T:TMPEffects.Parameters.ITMPOffsetProvider
  parent: TMPEffects.Parameters
  href: TMPEffects.Parameters.ITMPOffsetProvider.html
  name: ITMPOffsetProvider
  nameWithType: ITMPOffsetProvider
  fullName: TMPEffects.Parameters.ITMPOffsetProvider
- uid: TMPEffects.Parameters.TMPBlendCurve.provider*
  commentId: Overload:TMPEffects.Parameters.TMPBlendCurve.provider
  href: TMPEffects.Parameters.TMPBlendCurve.html#TMPEffects_Parameters_TMPBlendCurve_provider
  name: provider
  nameWithType: TMPBlendCurve.provider
  fullName: TMPEffects.Parameters.TMPBlendCurve.provider
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TMPEffects.Parameters.TMPBlendCurve.#ctor*
  commentId: Overload:TMPEffects.Parameters.TMPBlendCurve.#ctor
  href: TMPEffects.Parameters.TMPBlendCurve.html#TMPEffects_Parameters_TMPBlendCurve__ctor
  name: TMPBlendCurve
  nameWithType: TMPBlendCurve.TMPBlendCurve
  fullName: TMPEffects.Parameters.TMPBlendCurve.TMPBlendCurve
  nameWithType.vb: TMPBlendCurve.New
  fullName.vb: TMPEffects.Parameters.TMPBlendCurve.New
  name.vb: New
- uid: TMPEffects.Parameters.TMPBlendCurve
  commentId: T:TMPEffects.Parameters.TMPBlendCurve
  parent: TMPEffects.Parameters
  href: TMPEffects.Parameters.TMPBlendCurve.html
  name: TMPBlendCurve
  nameWithType: TMPBlendCurve
  fullName: TMPEffects.Parameters.TMPBlendCurve
- uid: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn*
  commentId: Overload:TMPEffects.Parameters.TMPBlendCurve.EvaluateIn
  href: TMPEffects.Parameters.TMPBlendCurve.html#TMPEffects_Parameters_TMPBlendCurve_EvaluateIn_System_Single_System_Single_System_Single_System_Single_System_Single_
  name: EvaluateIn
  nameWithType: TMPBlendCurve.EvaluateIn
  fullName: TMPEffects.Parameters.TMPBlendCurve.EvaluateIn
- uid: TMPEffects.CharacterData.CharData
  commentId: T:TMPEffects.CharacterData.CharData
  parent: TMPEffects.CharacterData
  href: TMPEffects.CharacterData.CharData.html
  name: CharData
  nameWithType: CharData
  fullName: TMPEffects.CharacterData.CharData
- uid: TMPEffects.Components.Animator.IAnimatorDataProvider
  commentId: T:TMPEffects.Components.Animator.IAnimatorDataProvider
  parent: TMPEffects.Components.Animator
  href: TMPEffects.Components.Animator.IAnimatorDataProvider.html
  name: IAnimatorDataProvider
  nameWithType: IAnimatorDataProvider
  fullName: TMPEffects.Components.Animator.IAnimatorDataProvider
- uid: TMPEffects.Components.Animator.ITMPSegmentData
  commentId: T:TMPEffects.Components.Animator.ITMPSegmentData
  parent: TMPEffects.Components.Animator
  href: TMPEffects.Components.Animator.ITMPSegmentData.html
  name: ITMPSegmentData
  nameWithType: ITMPSegmentData
  fullName: TMPEffects.Components.Animator.ITMPSegmentData
- uid: TMPEffects.CharacterData
  commentId: N:TMPEffects.CharacterData
  href: TMPEffects.html
  name: TMPEffects.CharacterData
  nameWithType: TMPEffects.CharacterData
  fullName: TMPEffects.CharacterData
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.CharacterData
    name: CharacterData
    href: TMPEffects.CharacterData.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.CharacterData
    name: CharacterData
    href: TMPEffects.CharacterData.html
- uid: TMPEffects.Components.Animator
  commentId: N:TMPEffects.Components.Animator
  href: TMPEffects.html
  name: TMPEffects.Components.Animator
  nameWithType: TMPEffects.Components.Animator
  fullName: TMPEffects.Components.Animator
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Components
    name: Components
    href: TMPEffects.Components.html
  - name: .
  - uid: TMPEffects.Components.Animator
    name: Animator
    href: TMPEffects.Components.Animator.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Components
    name: Components
    href: TMPEffects.Components.html
  - name: .
  - uid: TMPEffects.Components.Animator
    name: Animator
    href: TMPEffects.Components.Animator.html
- uid: TMPEffects.TMPAnimations.IAnimationContext
  commentId: T:TMPEffects.TMPAnimations.IAnimationContext
  parent: TMPEffects.TMPAnimations
  href: TMPEffects.TMPAnimations.IAnimationContext.html
  name: IAnimationContext
  nameWithType: IAnimationContext
  fullName: TMPEffects.TMPAnimations.IAnimationContext
- uid: TMPEffects.TMPAnimations
  commentId: N:TMPEffects.TMPAnimations
  href: TMPEffects.html
  name: TMPEffects.TMPAnimations
  nameWithType: TMPEffects.TMPAnimations
  fullName: TMPEffects.TMPAnimations
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
- uid: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut*
  commentId: Overload:TMPEffects.Parameters.TMPBlendCurve.EvaluateOut
  href: TMPEffects.Parameters.TMPBlendCurve.html#TMPEffects_Parameters_TMPBlendCurve_EvaluateOut_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_
  name: EvaluateOut
  nameWithType: TMPBlendCurve.EvaluateOut
  fullName: TMPEffects.Parameters.TMPBlendCurve.EvaluateOut
