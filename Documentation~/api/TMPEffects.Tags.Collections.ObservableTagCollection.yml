### YamlMime:ManagedReference
items:
- uid: TMPEffects.Tags.Collections.ObservableTagCollection
  commentId: T:TMPEffects.Tags.Collections.ObservableTagCollection
  id: ObservableTagCollection
  parent: TMPEffects.Tags.Collections
  children:
  - TMPEffects.Tags.Collections.ObservableTagCollection.#ctor(System.Collections.Generic.IList{TMPEffects.Tags.TMPEffectTagTuple},TMPEffects.Tags.ITMPTagValidator)
  - TMPEffects.Tags.Collections.ObservableTagCollection.#ctor(TMPEffects.Tags.ITMPTagValidator)
  - TMPEffects.Tags.Collections.ObservableTagCollection.Clear
  - TMPEffects.Tags.Collections.ObservableTagCollection.CollectionChanged
  - TMPEffects.Tags.Collections.ObservableTagCollection.InvokeEvent(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - TMPEffects.Tags.Collections.ObservableTagCollection.Remove(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
  - TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAllAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
  - TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAt(System.Int32,System.Nullable{System.Int32})
  - TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,System.Int32,System.Int32,System.Nullable{System.Int32})
  - TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,TMPEffects.Tags.TMPEffectTagIndices)
  langs:
  - csharp
  - vb
  name: ObservableTagCollection
  nameWithType: ObservableTagCollection
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection
  type: Class
  source:
    remote:
      path: Runtime/Tags/TagCollection/ObservableTagCollection.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: ObservableTagCollection
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ObservableTagCollection.cs
    startLine: 9
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: An observable <xref href="TMPEffects.Tags.Collections.ITagCollection" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class ObservableTagCollection : TagCollection, ITagCollection, IReadOnlyTagCollection, IReadOnlyCollection<TMPEffectTagTuple>, IEnumerable<TMPEffectTagTuple>, IEnumerable, INotifyCollectionChanged'
    content.vb: Public Class ObservableTagCollection Inherits TagCollection Implements ITagCollection, IReadOnlyTagCollection, IReadOnlyCollection(Of TMPEffectTagTuple), IEnumerable(Of TMPEffectTagTuple), IEnumerable, INotifyCollectionChanged
  inheritance:
  - System.Object
  - TMPEffects.Tags.Collections.TagCollection
  implements:
  - TMPEffects.Tags.Collections.ITagCollection
  - TMPEffects.Tags.Collections.IReadOnlyTagCollection
  - System.Collections.Generic.IReadOnlyCollection{TMPEffects.Tags.TMPEffectTagTuple}
  - System.Collections.Generic.IEnumerable{TMPEffects.Tags.TMPEffectTagTuple}
  - System.Collections.IEnumerable
  - System.Collections.Specialized.INotifyCollectionChanged
  inheritedMembers:
  - TMPEffects.Tags.Collections.TagCollection.AdjustOrderAtIndexAt(System.Int32,TMPEffects.Tags.TMPEffectTagIndices)
  - TMPEffects.Tags.Collections.TagCollection.CopyTo(TMPEffects.Tags.TMPEffectTag[],System.Int32)
  - TMPEffects.Tags.Collections.TagCollection.TagCount
  - TMPEffects.Tags.Collections.TagCollection.Contains(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
  - TMPEffects.Tags.Collections.TagCollection.GetEnumerator
  - TMPEffects.Tags.Collections.TagCollection.TagAt(System.Int32,System.Nullable{System.Int32})
  - TMPEffects.Tags.Collections.TagCollection.TagsAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
  - TMPEffects.Tags.Collections.TagCollection.TagsAt(System.Int32)
  - TMPEffects.Tags.Collections.TagCollection.IndicesOf(TMPEffects.Tags.TMPEffectTag)
  - TMPEffects.Tags.Collections.TagCollection.FindIndex(TMPEffects.Tags.TMPEffectTag)
  - TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexOf(System.IComparable{TMPEffects.Tags.TMPEffectTagIndices})
  - TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexFirstIndexOf(TMPEffects.Tags.Collections.TagCollection.StartIndexOnly)
  - TMPEffects.Tags.Collections.TagCollection.tags
  - TMPEffects.Tags.Collections.TagCollection.validator
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.#ctor(System.Collections.Generic.IList{TMPEffects.Tags.TMPEffectTagTuple},TMPEffects.Tags.ITMPTagValidator)
  commentId: M:TMPEffects.Tags.Collections.ObservableTagCollection.#ctor(System.Collections.Generic.IList{TMPEffects.Tags.TMPEffectTagTuple},TMPEffects.Tags.ITMPTagValidator)
  id: '#ctor(System.Collections.Generic.IList{TMPEffects.Tags.TMPEffectTagTuple},TMPEffects.Tags.ITMPTagValidator)'
  parent: TMPEffects.Tags.Collections.ObservableTagCollection
  langs:
  - csharp
  - vb
  name: ObservableTagCollection(IList<TMPEffectTagTuple>, ITMPTagValidator)
  nameWithType: ObservableTagCollection.ObservableTagCollection(IList<TMPEffectTagTuple>, ITMPTagValidator)
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.ObservableTagCollection(System.Collections.Generic.IList<TMPEffects.Tags.TMPEffectTagTuple>, TMPEffects.Tags.ITMPTagValidator)
  type: Constructor
  source:
    remote:
      path: Runtime/Tags/TagCollection/ObservableTagCollection.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: .ctor
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ObservableTagCollection.cs
    startLine: 11
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  syntax:
    content: public ObservableTagCollection(IList<TMPEffectTagTuple> tags, ITMPTagValidator validator = null)
    parameters:
    - id: tags
      type: System.Collections.Generic.IList{TMPEffects.Tags.TMPEffectTagTuple}
    - id: validator
      type: TMPEffects.Tags.ITMPTagValidator
    content.vb: Public Sub New(tags As IList(Of TMPEffectTagTuple), validator As ITMPTagValidator = Nothing)
  overload: TMPEffects.Tags.Collections.ObservableTagCollection.#ctor*
  nameWithType.vb: ObservableTagCollection.New(IList(Of TMPEffectTagTuple), ITMPTagValidator)
  fullName.vb: TMPEffects.Tags.Collections.ObservableTagCollection.New(System.Collections.Generic.IList(Of TMPEffects.Tags.TMPEffectTagTuple), TMPEffects.Tags.ITMPTagValidator)
  name.vb: New(IList(Of TMPEffectTagTuple), ITMPTagValidator)
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.#ctor(TMPEffects.Tags.ITMPTagValidator)
  commentId: M:TMPEffects.Tags.Collections.ObservableTagCollection.#ctor(TMPEffects.Tags.ITMPTagValidator)
  id: '#ctor(TMPEffects.Tags.ITMPTagValidator)'
  parent: TMPEffects.Tags.Collections.ObservableTagCollection
  langs:
  - csharp
  - vb
  name: ObservableTagCollection(ITMPTagValidator)
  nameWithType: ObservableTagCollection.ObservableTagCollection(ITMPTagValidator)
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.ObservableTagCollection(TMPEffects.Tags.ITMPTagValidator)
  type: Constructor
  source:
    remote:
      path: Runtime/Tags/TagCollection/ObservableTagCollection.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: .ctor
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ObservableTagCollection.cs
    startLine: 13
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  syntax:
    content: public ObservableTagCollection(ITMPTagValidator validator = null)
    parameters:
    - id: validator
      type: TMPEffects.Tags.ITMPTagValidator
    content.vb: Public Sub New(validator As ITMPTagValidator = Nothing)
  overload: TMPEffects.Tags.Collections.ObservableTagCollection.#ctor*
  nameWithType.vb: ObservableTagCollection.New(ITMPTagValidator)
  fullName.vb: TMPEffects.Tags.Collections.ObservableTagCollection.New(TMPEffects.Tags.ITMPTagValidator)
  name.vb: New(ITMPTagValidator)
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.CollectionChanged
  commentId: E:TMPEffects.Tags.Collections.ObservableTagCollection.CollectionChanged
  id: CollectionChanged
  parent: TMPEffects.Tags.Collections.ObservableTagCollection
  langs:
  - csharp
  - vb
  name: CollectionChanged
  nameWithType: ObservableTagCollection.CollectionChanged
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.CollectionChanged
  type: Event
  source:
    remote:
      path: Runtime/Tags/TagCollection/ObservableTagCollection.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: CollectionChanged
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ObservableTagCollection.cs
    startLine: 19
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: Raised when the collection changed.
  example: []
  syntax:
    content: public event NotifyCollectionChangedEventHandler CollectionChanged
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
    content.vb: Public Event CollectionChanged As NotifyCollectionChangedEventHandler
  implements:
  - System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.InvokeEvent(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  commentId: M:TMPEffects.Tags.Collections.ObservableTagCollection.InvokeEvent(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: InvokeEvent(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: TMPEffects.Tags.Collections.ObservableTagCollection
  langs:
  - csharp
  - vb
  name: InvokeEvent(NotifyCollectionChangedEventArgs)
  nameWithType: ObservableTagCollection.InvokeEvent(NotifyCollectionChangedEventArgs)
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.InvokeEvent(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  type: Method
  source:
    remote:
      path: Runtime/Tags/TagCollection/ObservableTagCollection.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: InvokeEvent
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ObservableTagCollection.cs
    startLine: 21
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  syntax:
    content: protected void InvokeEvent(NotifyCollectionChangedEventArgs e)
    parameters:
    - id: e
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
    content.vb: Protected Sub InvokeEvent(e As NotifyCollectionChangedEventArgs)
  overload: TMPEffects.Tags.Collections.ObservableTagCollection.InvokeEvent*
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,TMPEffects.Tags.TMPEffectTagIndices)
  commentId: M:TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,TMPEffects.Tags.TMPEffectTagIndices)
  id: TryAdd(TMPEffects.Tags.TMPEffectTag,TMPEffects.Tags.TMPEffectTagIndices)
  parent: TMPEffects.Tags.Collections.ObservableTagCollection
  langs:
  - csharp
  - vb
  name: TryAdd(TMPEffectTag, TMPEffectTagIndices)
  nameWithType: ObservableTagCollection.TryAdd(TMPEffectTag, TMPEffectTagIndices)
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag, TMPEffects.Tags.TMPEffectTagIndices)
  type: Method
  source:
    remote:
      path: Runtime/Tags/TagCollection/ObservableTagCollection.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: TryAdd
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ObservableTagCollection.cs
    startLine: 27
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: Attempt to add a new tag to the collection.
  example: []
  syntax:
    content: public override bool TryAdd(TMPEffectTag tag, TMPEffectTagIndices indices)
    parameters:
    - id: tag
      type: TMPEffects.Tags.TMPEffectTag
      description: The tag to add.
    - id: indices
      type: TMPEffects.Tags.TMPEffectTagIndices
      description: The tag's indices.
    return:
      type: System.Boolean
      description: true if the tag was successfully added; false otherwise.
    content.vb: Public Overrides Function TryAdd(tag As TMPEffectTag, indices As TMPEffectTagIndices) As Boolean
  overridden: TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,TMPEffects.Tags.TMPEffectTagIndices)
  overload: TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd*
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,System.Int32,System.Int32,System.Nullable{System.Int32})
  commentId: M:TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,System.Int32,System.Int32,System.Nullable{System.Int32})
  id: TryAdd(TMPEffects.Tags.TMPEffectTag,System.Int32,System.Int32,System.Nullable{System.Int32})
  parent: TMPEffects.Tags.Collections.ObservableTagCollection
  langs:
  - csharp
  - vb
  name: TryAdd(TMPEffectTag, int, int, int?)
  nameWithType: ObservableTagCollection.TryAdd(TMPEffectTag, int, int, int?)
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag, int, int, int?)
  type: Method
  source:
    remote:
      path: Runtime/Tags/TagCollection/ObservableTagCollection.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: TryAdd
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ObservableTagCollection.cs
    startLine: 46
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: >-
    Attempt to add a new tag to the collection.<br />

    If <code class="paramref">orderAtIndex</code> is left to default, the order will be assigned so it is the first tag at the given <code class="paramref">startIndex</code>.
  example: []
  syntax:
    content: public override bool TryAdd(TMPEffectTag tag, int startIndex = 0, int endIndex = -1, int? orderAtIndex = null)
    parameters:
    - id: tag
      type: TMPEffects.Tags.TMPEffectTag
      description: The tag to add.
    - id: startIndex
      type: System.Int32
      description: The tag's start index.
    - id: endIndex
      type: System.Int32
      description: The tag's end index.
    - id: orderAtIndex
      type: System.Nullable{System.Int32}
      description: The tag's order at index.
    return:
      type: System.Boolean
      description: true if the tag was successfully added; false otherwise.
    content.vb: Public Overrides Function TryAdd(tag As TMPEffectTag, startIndex As Integer = 0, endIndex As Integer = -1, orderAtIndex As Integer? = Nothing) As Boolean
  overridden: TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,System.Int32,System.Int32,System.Nullable{System.Int32})
  overload: TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd*
  nameWithType.vb: ObservableTagCollection.TryAdd(TMPEffectTag, Integer, Integer, Integer?)
  fullName.vb: TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag, Integer, Integer, Integer?)
  name.vb: TryAdd(TMPEffectTag, Integer, Integer, Integer?)
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.Remove(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
  commentId: M:TMPEffects.Tags.Collections.ObservableTagCollection.Remove(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
  id: Remove(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
  parent: TMPEffects.Tags.Collections.ObservableTagCollection
  langs:
  - csharp
  - vb
  name: Remove(TMPEffectTag, TMPEffectTagIndices?)
  nameWithType: ObservableTagCollection.Remove(TMPEffectTag, TMPEffectTagIndices?)
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.Remove(TMPEffects.Tags.TMPEffectTag, TMPEffects.Tags.TMPEffectTagIndices?)
  type: Method
  source:
    remote:
      path: Runtime/Tags/TagCollection/ObservableTagCollection.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Remove
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ObservableTagCollection.cs
    startLine: 94
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: Remove the given tag, with the specified indices (if supplied).
  example: []
  syntax:
    content: public override bool Remove(TMPEffectTag tag, TMPEffectTagIndices? indices = null)
    parameters:
    - id: tag
      type: TMPEffects.Tags.TMPEffectTag
      description: The tag to remove.
    - id: indices
      type: System.Nullable{TMPEffects.Tags.TMPEffectTagIndices}
      description: The indices of the tag.
    return:
      type: System.Boolean
      description: true if the tag was removed; false otherwise.
    content.vb: Public Overrides Function Remove(tag As TMPEffectTag, indices As TMPEffectTagIndices? = Nothing) As Boolean
  overridden: TMPEffects.Tags.Collections.TagCollection.Remove(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
  overload: TMPEffects.Tags.Collections.ObservableTagCollection.Remove*
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAt(System.Int32,System.Nullable{System.Int32})
  commentId: M:TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAt(System.Int32,System.Nullable{System.Int32})
  id: RemoveAt(System.Int32,System.Nullable{System.Int32})
  parent: TMPEffects.Tags.Collections.ObservableTagCollection
  langs:
  - csharp
  - vb
  name: RemoveAt(int, int?)
  nameWithType: ObservableTagCollection.RemoveAt(int, int?)
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAt(int, int?)
  type: Method
  source:
    remote:
      path: Runtime/Tags/TagCollection/ObservableTagCollection.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: RemoveAt
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ObservableTagCollection.cs
    startLine: 120
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: >-
    Remove the tag starting at the given <code class="paramref">startIndex</code> with the correct <code class="paramref">order</code>.<br />

    If <code class="paramref">order</code> is left to default, the first tag at <code class="paramref">startIndex</code> will be removed.
  example: []
  syntax:
    content: public override bool RemoveAt(int startIndex, int? order = null)
    parameters:
    - id: startIndex
      type: System.Int32
      description: The start index.
    - id: order
      type: System.Nullable{System.Int32}
      description: The order at the start index.
    return:
      type: System.Boolean
      description: true if a tag was removed; false otherwise.
    content.vb: Public Overrides Function RemoveAt(startIndex As Integer, order As Integer? = Nothing) As Boolean
  overridden: TMPEffects.Tags.Collections.TagCollection.RemoveAt(System.Int32,System.Nullable{System.Int32})
  overload: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAt*
  nameWithType.vb: ObservableTagCollection.RemoveAt(Integer, Integer?)
  fullName.vb: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAt(Integer, Integer?)
  name.vb: RemoveAt(Integer, Integer?)
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAllAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
  commentId: M:TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAllAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
  id: RemoveAllAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
  parent: TMPEffects.Tags.Collections.ObservableTagCollection
  langs:
  - csharp
  - vb
  name: RemoveAllAt(int, TMPEffectTagTuple[], int)
  nameWithType: ObservableTagCollection.RemoveAllAt(int, TMPEffectTagTuple[], int)
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAllAt(int, TMPEffects.Tags.TMPEffectTagTuple[], int)
  type: Method
  source:
    remote:
      path: Runtime/Tags/TagCollection/ObservableTagCollection.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: RemoveAllAt
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ObservableTagCollection.cs
    startLine: 141
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: Remove all tags starting at the given <code class="paramref">startIndex</code>.
  example: []
  syntax:
    content: public override int RemoveAllAt(int startIndex, TMPEffectTagTuple[] buffer = null, int bufferIndex = 0)
    parameters:
    - id: startIndex
      type: System.Int32
      description: The start index.
    - id: buffer
      type: TMPEffects.Tags.TMPEffectTagTuple[]
      description: Buffer to save the removed tags into. Leave at default if you do not want to get the tags.
    - id: bufferIndex
      type: System.Int32
      description: The offset index of the buffer, i.e. the index at which the tags should be inserted into <code class="paramref">buffer</code>.
    return:
      type: System.Int32
      description: The amount of removed tags.
    content.vb: Public Overrides Function RemoveAllAt(startIndex As Integer, buffer As TMPEffectTagTuple() = Nothing, bufferIndex As Integer = 0) As Integer
  overridden: TMPEffects.Tags.Collections.TagCollection.RemoveAllAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
  overload: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAllAt*
  nameWithType.vb: ObservableTagCollection.RemoveAllAt(Integer, TMPEffectTagTuple(), Integer)
  fullName.vb: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAllAt(Integer, TMPEffects.Tags.TMPEffectTagTuple(), Integer)
  name.vb: RemoveAllAt(Integer, TMPEffectTagTuple(), Integer)
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.Clear
  commentId: M:TMPEffects.Tags.Collections.ObservableTagCollection.Clear
  id: Clear
  parent: TMPEffects.Tags.Collections.ObservableTagCollection
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ObservableTagCollection.Clear()
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.Clear()
  type: Method
  source:
    remote:
      path: Runtime/Tags/TagCollection/ObservableTagCollection.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Clear
    path: ../Assets/TMPEffects OLD/Runtime/Tags/TagCollection/ObservableTagCollection.cs
    startLine: 185
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Tags.Collections
  summary: Clear the entire collection.
  example: []
  syntax:
    content: public override void Clear()
    content.vb: Public Overrides Sub Clear()
  overridden: TMPEffects.Tags.Collections.TagCollection.Clear
  overload: TMPEffects.Tags.Collections.ObservableTagCollection.Clear*
references:
- uid: TMPEffects.Tags.Collections.ITagCollection
  commentId: T:TMPEffects.Tags.Collections.ITagCollection
  parent: TMPEffects.Tags.Collections
  href: TMPEffects.Tags.Collections.ITagCollection.html
  name: ITagCollection
  nameWithType: ITagCollection
  fullName: TMPEffects.Tags.Collections.ITagCollection
- uid: TMPEffects.Tags.Collections
  commentId: N:TMPEffects.Tags.Collections
  href: TMPEffects.html
  name: TMPEffects.Tags.Collections
  nameWithType: TMPEffects.Tags.Collections
  fullName: TMPEffects.Tags.Collections
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Tags
    name: Tags
    href: TMPEffects.Tags.html
  - name: .
  - uid: TMPEffects.Tags.Collections
    name: Collections
    href: TMPEffects.Tags.Collections.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Tags
    name: Tags
    href: TMPEffects.Tags.html
  - name: .
  - uid: TMPEffects.Tags.Collections
    name: Collections
    href: TMPEffects.Tags.Collections.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TMPEffects.Tags.Collections.TagCollection
  commentId: T:TMPEffects.Tags.Collections.TagCollection
  parent: TMPEffects.Tags.Collections
  href: TMPEffects.Tags.Collections.TagCollection.html
  name: TagCollection
  nameWithType: TagCollection
  fullName: TMPEffects.Tags.Collections.TagCollection
- uid: TMPEffects.Tags.Collections.IReadOnlyTagCollection
  commentId: T:TMPEffects.Tags.Collections.IReadOnlyTagCollection
  parent: TMPEffects.Tags.Collections
  href: TMPEffects.Tags.Collections.IReadOnlyTagCollection.html
  name: IReadOnlyTagCollection
  nameWithType: IReadOnlyTagCollection
  fullName: TMPEffects.Tags.Collections.IReadOnlyTagCollection
- uid: System.Collections.Generic.IReadOnlyCollection{TMPEffects.Tags.TMPEffectTagTuple}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{TMPEffects.Tags.TMPEffectTagTuple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<TMPEffectTagTuple>
  nameWithType: IReadOnlyCollection<TMPEffectTagTuple>
  fullName: System.Collections.Generic.IReadOnlyCollection<TMPEffects.Tags.TMPEffectTagTuple>
  nameWithType.vb: IReadOnlyCollection(Of TMPEffectTagTuple)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of TMPEffects.Tags.TMPEffectTagTuple)
  name.vb: IReadOnlyCollection(Of TMPEffectTagTuple)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{TMPEffects.Tags.TMPEffectTagTuple}
  commentId: T:System.Collections.Generic.IEnumerable{TMPEffects.Tags.TMPEffectTagTuple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TMPEffectTagTuple>
  nameWithType: IEnumerable<TMPEffectTagTuple>
  fullName: System.Collections.Generic.IEnumerable<TMPEffects.Tags.TMPEffectTagTuple>
  nameWithType.vb: IEnumerable(Of TMPEffectTagTuple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TMPEffects.Tags.TMPEffectTagTuple)
  name.vb: IEnumerable(Of TMPEffectTagTuple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Specialized.INotifyCollectionChanged
  commentId: T:System.Collections.Specialized.INotifyCollectionChanged
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.inotifycollectionchanged
  name: INotifyCollectionChanged
  nameWithType: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
- uid: TMPEffects.Tags.Collections.TagCollection.AdjustOrderAtIndexAt(System.Int32,TMPEffects.Tags.TMPEffectTagIndices)
  commentId: M:TMPEffects.Tags.Collections.TagCollection.AdjustOrderAtIndexAt(System.Int32,TMPEffects.Tags.TMPEffectTagIndices)
  parent: TMPEffects.Tags.Collections.TagCollection
  isExternal: true
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_AdjustOrderAtIndexAt_System_Int32_TMPEffects_Tags_TMPEffectTagIndices_
  name: AdjustOrderAtIndexAt(int, TMPEffectTagIndices)
  nameWithType: TagCollection.AdjustOrderAtIndexAt(int, TMPEffectTagIndices)
  fullName: TMPEffects.Tags.Collections.TagCollection.AdjustOrderAtIndexAt(int, TMPEffects.Tags.TMPEffectTagIndices)
  nameWithType.vb: TagCollection.AdjustOrderAtIndexAt(Integer, TMPEffectTagIndices)
  fullName.vb: TMPEffects.Tags.Collections.TagCollection.AdjustOrderAtIndexAt(Integer, TMPEffects.Tags.TMPEffectTagIndices)
  name.vb: AdjustOrderAtIndexAt(Integer, TMPEffectTagIndices)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.AdjustOrderAtIndexAt(System.Int32,TMPEffects.Tags.TMPEffectTagIndices)
    name: AdjustOrderAtIndexAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_AdjustOrderAtIndexAt_System_Int32_TMPEffects_Tags_TMPEffectTagIndices_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.AdjustOrderAtIndexAt(System.Int32,TMPEffects.Tags.TMPEffectTagIndices)
    name: AdjustOrderAtIndexAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_AdjustOrderAtIndexAt_System_Int32_TMPEffects_Tags_TMPEffectTagIndices_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.CopyTo(TMPEffects.Tags.TMPEffectTag[],System.Int32)
  commentId: M:TMPEffects.Tags.Collections.TagCollection.CopyTo(TMPEffects.Tags.TMPEffectTag[],System.Int32)
  parent: TMPEffects.Tags.Collections.TagCollection
  isExternal: true
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_CopyTo_TMPEffects_Tags_TMPEffectTag___System_Int32_
  name: CopyTo(TMPEffectTag[], int)
  nameWithType: TagCollection.CopyTo(TMPEffectTag[], int)
  fullName: TMPEffects.Tags.Collections.TagCollection.CopyTo(TMPEffects.Tags.TMPEffectTag[], int)
  nameWithType.vb: TagCollection.CopyTo(TMPEffectTag(), Integer)
  fullName.vb: TMPEffects.Tags.Collections.TagCollection.CopyTo(TMPEffects.Tags.TMPEffectTag(), Integer)
  name.vb: CopyTo(TMPEffectTag(), Integer)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.CopyTo(TMPEffects.Tags.TMPEffectTag[],System.Int32)
    name: CopyTo
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_CopyTo_TMPEffects_Tags_TMPEffectTag___System_Int32_
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.CopyTo(TMPEffects.Tags.TMPEffectTag[],System.Int32)
    name: CopyTo
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_CopyTo_TMPEffects_Tags_TMPEffectTag___System_Int32_
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.TagCount
  commentId: P:TMPEffects.Tags.Collections.TagCollection.TagCount
  parent: TMPEffects.Tags.Collections.TagCollection
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TagCount
  name: TagCount
  nameWithType: TagCollection.TagCount
  fullName: TMPEffects.Tags.Collections.TagCollection.TagCount
- uid: TMPEffects.Tags.Collections.TagCollection.Contains(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
  commentId: M:TMPEffects.Tags.Collections.TagCollection.Contains(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
  parent: TMPEffects.Tags.Collections.TagCollection
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_Contains_TMPEffects_Tags_TMPEffectTag_System_Nullable_TMPEffects_Tags_TMPEffectTagIndices__
  name: Contains(TMPEffectTag, TMPEffectTagIndices?)
  nameWithType: TagCollection.Contains(TMPEffectTag, TMPEffectTagIndices?)
  fullName: TMPEffects.Tags.Collections.TagCollection.Contains(TMPEffects.Tags.TMPEffectTag, TMPEffects.Tags.TMPEffectTagIndices?)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.Contains(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
    name: Contains
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_Contains_TMPEffects_Tags_TMPEffectTag_System_Nullable_TMPEffects_Tags_TMPEffectTagIndices__
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: '?'
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.Contains(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
    name: Contains
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_Contains_TMPEffects_Tags_TMPEffectTag_System_Nullable_TMPEffects_Tags_TMPEffectTagIndices__
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: '?'
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.GetEnumerator
  commentId: M:TMPEffects.Tags.Collections.TagCollection.GetEnumerator
  parent: TMPEffects.Tags.Collections.TagCollection
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_GetEnumerator
  name: GetEnumerator()
  nameWithType: TagCollection.GetEnumerator()
  fullName: TMPEffects.Tags.Collections.TagCollection.GetEnumerator()
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.GetEnumerator
    name: GetEnumerator
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_GetEnumerator
  - name: (
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.GetEnumerator
    name: GetEnumerator
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_GetEnumerator
  - name: (
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.TagAt(System.Int32,System.Nullable{System.Int32})
  commentId: M:TMPEffects.Tags.Collections.TagCollection.TagAt(System.Int32,System.Nullable{System.Int32})
  parent: TMPEffects.Tags.Collections.TagCollection
  isExternal: true
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TagAt_System_Int32_System_Nullable_System_Int32__
  name: TagAt(int, int?)
  nameWithType: TagCollection.TagAt(int, int?)
  fullName: TMPEffects.Tags.Collections.TagCollection.TagAt(int, int?)
  nameWithType.vb: TagCollection.TagAt(Integer, Integer?)
  fullName.vb: TMPEffects.Tags.Collections.TagCollection.TagAt(Integer, Integer?)
  name.vb: TagAt(Integer, Integer?)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.TagAt(System.Int32,System.Nullable{System.Int32})
    name: TagAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TagAt_System_Int32_System_Nullable_System_Int32__
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.TagAt(System.Int32,System.Nullable{System.Int32})
    name: TagAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TagAt_System_Int32_System_Nullable_System_Int32__
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.TagsAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
  commentId: M:TMPEffects.Tags.Collections.TagCollection.TagsAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
  parent: TMPEffects.Tags.Collections.TagCollection
  isExternal: true
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TagsAt_System_Int32_TMPEffects_Tags_TMPEffectTagTuple___System_Int32_
  name: TagsAt(int, TMPEffectTagTuple[], int)
  nameWithType: TagCollection.TagsAt(int, TMPEffectTagTuple[], int)
  fullName: TMPEffects.Tags.Collections.TagCollection.TagsAt(int, TMPEffects.Tags.TMPEffectTagTuple[], int)
  nameWithType.vb: TagCollection.TagsAt(Integer, TMPEffectTagTuple(), Integer)
  fullName.vb: TMPEffects.Tags.Collections.TagCollection.TagsAt(Integer, TMPEffects.Tags.TMPEffectTagTuple(), Integer)
  name.vb: TagsAt(Integer, TMPEffectTagTuple(), Integer)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.TagsAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
    name: TagsAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TagsAt_System_Int32_TMPEffects_Tags_TMPEffectTagTuple___System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.TagsAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
    name: TagsAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TagsAt_System_Int32_TMPEffects_Tags_TMPEffectTagTuple___System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.TagsAt(System.Int32)
  commentId: M:TMPEffects.Tags.Collections.TagCollection.TagsAt(System.Int32)
  parent: TMPEffects.Tags.Collections.TagCollection
  isExternal: true
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TagsAt_System_Int32_
  name: TagsAt(int)
  nameWithType: TagCollection.TagsAt(int)
  fullName: TMPEffects.Tags.Collections.TagCollection.TagsAt(int)
  nameWithType.vb: TagCollection.TagsAt(Integer)
  fullName.vb: TMPEffects.Tags.Collections.TagCollection.TagsAt(Integer)
  name.vb: TagsAt(Integer)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.TagsAt(System.Int32)
    name: TagsAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TagsAt_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.TagsAt(System.Int32)
    name: TagsAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TagsAt_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.IndicesOf(TMPEffects.Tags.TMPEffectTag)
  commentId: M:TMPEffects.Tags.Collections.TagCollection.IndicesOf(TMPEffects.Tags.TMPEffectTag)
  parent: TMPEffects.Tags.Collections.TagCollection
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_IndicesOf_TMPEffects_Tags_TMPEffectTag_
  name: IndicesOf(TMPEffectTag)
  nameWithType: TagCollection.IndicesOf(TMPEffectTag)
  fullName: TMPEffects.Tags.Collections.TagCollection.IndicesOf(TMPEffects.Tags.TMPEffectTag)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.IndicesOf(TMPEffects.Tags.TMPEffectTag)
    name: IndicesOf
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_IndicesOf_TMPEffects_Tags_TMPEffectTag_
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.IndicesOf(TMPEffects.Tags.TMPEffectTag)
    name: IndicesOf
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_IndicesOf_TMPEffects_Tags_TMPEffectTag_
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.FindIndex(TMPEffects.Tags.TMPEffectTag)
  commentId: M:TMPEffects.Tags.Collections.TagCollection.FindIndex(TMPEffects.Tags.TMPEffectTag)
  parent: TMPEffects.Tags.Collections.TagCollection
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_FindIndex_TMPEffects_Tags_TMPEffectTag_
  name: FindIndex(TMPEffectTag)
  nameWithType: TagCollection.FindIndex(TMPEffectTag)
  fullName: TMPEffects.Tags.Collections.TagCollection.FindIndex(TMPEffects.Tags.TMPEffectTag)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.FindIndex(TMPEffects.Tags.TMPEffectTag)
    name: FindIndex
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_FindIndex_TMPEffects_Tags_TMPEffectTag_
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.FindIndex(TMPEffects.Tags.TMPEffectTag)
    name: FindIndex
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_FindIndex_TMPEffects_Tags_TMPEffectTag_
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexOf(System.IComparable{TMPEffects.Tags.TMPEffectTagIndices})
  commentId: M:TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexOf(System.IComparable{TMPEffects.Tags.TMPEffectTagIndices})
  parent: TMPEffects.Tags.Collections.TagCollection
  isExternal: true
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_BinarySearchIndexOf_System_IComparable_TMPEffects_Tags_TMPEffectTagIndices__
  name: BinarySearchIndexOf(IComparable<TMPEffectTagIndices>)
  nameWithType: TagCollection.BinarySearchIndexOf(IComparable<TMPEffectTagIndices>)
  fullName: TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexOf(System.IComparable<TMPEffects.Tags.TMPEffectTagIndices>)
  nameWithType.vb: TagCollection.BinarySearchIndexOf(IComparable(Of TMPEffectTagIndices))
  fullName.vb: TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexOf(System.IComparable(Of TMPEffects.Tags.TMPEffectTagIndices))
  name.vb: BinarySearchIndexOf(IComparable(Of TMPEffectTagIndices))
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexOf(System.IComparable{TMPEffects.Tags.TMPEffectTagIndices})
    name: BinarySearchIndexOf
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_BinarySearchIndexOf_System_IComparable_TMPEffects_Tags_TMPEffectTagIndices__
  - name: (
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: <
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexOf(System.IComparable{TMPEffects.Tags.TMPEffectTagIndices})
    name: BinarySearchIndexOf
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_BinarySearchIndexOf_System_IComparable_TMPEffects_Tags_TMPEffectTagIndices__
  - name: (
  - uid: System.IComparable`1
    name: IComparable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icomparable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: )
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexFirstIndexOf(TMPEffects.Tags.Collections.TagCollection.StartIndexOnly)
  commentId: M:TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexFirstIndexOf(TMPEffects.Tags.Collections.TagCollection.StartIndexOnly)
  parent: TMPEffects.Tags.Collections.TagCollection
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_BinarySearchIndexFirstIndexOf_TMPEffects_Tags_Collections_TagCollection_StartIndexOnly_
  name: BinarySearchIndexFirstIndexOf(StartIndexOnly)
  nameWithType: TagCollection.BinarySearchIndexFirstIndexOf(TagCollection.StartIndexOnly)
  fullName: TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexFirstIndexOf(TMPEffects.Tags.Collections.TagCollection.StartIndexOnly)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexFirstIndexOf(TMPEffects.Tags.Collections.TagCollection.StartIndexOnly)
    name: BinarySearchIndexFirstIndexOf
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_BinarySearchIndexFirstIndexOf_TMPEffects_Tags_Collections_TagCollection_StartIndexOnly_
  - name: (
  - uid: TMPEffects.Tags.Collections.TagCollection.StartIndexOnly
    name: StartIndexOnly
    href: TMPEffects.Tags.Collections.TagCollection.StartIndexOnly.html
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.BinarySearchIndexFirstIndexOf(TMPEffects.Tags.Collections.TagCollection.StartIndexOnly)
    name: BinarySearchIndexFirstIndexOf
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_BinarySearchIndexFirstIndexOf_TMPEffects_Tags_Collections_TagCollection_StartIndexOnly_
  - name: (
  - uid: TMPEffects.Tags.Collections.TagCollection.StartIndexOnly
    name: StartIndexOnly
    href: TMPEffects.Tags.Collections.TagCollection.StartIndexOnly.html
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.tags
  commentId: F:TMPEffects.Tags.Collections.TagCollection.tags
  parent: TMPEffects.Tags.Collections.TagCollection
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_tags
  name: tags
  nameWithType: TagCollection.tags
  fullName: TMPEffects.Tags.Collections.TagCollection.tags
- uid: TMPEffects.Tags.Collections.TagCollection.validator
  commentId: F:TMPEffects.Tags.Collections.TagCollection.validator
  parent: TMPEffects.Tags.Collections.TagCollection
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_validator
  name: validator
  nameWithType: TagCollection.validator
  fullName: TMPEffects.Tags.Collections.TagCollection.validator
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.#ctor*
  commentId: Overload:TMPEffects.Tags.Collections.ObservableTagCollection.#ctor
  href: TMPEffects.Tags.Collections.ObservableTagCollection.html#TMPEffects_Tags_Collections_ObservableTagCollection__ctor_System_Collections_Generic_IList_TMPEffects_Tags_TMPEffectTagTuple__TMPEffects_Tags_ITMPTagValidator_
  name: ObservableTagCollection
  nameWithType: ObservableTagCollection.ObservableTagCollection
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.ObservableTagCollection
  nameWithType.vb: ObservableTagCollection.New
  fullName.vb: TMPEffects.Tags.Collections.ObservableTagCollection.New
  name.vb: New
- uid: System.Collections.Generic.IList{TMPEffects.Tags.TMPEffectTagTuple}
  commentId: T:System.Collections.Generic.IList{TMPEffects.Tags.TMPEffectTagTuple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<TMPEffectTagTuple>
  nameWithType: IList<TMPEffectTagTuple>
  fullName: System.Collections.Generic.IList<TMPEffects.Tags.TMPEffectTagTuple>
  nameWithType.vb: IList(Of TMPEffectTagTuple)
  fullName.vb: System.Collections.Generic.IList(Of TMPEffects.Tags.TMPEffectTagTuple)
  name.vb: IList(Of TMPEffectTagTuple)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: )
- uid: TMPEffects.Tags.ITMPTagValidator
  commentId: T:TMPEffects.Tags.ITMPTagValidator
  parent: TMPEffects.Tags
  href: TMPEffects.Tags.ITMPTagValidator.html
  name: ITMPTagValidator
  nameWithType: ITMPTagValidator
  fullName: TMPEffects.Tags.ITMPTagValidator
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TMPEffects.Tags
  commentId: N:TMPEffects.Tags
  href: TMPEffects.html
  name: TMPEffects.Tags
  nameWithType: TMPEffects.Tags
  fullName: TMPEffects.Tags
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Tags
    name: Tags
    href: TMPEffects.Tags.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Tags
    name: Tags
    href: TMPEffects.Tags.html
- uid: System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  commentId: E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  parent: System.Collections.Specialized.INotifyCollectionChanged
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.inotifycollectionchanged.collectionchanged
  name: CollectionChanged
  nameWithType: INotifyCollectionChanged.CollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  commentId: T:System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventhandler
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.InvokeEvent*
  commentId: Overload:TMPEffects.Tags.Collections.ObservableTagCollection.InvokeEvent
  href: TMPEffects.Tags.Collections.ObservableTagCollection.html#TMPEffects_Tags_Collections_ObservableTagCollection_InvokeEvent_System_Collections_Specialized_NotifyCollectionChangedEventArgs_
  name: InvokeEvent
  nameWithType: ObservableTagCollection.InvokeEvent
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.InvokeEvent
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  commentId: T:System.Collections.Specialized.NotifyCollectionChangedEventArgs
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.notifycollectionchangedeventargs
  name: NotifyCollectionChangedEventArgs
  nameWithType: NotifyCollectionChangedEventArgs
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
- uid: TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,TMPEffects.Tags.TMPEffectTagIndices)
  commentId: M:TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,TMPEffects.Tags.TMPEffectTagIndices)
  parent: TMPEffects.Tags.Collections.TagCollection
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TryAdd_TMPEffects_Tags_TMPEffectTag_TMPEffects_Tags_TMPEffectTagIndices_
  name: TryAdd(TMPEffectTag, TMPEffectTagIndices)
  nameWithType: TagCollection.TryAdd(TMPEffectTag, TMPEffectTagIndices)
  fullName: TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag, TMPEffects.Tags.TMPEffectTagIndices)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,TMPEffects.Tags.TMPEffectTagIndices)
    name: TryAdd
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TryAdd_TMPEffects_Tags_TMPEffectTag_TMPEffects_Tags_TMPEffectTagIndices_
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,TMPEffects.Tags.TMPEffectTagIndices)
    name: TryAdd
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TryAdd_TMPEffects_Tags_TMPEffectTag_TMPEffects_Tags_TMPEffectTagIndices_
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: )
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd*
  commentId: Overload:TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd
  href: TMPEffects.Tags.Collections.ObservableTagCollection.html#TMPEffects_Tags_Collections_ObservableTagCollection_TryAdd_TMPEffects_Tags_TMPEffectTag_TMPEffects_Tags_TMPEffectTagIndices_
  name: TryAdd
  nameWithType: ObservableTagCollection.TryAdd
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.TryAdd
- uid: TMPEffects.Tags.TMPEffectTag
  commentId: T:TMPEffects.Tags.TMPEffectTag
  parent: TMPEffects.Tags
  href: TMPEffects.Tags.TMPEffectTag.html
  name: TMPEffectTag
  nameWithType: TMPEffectTag
  fullName: TMPEffects.Tags.TMPEffectTag
- uid: TMPEffects.Tags.TMPEffectTagIndices
  commentId: T:TMPEffects.Tags.TMPEffectTagIndices
  parent: TMPEffects.Tags
  href: TMPEffects.Tags.TMPEffectTagIndices.html
  name: TMPEffectTagIndices
  nameWithType: TMPEffectTagIndices
  fullName: TMPEffects.Tags.TMPEffectTagIndices
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,System.Int32,System.Int32,System.Nullable{System.Int32})
  commentId: M:TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,System.Int32,System.Int32,System.Nullable{System.Int32})
  parent: TMPEffects.Tags.Collections.TagCollection
  isExternal: true
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TryAdd_TMPEffects_Tags_TMPEffectTag_System_Int32_System_Int32_System_Nullable_System_Int32__
  name: TryAdd(TMPEffectTag, int, int, int?)
  nameWithType: TagCollection.TryAdd(TMPEffectTag, int, int, int?)
  fullName: TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag, int, int, int?)
  nameWithType.vb: TagCollection.TryAdd(TMPEffectTag, Integer, Integer, Integer?)
  fullName.vb: TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag, Integer, Integer, Integer?)
  name.vb: TryAdd(TMPEffectTag, Integer, Integer, Integer?)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,System.Int32,System.Int32,System.Nullable{System.Int32})
    name: TryAdd
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TryAdd_TMPEffects_Tags_TMPEffectTag_System_Int32_System_Int32_System_Nullable_System_Int32__
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.TryAdd(TMPEffects.Tags.TMPEffectTag,System.Int32,System.Int32,System.Nullable{System.Int32})
    name: TryAdd
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_TryAdd_TMPEffects_Tags_TMPEffectTag_System_Int32_System_Int32_System_Nullable_System_Int32__
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.Remove(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
  commentId: M:TMPEffects.Tags.Collections.TagCollection.Remove(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
  parent: TMPEffects.Tags.Collections.TagCollection
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_Remove_TMPEffects_Tags_TMPEffectTag_System_Nullable_TMPEffects_Tags_TMPEffectTagIndices__
  name: Remove(TMPEffectTag, TMPEffectTagIndices?)
  nameWithType: TagCollection.Remove(TMPEffectTag, TMPEffectTagIndices?)
  fullName: TMPEffects.Tags.Collections.TagCollection.Remove(TMPEffects.Tags.TMPEffectTag, TMPEffects.Tags.TMPEffectTagIndices?)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.Remove(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
    name: Remove
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_Remove_TMPEffects_Tags_TMPEffectTag_System_Nullable_TMPEffects_Tags_TMPEffectTagIndices__
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: '?'
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.Remove(TMPEffects.Tags.TMPEffectTag,System.Nullable{TMPEffects.Tags.TMPEffectTagIndices})
    name: Remove
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_Remove_TMPEffects_Tags_TMPEffectTag_System_Nullable_TMPEffects_Tags_TMPEffectTagIndices__
  - name: (
  - uid: TMPEffects.Tags.TMPEffectTag
    name: TMPEffectTag
    href: TMPEffects.Tags.TMPEffectTag.html
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: '?'
  - name: )
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.Remove*
  commentId: Overload:TMPEffects.Tags.Collections.ObservableTagCollection.Remove
  href: TMPEffects.Tags.Collections.ObservableTagCollection.html#TMPEffects_Tags_Collections_ObservableTagCollection_Remove_TMPEffects_Tags_TMPEffectTag_System_Nullable_TMPEffects_Tags_TMPEffectTagIndices__
  name: Remove
  nameWithType: ObservableTagCollection.Remove
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.Remove
- uid: System.Nullable{TMPEffects.Tags.TMPEffectTagIndices}
  commentId: T:System.Nullable{TMPEffects.Tags.TMPEffectTagIndices}
  parent: System
  definition: System.Nullable`1
  href: TMPEffects.Tags.TMPEffectTagIndices.html
  name: TMPEffectTagIndices?
  nameWithType: TMPEffectTagIndices?
  fullName: TMPEffects.Tags.TMPEffectTagIndices?
  spec.csharp:
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: '?'
  spec.vb:
  - uid: TMPEffects.Tags.TMPEffectTagIndices
    name: TMPEffectTagIndices
    href: TMPEffects.Tags.TMPEffectTagIndices.html
  - name: '?'
- uid: TMPEffects.Tags.Collections.TagCollection.RemoveAt(System.Int32,System.Nullable{System.Int32})
  commentId: M:TMPEffects.Tags.Collections.TagCollection.RemoveAt(System.Int32,System.Nullable{System.Int32})
  parent: TMPEffects.Tags.Collections.TagCollection
  isExternal: true
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_RemoveAt_System_Int32_System_Nullable_System_Int32__
  name: RemoveAt(int, int?)
  nameWithType: TagCollection.RemoveAt(int, int?)
  fullName: TMPEffects.Tags.Collections.TagCollection.RemoveAt(int, int?)
  nameWithType.vb: TagCollection.RemoveAt(Integer, Integer?)
  fullName.vb: TMPEffects.Tags.Collections.TagCollection.RemoveAt(Integer, Integer?)
  name.vb: RemoveAt(Integer, Integer?)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.RemoveAt(System.Int32,System.Nullable{System.Int32})
    name: RemoveAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_RemoveAt_System_Int32_System_Nullable_System_Int32__
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.RemoveAt(System.Int32,System.Nullable{System.Int32})
    name: RemoveAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_RemoveAt_System_Int32_System_Nullable_System_Int32__
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  - name: )
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAt*
  commentId: Overload:TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAt
  href: TMPEffects.Tags.Collections.ObservableTagCollection.html#TMPEffects_Tags_Collections_ObservableTagCollection_RemoveAt_System_Int32_System_Nullable_System_Int32__
  name: RemoveAt
  nameWithType: ObservableTagCollection.RemoveAt
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAt
- uid: TMPEffects.Tags.Collections.TagCollection.RemoveAllAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
  commentId: M:TMPEffects.Tags.Collections.TagCollection.RemoveAllAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
  parent: TMPEffects.Tags.Collections.TagCollection
  isExternal: true
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_RemoveAllAt_System_Int32_TMPEffects_Tags_TMPEffectTagTuple___System_Int32_
  name: RemoveAllAt(int, TMPEffectTagTuple[], int)
  nameWithType: TagCollection.RemoveAllAt(int, TMPEffectTagTuple[], int)
  fullName: TMPEffects.Tags.Collections.TagCollection.RemoveAllAt(int, TMPEffects.Tags.TMPEffectTagTuple[], int)
  nameWithType.vb: TagCollection.RemoveAllAt(Integer, TMPEffectTagTuple(), Integer)
  fullName.vb: TMPEffects.Tags.Collections.TagCollection.RemoveAllAt(Integer, TMPEffects.Tags.TMPEffectTagTuple(), Integer)
  name.vb: RemoveAllAt(Integer, TMPEffectTagTuple(), Integer)
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.RemoveAllAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
    name: RemoveAllAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_RemoveAllAt_System_Int32_TMPEffects_Tags_TMPEffectTagTuple___System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.RemoveAllAt(System.Int32,TMPEffects.Tags.TMPEffectTagTuple[],System.Int32)
    name: RemoveAllAt
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_RemoveAllAt_System_Int32_TMPEffects_Tags_TMPEffectTagTuple___System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAllAt*
  commentId: Overload:TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAllAt
  href: TMPEffects.Tags.Collections.ObservableTagCollection.html#TMPEffects_Tags_Collections_ObservableTagCollection_RemoveAllAt_System_Int32_TMPEffects_Tags_TMPEffectTagTuple___System_Int32_
  name: RemoveAllAt
  nameWithType: ObservableTagCollection.RemoveAllAt
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.RemoveAllAt
- uid: TMPEffects.Tags.TMPEffectTagTuple[]
  isExternal: true
  href: TMPEffects.Tags.TMPEffectTagTuple.html
  name: TMPEffectTagTuple[]
  nameWithType: TMPEffectTagTuple[]
  fullName: TMPEffects.Tags.TMPEffectTagTuple[]
  nameWithType.vb: TMPEffectTagTuple()
  fullName.vb: TMPEffects.Tags.TMPEffectTagTuple()
  name.vb: TMPEffectTagTuple()
  spec.csharp:
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: TMPEffects.Tags.TMPEffectTagTuple
    name: TMPEffectTagTuple
    href: TMPEffects.Tags.TMPEffectTagTuple.html
  - name: (
  - name: )
- uid: TMPEffects.Tags.Collections.TagCollection.Clear
  commentId: M:TMPEffects.Tags.Collections.TagCollection.Clear
  parent: TMPEffects.Tags.Collections.TagCollection
  href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_Clear
  name: Clear()
  nameWithType: TagCollection.Clear()
  fullName: TMPEffects.Tags.Collections.TagCollection.Clear()
  spec.csharp:
  - uid: TMPEffects.Tags.Collections.TagCollection.Clear
    name: Clear
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: TMPEffects.Tags.Collections.TagCollection.Clear
    name: Clear
    href: TMPEffects.Tags.Collections.TagCollection.html#TMPEffects_Tags_Collections_TagCollection_Clear
  - name: (
  - name: )
- uid: TMPEffects.Tags.Collections.ObservableTagCollection.Clear*
  commentId: Overload:TMPEffects.Tags.Collections.ObservableTagCollection.Clear
  href: TMPEffects.Tags.Collections.ObservableTagCollection.html#TMPEffects_Tags_Collections_ObservableTagCollection_Clear
  name: Clear
  nameWithType: ObservableTagCollection.Clear
  fullName: TMPEffects.Tags.Collections.ObservableTagCollection.Clear
