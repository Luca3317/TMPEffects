### YamlMime:ManagedReference
items:
- uid: TMPEffects.Parameters.PowerEnum`2
  commentId: T:TMPEffects.Parameters.PowerEnum`2
  id: PowerEnum`2
  parent: TMPEffects.Parameters
  children:
  - TMPEffects.Parameters.PowerEnum`2.#ctor
  - TMPEffects.Parameters.PowerEnum`2.#ctor(`0)
  - TMPEffects.Parameters.PowerEnum`2.#ctor(`0,`1)
  - TMPEffects.Parameters.PowerEnum`2.#ctor(`0,`1,System.Boolean)
  - TMPEffects.Parameters.PowerEnum`2.EnumValue
  - TMPEffects.Parameters.PowerEnum`2.UseCustom
  - TMPEffects.Parameters.PowerEnum`2.Value
  - TMPEffects.Parameters.PowerEnum`2.useCustom
  langs:
  - csharp
  - vb
  name: PowerEnum<TEnum, TCustom>
  nameWithType: PowerEnum<TEnum, TCustom>
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>
  type: Class
  source:
    remote:
      path: Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: PowerEnum
    path: ../Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
    startLine: 6
  namespace: TMPEffects.Parameters
  syntax:
    content: >-
      [Serializable]

      public abstract class PowerEnum<TEnum, TCustom> where TEnum : Enum where TCustom : UnityEngine.Object
    typeParameters:
    - id: TEnum
    - id: TCustom
    content.vb: >-
      <Serializable>

      Public MustInherit Class PowerEnum(Of TEnum As [Enum], TCustom As UnityEngine.Object)
  inheritance:
  - System.Object
  derivedClasses:
  - TMPEffects.Parameters.OffsetTypePowerEnum
  - TMPEffects.Parameters.SceneOffsetTypePowerEnum
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: PowerEnum(Of TEnum, TCustom)
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom)
  name.vb: PowerEnum(Of TEnum, TCustom)
- uid: TMPEffects.Parameters.PowerEnum`2.Value
  commentId: P:TMPEffects.Parameters.PowerEnum`2.Value
  id: Value
  parent: TMPEffects.Parameters.PowerEnum`2
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: PowerEnum<TEnum, TCustom>.Value
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.Value
  type: Property
  source:
    remote:
      path: Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: Value
    path: ../Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
    startLine: 9
  namespace: TMPEffects.Parameters
  syntax:
    content: public TCustom Value { get; }
    parameters: []
    return:
      type: '{TCustom}'
    content.vb: Public ReadOnly Property Value As TCustom
  overload: TMPEffects.Parameters.PowerEnum`2.Value*
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).Value
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).Value
- uid: TMPEffects.Parameters.PowerEnum`2.EnumValue
  commentId: P:TMPEffects.Parameters.PowerEnum`2.EnumValue
  id: EnumValue
  parent: TMPEffects.Parameters.PowerEnum`2
  langs:
  - csharp
  - vb
  name: EnumValue
  nameWithType: PowerEnum<TEnum, TCustom>.EnumValue
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.EnumValue
  type: Property
  source:
    remote:
      path: Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: EnumValue
    path: ../Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
    startLine: 10
  namespace: TMPEffects.Parameters
  syntax:
    content: public TEnum EnumValue { get; }
    parameters: []
    return:
      type: '{TEnum}'
    content.vb: Public ReadOnly Property EnumValue As TEnum
  overload: TMPEffects.Parameters.PowerEnum`2.EnumValue*
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).EnumValue
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).EnumValue
- uid: TMPEffects.Parameters.PowerEnum`2.UseCustom
  commentId: P:TMPEffects.Parameters.PowerEnum`2.UseCustom
  id: UseCustom
  parent: TMPEffects.Parameters.PowerEnum`2
  langs:
  - csharp
  - vb
  name: UseCustom
  nameWithType: PowerEnum<TEnum, TCustom>.UseCustom
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.UseCustom
  type: Property
  source:
    remote:
      path: Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: UseCustom
    path: ../Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
    startLine: 11
  namespace: TMPEffects.Parameters
  syntax:
    content: public bool UseCustom { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UseCustom As Boolean
  overload: TMPEffects.Parameters.PowerEnum`2.UseCustom*
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).UseCustom
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).UseCustom
- uid: TMPEffects.Parameters.PowerEnum`2.useCustom
  commentId: F:TMPEffects.Parameters.PowerEnum`2.useCustom
  id: useCustom
  parent: TMPEffects.Parameters.PowerEnum`2
  langs:
  - csharp
  - vb
  name: useCustom
  nameWithType: PowerEnum<TEnum, TCustom>.useCustom
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.useCustom
  type: Field
  source:
    remote:
      path: Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: useCustom
    path: ../Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
    startLine: 15
  namespace: TMPEffects.Parameters
  syntax:
    content: protected bool useCustom
    return:
      type: System.Boolean
    content.vb: Protected useCustom As Boolean
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).useCustom
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).useCustom
- uid: TMPEffects.Parameters.PowerEnum`2.#ctor(`0,`1,System.Boolean)
  commentId: M:TMPEffects.Parameters.PowerEnum`2.#ctor(`0,`1,System.Boolean)
  id: '#ctor(`0,`1,System.Boolean)'
  parent: TMPEffects.Parameters.PowerEnum`2
  langs:
  - csharp
  - vb
  name: PowerEnum(TEnum, TCustom, bool)
  nameWithType: PowerEnum<TEnum, TCustom>.PowerEnum(TEnum, TCustom, bool)
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.PowerEnum(TEnum, TCustom, bool)
  type: Constructor
  source:
    remote:
      path: Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: .ctor
    path: ../Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
    startLine: 17
  namespace: TMPEffects.Parameters
  syntax:
    content: public PowerEnum(TEnum enumValue, TCustom customValue, bool useCustom)
    parameters:
    - id: enumValue
      type: '{TEnum}'
    - id: customValue
      type: '{TCustom}'
    - id: useCustom
      type: System.Boolean
    content.vb: Public Sub New(enumValue As TEnum, customValue As TCustom, useCustom As Boolean)
  overload: TMPEffects.Parameters.PowerEnum`2.#ctor*
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).New(TEnum, TCustom, Boolean)
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).New(TEnum, TCustom, Boolean)
  name.vb: New(TEnum, TCustom, Boolean)
- uid: TMPEffects.Parameters.PowerEnum`2.#ctor(`0,`1)
  commentId: M:TMPEffects.Parameters.PowerEnum`2.#ctor(`0,`1)
  id: '#ctor(`0,`1)'
  parent: TMPEffects.Parameters.PowerEnum`2
  langs:
  - csharp
  - vb
  name: PowerEnum(TEnum, TCustom)
  nameWithType: PowerEnum<TEnum, TCustom>.PowerEnum(TEnum, TCustom)
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.PowerEnum(TEnum, TCustom)
  type: Constructor
  source:
    remote:
      path: Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: .ctor
    path: ../Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
    startLine: 24
  namespace: TMPEffects.Parameters
  syntax:
    content: public PowerEnum(TEnum enumValue, TCustom customValue)
    parameters:
    - id: enumValue
      type: '{TEnum}'
    - id: customValue
      type: '{TCustom}'
    content.vb: Public Sub New(enumValue As TEnum, customValue As TCustom)
  overload: TMPEffects.Parameters.PowerEnum`2.#ctor*
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).New(TEnum, TCustom)
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).New(TEnum, TCustom)
  name.vb: New(TEnum, TCustom)
- uid: TMPEffects.Parameters.PowerEnum`2.#ctor(`0)
  commentId: M:TMPEffects.Parameters.PowerEnum`2.#ctor(`0)
  id: '#ctor(`0)'
  parent: TMPEffects.Parameters.PowerEnum`2
  langs:
  - csharp
  - vb
  name: PowerEnum(TEnum)
  nameWithType: PowerEnum<TEnum, TCustom>.PowerEnum(TEnum)
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.PowerEnum(TEnum)
  type: Constructor
  source:
    remote:
      path: Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: .ctor
    path: ../Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
    startLine: 31
  namespace: TMPEffects.Parameters
  syntax:
    content: public PowerEnum(TEnum enumValue)
    parameters:
    - id: enumValue
      type: '{TEnum}'
    content.vb: Public Sub New(enumValue As TEnum)
  overload: TMPEffects.Parameters.PowerEnum`2.#ctor*
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).New(TEnum)
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).New(TEnum)
  name.vb: New(TEnum)
- uid: TMPEffects.Parameters.PowerEnum`2.#ctor
  commentId: M:TMPEffects.Parameters.PowerEnum`2.#ctor
  id: '#ctor'
  parent: TMPEffects.Parameters.PowerEnum`2
  langs:
  - csharp
  - vb
  name: PowerEnum()
  nameWithType: PowerEnum<TEnum, TCustom>.PowerEnum()
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.PowerEnum()
  type: Constructor
  source:
    remote:
      path: Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
      branch: docs
      repo: https://github.com/Luca3317/TMPEffects.git
    id: .ctor
    path: ../Package/Runtime/Parameters/Types/Offset/PowerEnum.cs
    startLine: 36
  namespace: TMPEffects.Parameters
  syntax:
    content: public PowerEnum()
    content.vb: Public Sub New()
  overload: TMPEffects.Parameters.PowerEnum`2.#ctor*
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).New()
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).New()
  name.vb: New()
references:
- uid: TMPEffects.Parameters
  commentId: N:TMPEffects.Parameters
  href: TMPEffects.html
  name: TMPEffects.Parameters
  nameWithType: TMPEffects.Parameters
  fullName: TMPEffects.Parameters
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Parameters
    name: Parameters
    href: TMPEffects.Parameters.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Parameters
    name: Parameters
    href: TMPEffects.Parameters.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TMPEffects.Parameters.PowerEnum`2.Value*
  commentId: Overload:TMPEffects.Parameters.PowerEnum`2.Value
  href: TMPEffects.Parameters.PowerEnum-2.html#TMPEffects_Parameters_PowerEnum_2_Value
  name: Value
  nameWithType: PowerEnum<TEnum, TCustom>.Value
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.Value
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).Value
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).Value
- uid: '{TCustom}'
  commentId: '!:TCustom'
  definition: TCustom
  name: TCustom
  nameWithType: TCustom
  fullName: TCustom
- uid: TCustom
  name: TCustom
  nameWithType: TCustom
  fullName: TCustom
- uid: TMPEffects.Parameters.PowerEnum`2.EnumValue*
  commentId: Overload:TMPEffects.Parameters.PowerEnum`2.EnumValue
  href: TMPEffects.Parameters.PowerEnum-2.html#TMPEffects_Parameters_PowerEnum_2_EnumValue
  name: EnumValue
  nameWithType: PowerEnum<TEnum, TCustom>.EnumValue
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.EnumValue
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).EnumValue
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).EnumValue
- uid: '{TEnum}'
  commentId: '!:TEnum'
  definition: TEnum
  name: TEnum
  nameWithType: TEnum
  fullName: TEnum
- uid: TEnum
  name: TEnum
  nameWithType: TEnum
  fullName: TEnum
- uid: TMPEffects.Parameters.PowerEnum`2.UseCustom*
  commentId: Overload:TMPEffects.Parameters.PowerEnum`2.UseCustom
  href: TMPEffects.Parameters.PowerEnum-2.html#TMPEffects_Parameters_PowerEnum_2_UseCustom
  name: UseCustom
  nameWithType: PowerEnum<TEnum, TCustom>.UseCustom
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.UseCustom
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).UseCustom
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).UseCustom
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TMPEffects.Parameters.PowerEnum`2.#ctor*
  commentId: Overload:TMPEffects.Parameters.PowerEnum`2.#ctor
  href: TMPEffects.Parameters.PowerEnum-2.html#TMPEffects_Parameters_PowerEnum_2__ctor__0__1_System_Boolean_
  name: PowerEnum
  nameWithType: PowerEnum<TEnum, TCustom>.PowerEnum
  fullName: TMPEffects.Parameters.PowerEnum<TEnum, TCustom>.PowerEnum
  nameWithType.vb: PowerEnum(Of TEnum, TCustom).New
  fullName.vb: TMPEffects.Parameters.PowerEnum(Of TEnum, TCustom).New
  name.vb: New
