### YamlMime:ManagedReference
items:
- uid: TMPEffects.Intervaltree.IntervalTree`2
  commentId: T:TMPEffects.Intervaltree.IntervalTree`2
  id: IntervalTree`2
  parent: TMPEffects.Intervaltree
  children:
  - TMPEffects.Intervaltree.IntervalTree`2.#ctor
  - TMPEffects.Intervaltree.IntervalTree`2.#ctor(System.Collections.Generic.IComparer{`0})
  - TMPEffects.Intervaltree.IntervalTree`2.Add(`0,`0,`1)
  - TMPEffects.Intervaltree.IntervalTree`2.Clear
  - TMPEffects.Intervaltree.IntervalTree`2.Count
  - TMPEffects.Intervaltree.IntervalTree`2.GetEnumerator
  - TMPEffects.Intervaltree.IntervalTree`2.Max
  - TMPEffects.Intervaltree.IntervalTree`2.Min
  - TMPEffects.Intervaltree.IntervalTree`2.Query(`0)
  - TMPEffects.Intervaltree.IntervalTree`2.Query(`0,`0)
  - TMPEffects.Intervaltree.IntervalTree`2.Remove(System.Collections.Generic.IEnumerable{`1})
  - TMPEffects.Intervaltree.IntervalTree`2.Remove(`1)
  - TMPEffects.Intervaltree.IntervalTree`2.Values
  langs:
  - csharp
  - vb
  name: IntervalTree<TKey, TValue>
  nameWithType: IntervalTree<TKey, TValue>
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>
  type: Class
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: IntervalTree
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 292
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  syntax:
    content: 'public class IntervalTree<TKey, TValue> : IIntervalTree<TKey, TValue>, IEnumerable<RangeValuePair<TKey, TValue>>, IEnumerable'
    typeParameters:
    - id: TKey
    - id: TValue
    content.vb: Public Class IntervalTree(Of TKey, TValue) Implements IIntervalTree(Of TKey, TValue), IEnumerable(Of RangeValuePair(Of TKey, TValue)), IEnumerable
  inheritance:
  - System.Object
  implements:
  - TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}
  - System.Collections.Generic.IEnumerable{TMPEffects.Intervaltree.RangeValuePair{{TKey},{TValue}}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: IntervalTree(Of TKey, TValue)
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue)
  name.vb: IntervalTree(Of TKey, TValue)
- uid: TMPEffects.Intervaltree.IntervalTree`2.Max
  commentId: P:TMPEffects.Intervaltree.IntervalTree`2.Max
  id: Max
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: IntervalTree<TKey, TValue>.Max
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Max
  type: Property
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Max
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 301
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  syntax:
    content: public TKey Max { get; }
    parameters: []
    return:
      type: '{TKey}'
    content.vb: Public ReadOnly Property Max As TKey
  overload: TMPEffects.Intervaltree.IntervalTree`2.Max*
  nameWithType.vb: IntervalTree(Of TKey, TValue).Max
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Max
- uid: TMPEffects.Intervaltree.IntervalTree`2.Min
  commentId: P:TMPEffects.Intervaltree.IntervalTree`2.Min
  id: Min
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: Min
  nameWithType: IntervalTree<TKey, TValue>.Min
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Min
  type: Property
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Min
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 312
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  syntax:
    content: public TKey Min { get; }
    parameters: []
    return:
      type: '{TKey}'
    content.vb: Public ReadOnly Property Min As TKey
  overload: TMPEffects.Intervaltree.IntervalTree`2.Min*
  nameWithType.vb: IntervalTree(Of TKey, TValue).Min
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Min
- uid: TMPEffects.Intervaltree.IntervalTree`2.Values
  commentId: P:TMPEffects.Intervaltree.IntervalTree`2.Values
  id: Values
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: IntervalTree<TKey, TValue>.Values
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Values
  type: Property
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Values
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 323
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Returns all items contained in the tree.
  example: []
  syntax:
    content: public IEnumerable<TValue> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{TValue}}
    content.vb: Public ReadOnly Property Values As IEnumerable(Of TValue)
  overload: TMPEffects.Intervaltree.IntervalTree`2.Values*
  implements:
  - TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Values
  nameWithType.vb: IntervalTree(Of TKey, TValue).Values
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Values
- uid: TMPEffects.Intervaltree.IntervalTree`2.Count
  commentId: P:TMPEffects.Intervaltree.IntervalTree`2.Count
  id: Count
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: IntervalTree<TKey, TValue>.Count
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Count
  type: Property
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Count
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 325
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Gets the number of elements contained in the tree.
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: TMPEffects.Intervaltree.IntervalTree`2.Count*
  implements:
  - TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Count
  nameWithType.vb: IntervalTree(Of TKey, TValue).Count
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Count
- uid: TMPEffects.Intervaltree.IntervalTree`2.#ctor
  commentId: M:TMPEffects.Intervaltree.IntervalTree`2.#ctor
  id: '#ctor'
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: IntervalTree()
  nameWithType: IntervalTree<TKey, TValue>.IntervalTree()
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.IntervalTree()
  type: Constructor
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: .ctor
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 330
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Initializes an empty tree.
  example: []
  syntax:
    content: public IntervalTree()
    content.vb: Public Sub New()
  overload: TMPEffects.Intervaltree.IntervalTree`2.#ctor*
  nameWithType.vb: IntervalTree(Of TKey, TValue).New()
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).New()
  name.vb: New()
- uid: TMPEffects.Intervaltree.IntervalTree`2.#ctor(System.Collections.Generic.IComparer{`0})
  commentId: M:TMPEffects.Intervaltree.IntervalTree`2.#ctor(System.Collections.Generic.IComparer{`0})
  id: '#ctor(System.Collections.Generic.IComparer{`0})'
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: IntervalTree(IComparer<TKey>)
  nameWithType: IntervalTree<TKey, TValue>.IntervalTree(IComparer<TKey>)
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.IntervalTree(System.Collections.Generic.IComparer<TKey>)
  type: Constructor
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: .ctor
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 335
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Initializes an empty tree.
  example: []
  syntax:
    content: public IntervalTree(IComparer<TKey> comparer)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IComparer{{TKey}}
    content.vb: Public Sub New(comparer As IComparer(Of TKey))
  overload: TMPEffects.Intervaltree.IntervalTree`2.#ctor*
  nameWithType.vb: IntervalTree(Of TKey, TValue).New(IComparer(Of TKey))
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).New(System.Collections.Generic.IComparer(Of TKey))
  name.vb: New(IComparer(Of TKey))
- uid: TMPEffects.Intervaltree.IntervalTree`2.Query(`0)
  commentId: M:TMPEffects.Intervaltree.IntervalTree`2.Query(`0)
  id: Query(`0)
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: Query(TKey)
  nameWithType: IntervalTree<TKey, TValue>.Query(TKey)
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Query(TKey)
  type: Method
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Query
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 343
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Performs a point query with a single value. All items with overlapping ranges are returned.
  example: []
  syntax:
    content: public IEnumerable<TValue> Query(TKey value)
    parameters:
    - id: value
      type: '{TKey}'
    return:
      type: System.Collections.Generic.IEnumerable{{TValue}}
    content.vb: Public Function Query(value As TKey) As IEnumerable(Of TValue)
  overload: TMPEffects.Intervaltree.IntervalTree`2.Query*
  implements:
  - TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Query({TKey})
  nameWithType.vb: IntervalTree(Of TKey, TValue).Query(TKey)
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Query(TKey)
- uid: TMPEffects.Intervaltree.IntervalTree`2.Query(`0,`0)
  commentId: M:TMPEffects.Intervaltree.IntervalTree`2.Query(`0,`0)
  id: Query(`0,`0)
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: Query(TKey, TKey)
  nameWithType: IntervalTree<TKey, TValue>.Query(TKey, TKey)
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Query(TKey, TKey)
  type: Method
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Query
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 351
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Performs a range query. All items with overlapping ranges are returned.
  example: []
  syntax:
    content: public IEnumerable<TValue> Query(TKey from, TKey to)
    parameters:
    - id: from
      type: '{TKey}'
    - id: to
      type: '{TKey}'
    return:
      type: System.Collections.Generic.IEnumerable{{TValue}}
    content.vb: Public Function Query(from As TKey, [to] As TKey) As IEnumerable(Of TValue)
  overload: TMPEffects.Intervaltree.IntervalTree`2.Query*
  implements:
  - TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Query({TKey},{TKey})
  nameWithType.vb: IntervalTree(Of TKey, TValue).Query(TKey, TKey)
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Query(TKey, TKey)
- uid: TMPEffects.Intervaltree.IntervalTree`2.Add(`0,`0,`1)
  commentId: M:TMPEffects.Intervaltree.IntervalTree`2.Add(`0,`0,`1)
  id: Add(`0,`0,`1)
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: Add(TKey, TKey, TValue)
  nameWithType: IntervalTree<TKey, TValue>.Add(TKey, TKey, TValue)
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Add(TKey, TKey, TValue)
  type: Method
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Add
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 359
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Adds the specified item.
  example: []
  syntax:
    content: public void Add(TKey from, TKey to, TValue value)
    parameters:
    - id: from
      type: '{TKey}'
    - id: to
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    content.vb: Public Sub Add(from As TKey, [to] As TKey, value As TValue)
  overload: TMPEffects.Intervaltree.IntervalTree`2.Add*
  implements:
  - TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Add({TKey},{TKey},{TValue})
  nameWithType.vb: IntervalTree(Of TKey, TValue).Add(TKey, TKey, TValue)
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Add(TKey, TKey, TValue)
- uid: TMPEffects.Intervaltree.IntervalTree`2.Remove(`1)
  commentId: M:TMPEffects.Intervaltree.IntervalTree`2.Remove(`1)
  id: Remove(`1)
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: Remove(TValue)
  nameWithType: IntervalTree<TKey, TValue>.Remove(TValue)
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Remove(TValue)
  type: Method
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Remove
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 368
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Removes the specified item.
  example: []
  syntax:
    content: public void Remove(TValue value)
    parameters:
    - id: value
      type: '{TValue}'
    content.vb: Public Sub Remove(value As TValue)
  overload: TMPEffects.Intervaltree.IntervalTree`2.Remove*
  implements:
  - TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Remove({TValue})
  nameWithType.vb: IntervalTree(Of TKey, TValue).Remove(TValue)
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Remove(TValue)
- uid: TMPEffects.Intervaltree.IntervalTree`2.Remove(System.Collections.Generic.IEnumerable{`1})
  commentId: M:TMPEffects.Intervaltree.IntervalTree`2.Remove(System.Collections.Generic.IEnumerable{`1})
  id: Remove(System.Collections.Generic.IEnumerable{`1})
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: Remove(IEnumerable<TValue>)
  nameWithType: IntervalTree<TKey, TValue>.Remove(IEnumerable<TValue>)
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Remove(System.Collections.Generic.IEnumerable<TValue>)
  type: Method
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Remove
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 374
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Removes the specified items.
  example: []
  syntax:
    content: public void Remove(IEnumerable<TValue> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{TValue}}
    content.vb: Public Sub Remove(items As IEnumerable(Of TValue))
  overload: TMPEffects.Intervaltree.IntervalTree`2.Remove*
  implements:
  - TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Remove(System.Collections.Generic.IEnumerable{{TValue}})
  nameWithType.vb: IntervalTree(Of TKey, TValue).Remove(IEnumerable(Of TValue))
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Remove(System.Collections.Generic.IEnumerable(Of TValue))
  name.vb: Remove(IEnumerable(Of TValue))
- uid: TMPEffects.Intervaltree.IntervalTree`2.Clear
  commentId: M:TMPEffects.Intervaltree.IntervalTree`2.Clear
  id: Clear
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: IntervalTree<TKey, TValue>.Clear()
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Clear()
  type: Method
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Clear
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 380
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  summary: Removes all elements from the range tree.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: TMPEffects.Intervaltree.IntervalTree`2.Clear*
  implements:
  - TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Clear
  nameWithType.vb: IntervalTree(Of TKey, TValue).Clear()
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Clear()
- uid: TMPEffects.Intervaltree.IntervalTree`2.GetEnumerator
  commentId: M:TMPEffects.Intervaltree.IntervalTree`2.GetEnumerator
  id: GetEnumerator
  parent: TMPEffects.Intervaltree.IntervalTree`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: IntervalTree<TKey, TValue>.GetEnumerator()
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Runtime/IntervalTree/IntervalTree.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: GetEnumerator
    path: ../Assets/TMPEffects OLD/Runtime/IntervalTree/IntervalTree.cs
    startLine: 387
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Intervaltree
  example: []
  syntax:
    content: public IEnumerator<RangeValuePair<TKey, TValue>> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{TMPEffects.Intervaltree.RangeValuePair{{TKey},{TValue}}}
    content.vb: Public Function GetEnumerator() As IEnumerator(Of RangeValuePair(Of TKey, TValue))
  overload: TMPEffects.Intervaltree.IntervalTree`2.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{TMPEffects.Intervaltree.RangeValuePair{{TKey},{TValue}}}.GetEnumerator
  nameWithType.vb: IntervalTree(Of TKey, TValue).GetEnumerator()
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).GetEnumerator()
references:
- uid: TMPEffects.Intervaltree
  commentId: N:TMPEffects.Intervaltree
  href: TMPEffects.html
  name: TMPEffects.Intervaltree
  nameWithType: TMPEffects.Intervaltree
  fullName: TMPEffects.Intervaltree
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Intervaltree
    name: Intervaltree
    href: TMPEffects.Intervaltree.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Intervaltree
    name: Intervaltree
    href: TMPEffects.Intervaltree.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}
  commentId: T:TMPEffects.Intervaltree.IIntervalTree{`0,`1}
  parent: TMPEffects.Intervaltree
  definition: TMPEffects.Intervaltree.IIntervalTree`2
  href: TMPEffects.Intervaltree.IIntervalTree-2.html
  name: IIntervalTree<TKey, TValue>
  nameWithType: IIntervalTree<TKey, TValue>
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>
  nameWithType.vb: IIntervalTree(Of TKey, TValue)
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue)
  name.vb: IIntervalTree(Of TKey, TValue)
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2
    name: IIntervalTree
    href: TMPEffects.Intervaltree.IIntervalTree-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2
    name: IIntervalTree
    href: TMPEffects.Intervaltree.IIntervalTree-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IEnumerable{TMPEffects.Intervaltree.RangeValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerable{TMPEffects.Intervaltree.RangeValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<RangeValuePair<TKey, TValue>>
  nameWithType: IEnumerable<RangeValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerable<TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerable(Of RangeValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerable(Of TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue))
  name.vb: IEnumerable(Of RangeValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: TMPEffects.Intervaltree.RangeValuePair`2
    name: RangeValuePair
    href: TMPEffects.Intervaltree.RangeValuePair-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: TMPEffects.Intervaltree.RangeValuePair`2
    name: RangeValuePair
    href: TMPEffects.Intervaltree.RangeValuePair-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TMPEffects.Intervaltree.IIntervalTree`2
  commentId: T:TMPEffects.Intervaltree.IIntervalTree`2
  href: TMPEffects.Intervaltree.IIntervalTree-2.html
  name: IIntervalTree<TKey, TValue>
  nameWithType: IIntervalTree<TKey, TValue>
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>
  nameWithType.vb: IIntervalTree(Of TKey, TValue)
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue)
  name.vb: IIntervalTree(Of TKey, TValue)
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2
    name: IIntervalTree
    href: TMPEffects.Intervaltree.IIntervalTree-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2
    name: IIntervalTree
    href: TMPEffects.Intervaltree.IIntervalTree-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: TMPEffects.Intervaltree.IntervalTree`2.Max*
  commentId: Overload:TMPEffects.Intervaltree.IntervalTree`2.Max
  href: TMPEffects.Intervaltree.IntervalTree-2.html#TMPEffects_Intervaltree_IntervalTree_2_Max
  name: Max
  nameWithType: IntervalTree<TKey, TValue>.Max
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Max
  nameWithType.vb: IntervalTree(Of TKey, TValue).Max
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Max
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TMPEffects.Intervaltree.IntervalTree`2.Min*
  commentId: Overload:TMPEffects.Intervaltree.IntervalTree`2.Min
  href: TMPEffects.Intervaltree.IntervalTree-2.html#TMPEffects_Intervaltree_IntervalTree_2_Min
  name: Min
  nameWithType: IntervalTree<TKey, TValue>.Min
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Min
  nameWithType.vb: IntervalTree(Of TKey, TValue).Min
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Min
- uid: TMPEffects.Intervaltree.IntervalTree`2.Values*
  commentId: Overload:TMPEffects.Intervaltree.IntervalTree`2.Values
  href: TMPEffects.Intervaltree.IntervalTree-2.html#TMPEffects_Intervaltree_IntervalTree_2_Values
  name: Values
  nameWithType: IntervalTree<TKey, TValue>.Values
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Values
  nameWithType.vb: IntervalTree(Of TKey, TValue).Values
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Values
- uid: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Values
  commentId: P:TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Values
  parent: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}
  definition: TMPEffects.Intervaltree.IIntervalTree`2.Values
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Values
  name: Values
  nameWithType: IIntervalTree<TKey, TValue>.Values
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Values
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Values
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Values
- uid: System.Collections.Generic.IEnumerable{{TValue}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TValue>
  nameWithType: IEnumerable<TValue>
  fullName: System.Collections.Generic.IEnumerable<TValue>
  nameWithType.vb: IEnumerable(Of TValue)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TValue)
  name.vb: IEnumerable(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: TMPEffects.Intervaltree.IIntervalTree`2.Values
  commentId: P:TMPEffects.Intervaltree.IIntervalTree`2.Values
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Values
  name: Values
  nameWithType: IIntervalTree<TKey, TValue>.Values
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Values
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Values
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Values
- uid: TMPEffects.Intervaltree.IntervalTree`2.Count*
  commentId: Overload:TMPEffects.Intervaltree.IntervalTree`2.Count
  href: TMPEffects.Intervaltree.IntervalTree-2.html#TMPEffects_Intervaltree_IntervalTree_2_Count
  name: Count
  nameWithType: IntervalTree<TKey, TValue>.Count
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Count
  nameWithType.vb: IntervalTree(Of TKey, TValue).Count
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Count
- uid: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Count
  commentId: P:TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Count
  parent: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}
  definition: TMPEffects.Intervaltree.IIntervalTree`2.Count
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Count
  name: Count
  nameWithType: IIntervalTree<TKey, TValue>.Count
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Count
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Count
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: TMPEffects.Intervaltree.IIntervalTree`2.Count
  commentId: P:TMPEffects.Intervaltree.IIntervalTree`2.Count
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Count
  name: Count
  nameWithType: IIntervalTree<TKey, TValue>.Count
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Count
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Count
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Count
- uid: TMPEffects.Intervaltree.IntervalTree`2.#ctor*
  commentId: Overload:TMPEffects.Intervaltree.IntervalTree`2.#ctor
  href: TMPEffects.Intervaltree.IntervalTree-2.html#TMPEffects_Intervaltree_IntervalTree_2__ctor
  name: IntervalTree
  nameWithType: IntervalTree<TKey, TValue>.IntervalTree
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.IntervalTree
  nameWithType.vb: IntervalTree(Of TKey, TValue).New
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).New
  name.vb: New
- uid: System.Collections.Generic.IComparer{{TKey}}
  commentId: T:System.Collections.Generic.IComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<TKey>
  nameWithType: IComparer<TKey>
  fullName: System.Collections.Generic.IComparer<TKey>
  nameWithType.vb: IComparer(Of TKey)
  fullName.vb: System.Collections.Generic.IComparer(Of TKey)
  name.vb: IComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: TKey
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TMPEffects.Intervaltree.IntervalTree`2.Query*
  commentId: Overload:TMPEffects.Intervaltree.IntervalTree`2.Query
  href: TMPEffects.Intervaltree.IntervalTree-2.html#TMPEffects_Intervaltree_IntervalTree_2_Query__0_
  name: Query
  nameWithType: IntervalTree<TKey, TValue>.Query
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Query
  nameWithType.vb: IntervalTree(Of TKey, TValue).Query
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Query
- uid: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Query({TKey})
  commentId: M:TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Query(`0)
  parent: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}
  definition: TMPEffects.Intervaltree.IIntervalTree`2.Query(`0)
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0_
  name: Query(TKey)
  nameWithType: IIntervalTree<TKey, TValue>.Query(TKey)
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Query(TKey)
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Query(TKey)
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Query(TKey)
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Query(`0)
    name: Query
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Query(`0)
    name: Query
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0_
  - name: (
  - name: TKey
  - name: )
- uid: TMPEffects.Intervaltree.IIntervalTree`2.Query(`0)
  commentId: M:TMPEffects.Intervaltree.IIntervalTree`2.Query(`0)
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0_
  name: Query(TKey)
  nameWithType: IIntervalTree<TKey, TValue>.Query(TKey)
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Query(TKey)
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Query(TKey)
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Query(TKey)
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Query(`0)
    name: Query
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Query(`0)
    name: Query
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0_
  - name: (
  - name: TKey
  - name: )
- uid: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Query({TKey},{TKey})
  commentId: M:TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Query(`0,`0)
  parent: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}
  definition: TMPEffects.Intervaltree.IIntervalTree`2.Query(`0,`0)
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0__0_
  name: Query(TKey, TKey)
  nameWithType: IIntervalTree<TKey, TValue>.Query(TKey, TKey)
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Query(TKey, TKey)
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Query(TKey, TKey)
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Query(TKey, TKey)
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Query(`0,`0)
    name: Query
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0__0_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Query(`0,`0)
    name: Query
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0__0_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: TMPEffects.Intervaltree.IIntervalTree`2.Query(`0,`0)
  commentId: M:TMPEffects.Intervaltree.IIntervalTree`2.Query(`0,`0)
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0__0_
  name: Query(TKey, TKey)
  nameWithType: IIntervalTree<TKey, TValue>.Query(TKey, TKey)
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Query(TKey, TKey)
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Query(TKey, TKey)
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Query(TKey, TKey)
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Query(`0,`0)
    name: Query
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0__0_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TKey
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Query(`0,`0)
    name: Query
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Query__0__0_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: TMPEffects.Intervaltree.IntervalTree`2.Add*
  commentId: Overload:TMPEffects.Intervaltree.IntervalTree`2.Add
  href: TMPEffects.Intervaltree.IntervalTree-2.html#TMPEffects_Intervaltree_IntervalTree_2_Add__0__0__1_
  name: Add
  nameWithType: IntervalTree<TKey, TValue>.Add
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Add
  nameWithType.vb: IntervalTree(Of TKey, TValue).Add
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Add
- uid: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Add({TKey},{TKey},{TValue})
  commentId: M:TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Add(`0,`0,`1)
  parent: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}
  definition: TMPEffects.Intervaltree.IIntervalTree`2.Add(`0,`0,`1)
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Add__0__0__1_
  name: Add(TKey, TKey, TValue)
  nameWithType: IIntervalTree<TKey, TValue>.Add(TKey, TKey, TValue)
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Add(TKey, TKey, TValue)
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Add(TKey, TKey, TValue)
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Add(TKey, TKey, TValue)
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Add(`0,`0,`1)
    name: Add
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Add__0__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Add(`0,`0,`1)
    name: Add
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Add__0__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TMPEffects.Intervaltree.IIntervalTree`2.Add(`0,`0,`1)
  commentId: M:TMPEffects.Intervaltree.IIntervalTree`2.Add(`0,`0,`1)
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Add__0__0__1_
  name: Add(TKey, TKey, TValue)
  nameWithType: IIntervalTree<TKey, TValue>.Add(TKey, TKey, TValue)
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Add(TKey, TKey, TValue)
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Add(TKey, TKey, TValue)
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Add(TKey, TKey, TValue)
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Add(`0,`0,`1)
    name: Add
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Add__0__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Add(`0,`0,`1)
    name: Add
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Add__0__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TMPEffects.Intervaltree.IntervalTree`2.Remove*
  commentId: Overload:TMPEffects.Intervaltree.IntervalTree`2.Remove
  href: TMPEffects.Intervaltree.IntervalTree-2.html#TMPEffects_Intervaltree_IntervalTree_2_Remove__1_
  name: Remove
  nameWithType: IntervalTree<TKey, TValue>.Remove
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Remove
  nameWithType.vb: IntervalTree(Of TKey, TValue).Remove
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Remove
- uid: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Remove({TValue})
  commentId: M:TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Remove(`1)
  parent: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}
  definition: TMPEffects.Intervaltree.IIntervalTree`2.Remove(`1)
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove__1_
  name: Remove(TValue)
  nameWithType: IIntervalTree<TKey, TValue>.Remove(TValue)
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Remove(TValue)
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Remove(TValue)
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Remove(TValue)
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Remove(`1)
    name: Remove
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Remove(`1)
    name: Remove
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove__1_
  - name: (
  - name: TValue
  - name: )
- uid: TMPEffects.Intervaltree.IIntervalTree`2.Remove(`1)
  commentId: M:TMPEffects.Intervaltree.IIntervalTree`2.Remove(`1)
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove__1_
  name: Remove(TValue)
  nameWithType: IIntervalTree<TKey, TValue>.Remove(TValue)
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Remove(TValue)
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Remove(TValue)
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Remove(TValue)
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Remove(`1)
    name: Remove
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Remove(`1)
    name: Remove
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove__1_
  - name: (
  - name: TValue
  - name: )
- uid: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Remove(System.Collections.Generic.IEnumerable{{TValue}})
  commentId: M:TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Remove(System.Collections.Generic.IEnumerable{`1})
  parent: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}
  definition: TMPEffects.Intervaltree.IIntervalTree`2.Remove(System.Collections.Generic.IEnumerable{`1})
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove_System_Collections_Generic_IEnumerable__1__
  name: Remove(IEnumerable<TValue>)
  nameWithType: IIntervalTree<TKey, TValue>.Remove(IEnumerable<TValue>)
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Remove(System.Collections.Generic.IEnumerable<TValue>)
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Remove(IEnumerable(Of TValue))
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Remove(System.Collections.Generic.IEnumerable(Of TValue))
  name.vb: Remove(IEnumerable(Of TValue))
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Remove(System.Collections.Generic.IEnumerable{`1})
    name: Remove
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Remove(System.Collections.Generic.IEnumerable{`1})
    name: Remove
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: TMPEffects.Intervaltree.IIntervalTree`2.Remove(System.Collections.Generic.IEnumerable{`1})
  commentId: M:TMPEffects.Intervaltree.IIntervalTree`2.Remove(System.Collections.Generic.IEnumerable{`1})
  isExternal: true
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove_System_Collections_Generic_IEnumerable__1__
  name: Remove(IEnumerable<TValue>)
  nameWithType: IIntervalTree<TKey, TValue>.Remove(IEnumerable<TValue>)
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Remove(System.Collections.Generic.IEnumerable<TValue>)
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Remove(IEnumerable(Of TValue))
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Remove(System.Collections.Generic.IEnumerable(Of TValue))
  name.vb: Remove(IEnumerable(Of TValue))
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Remove(System.Collections.Generic.IEnumerable{`1})
    name: Remove
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Remove(System.Collections.Generic.IEnumerable{`1})
    name: Remove
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Remove_System_Collections_Generic_IEnumerable__1__
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: TMPEffects.Intervaltree.IntervalTree`2.Clear*
  commentId: Overload:TMPEffects.Intervaltree.IntervalTree`2.Clear
  href: TMPEffects.Intervaltree.IntervalTree-2.html#TMPEffects_Intervaltree_IntervalTree_2_Clear
  name: Clear
  nameWithType: IntervalTree<TKey, TValue>.Clear
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.Clear
  nameWithType.vb: IntervalTree(Of TKey, TValue).Clear
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).Clear
- uid: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}.Clear
  commentId: M:TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Clear
  parent: TMPEffects.Intervaltree.IIntervalTree{{TKey},{TValue}}
  definition: TMPEffects.Intervaltree.IIntervalTree`2.Clear
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Clear
  name: Clear()
  nameWithType: IIntervalTree<TKey, TValue>.Clear()
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Clear()
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Clear()
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Clear
    name: Clear
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree{`0,`1}.Clear
    name: Clear
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Clear
  - name: (
  - name: )
- uid: TMPEffects.Intervaltree.IIntervalTree`2.Clear
  commentId: M:TMPEffects.Intervaltree.IIntervalTree`2.Clear
  href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Clear
  name: Clear()
  nameWithType: IIntervalTree<TKey, TValue>.Clear()
  fullName: TMPEffects.Intervaltree.IIntervalTree<TKey, TValue>.Clear()
  nameWithType.vb: IIntervalTree(Of TKey, TValue).Clear()
  fullName.vb: TMPEffects.Intervaltree.IIntervalTree(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Clear
    name: Clear
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: TMPEffects.Intervaltree.IIntervalTree`2.Clear
    name: Clear
    href: TMPEffects.Intervaltree.IIntervalTree-2.html#TMPEffects_Intervaltree_IIntervalTree_2_Clear
  - name: (
  - name: )
- uid: TMPEffects.Intervaltree.IntervalTree`2.GetEnumerator*
  commentId: Overload:TMPEffects.Intervaltree.IntervalTree`2.GetEnumerator
  href: TMPEffects.Intervaltree.IntervalTree-2.html#TMPEffects_Intervaltree_IntervalTree_2_GetEnumerator
  name: GetEnumerator
  nameWithType: IntervalTree<TKey, TValue>.GetEnumerator
  fullName: TMPEffects.Intervaltree.IntervalTree<TKey, TValue>.GetEnumerator
  nameWithType.vb: IntervalTree(Of TKey, TValue).GetEnumerator
  fullName.vb: TMPEffects.Intervaltree.IntervalTree(Of TKey, TValue).GetEnumerator
- uid: System.Collections.Generic.IEnumerable{TMPEffects.Intervaltree.RangeValuePair{{TKey},{TValue}}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{TMPEffects.Intervaltree.RangeValuePair{`0,`1}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{TMPEffects.Intervaltree.RangeValuePair{{TKey},{TValue}}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<RangeValuePair<TKey, TValue>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of RangeValuePair(Of TKey, TValue)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{TMPEffects.Intervaltree.RangeValuePair{`0,`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{TMPEffects.Intervaltree.RangeValuePair{`0,`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{TMPEffects.Intervaltree.RangeValuePair{{TKey},{TValue}}}
  commentId: T:System.Collections.Generic.IEnumerator{TMPEffects.Intervaltree.RangeValuePair{`0,`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<RangeValuePair<TKey, TValue>>
  nameWithType: IEnumerator<RangeValuePair<TKey, TValue>>
  fullName: System.Collections.Generic.IEnumerator<TMPEffects.Intervaltree.RangeValuePair<TKey, TValue>>
  nameWithType.vb: IEnumerator(Of RangeValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Generic.IEnumerator(Of TMPEffects.Intervaltree.RangeValuePair(Of TKey, TValue))
  name.vb: IEnumerator(Of RangeValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: TMPEffects.Intervaltree.RangeValuePair`2
    name: RangeValuePair
    href: TMPEffects.Intervaltree.RangeValuePair-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: TMPEffects.Intervaltree.RangeValuePair`2
    name: RangeValuePair
    href: TMPEffects.Intervaltree.RangeValuePair-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
