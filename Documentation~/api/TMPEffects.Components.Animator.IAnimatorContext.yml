### YamlMime:ManagedReference
items:
- uid: TMPEffects.Components.Animator.IAnimatorContext
  commentId: T:TMPEffects.Components.Animator.IAnimatorContext
  id: IAnimatorContext
  parent: TMPEffects.Components.Animator
  children:
  - TMPEffects.Components.Animator.IAnimatorContext.Animator
  - TMPEffects.Components.Animator.IAnimatorContext.DeltaTime
  - TMPEffects.Components.Animator.IAnimatorContext.PassedTime
  - TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations
  - TMPEffects.Components.Animator.IAnimatorContext.ScaleUniformly
  - TMPEffects.Components.Animator.IAnimatorContext.StateTime(System.Int32)
  - TMPEffects.Components.Animator.IAnimatorContext.StateTime(TMPEffects.CharacterData.CharData)
  - TMPEffects.Components.Animator.IAnimatorContext.UseScaledTime
  - TMPEffects.Components.Animator.IAnimatorContext.VisibleTime(System.Int32)
  - TMPEffects.Components.Animator.IAnimatorContext.VisibleTime(TMPEffects.CharacterData.CharData)
  langs:
  - csharp
  - vb
  name: IAnimatorContext
  nameWithType: IAnimatorContext
  fullName: TMPEffects.Components.Animator.IAnimatorContext
  type: Interface
  source:
    remote:
      path: Runtime/Components/TMPAnimator/AnimatorContext.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: IAnimatorContext
    path: ../Assets/TMPEffects OLD/Runtime/Components/TMPAnimator/AnimatorContext.cs
    startLine: 10
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Components.Animator
  summary: >-
    To be used with <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>.<br />

    Contains context data of the respective <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public interface IAnimatorContext
    content.vb: Public Interface IAnimatorContext
- uid: TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations
  commentId: P:TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations
  id: ScaleAnimations
  parent: TMPEffects.Components.Animator.IAnimatorContext
  langs:
  - csharp
  - vb
  name: ScaleAnimations
  nameWithType: IAnimatorContext.ScaleAnimations
  fullName: TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations
  type: Property
  source:
    remote:
      path: Runtime/Components/TMPAnimator/AnimatorContext.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: ScaleAnimations
    path: ../Assets/TMPEffects OLD/Runtime/Components/TMPAnimator/AnimatorContext.cs
    startLine: 15
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Components.Animator
  summary: Whether animations are scaled.
  example: []
  syntax:
    content: bool ScaleAnimations { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property ScaleAnimations As Boolean
  overload: TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations*
- uid: TMPEffects.Components.Animator.IAnimatorContext.ScaleUniformly
  commentId: P:TMPEffects.Components.Animator.IAnimatorContext.ScaleUniformly
  id: ScaleUniformly
  parent: TMPEffects.Components.Animator.IAnimatorContext
  langs:
  - csharp
  - vb
  name: ScaleUniformly
  nameWithType: IAnimatorContext.ScaleUniformly
  fullName: TMPEffects.Components.Animator.IAnimatorContext.ScaleUniformly
  type: Property
  source:
    remote:
      path: Runtime/Components/TMPAnimator/AnimatorContext.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: ScaleUniformly
    path: ../Assets/TMPEffects OLD/Runtime/Components/TMPAnimator/AnimatorContext.cs
    startLine: 21
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Components.Animator
  summary: >-
    Whether to scale animations uniformly (based on the default font size of the animator)

    or on a per character basis.<br />

    Ignored if <xref href="TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations" data-throw-if-not-resolved="false"></xref> is false.
  example: []
  syntax:
    content: bool ScaleUniformly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property ScaleUniformly As Boolean
  overload: TMPEffects.Components.Animator.IAnimatorContext.ScaleUniformly*
- uid: TMPEffects.Components.Animator.IAnimatorContext.Animator
  commentId: P:TMPEffects.Components.Animator.IAnimatorContext.Animator
  id: Animator
  parent: TMPEffects.Components.Animator.IAnimatorContext
  langs:
  - csharp
  - vb
  name: Animator
  nameWithType: IAnimatorContext.Animator
  fullName: TMPEffects.Components.Animator.IAnimatorContext.Animator
  type: Property
  source:
    remote:
      path: Runtime/Components/TMPAnimator/AnimatorContext.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: Animator
    path: ../Assets/TMPEffects OLD/Runtime/Components/TMPAnimator/AnimatorContext.cs
    startLine: 26
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Components.Animator
  summary: The animating <xref href="TMPEffects.Components.TMPAnimator" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: TMPAnimator Animator { get; }
    parameters: []
    return:
      type: TMPEffects.Components.TMPAnimator
    content.vb: ReadOnly Property Animator As TMPAnimator
  overload: TMPEffects.Components.Animator.IAnimatorContext.Animator*
- uid: TMPEffects.Components.Animator.IAnimatorContext.UseScaledTime
  commentId: P:TMPEffects.Components.Animator.IAnimatorContext.UseScaledTime
  id: UseScaledTime
  parent: TMPEffects.Components.Animator.IAnimatorContext
  langs:
  - csharp
  - vb
  name: UseScaledTime
  nameWithType: IAnimatorContext.UseScaledTime
  fullName: TMPEffects.Components.Animator.IAnimatorContext.UseScaledTime
  type: Property
  source:
    remote:
      path: Runtime/Components/TMPAnimator/AnimatorContext.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: UseScaledTime
    path: ../Assets/TMPEffects OLD/Runtime/Components/TMPAnimator/AnimatorContext.cs
    startLine: 31
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Components.Animator
  summary: Whether animations use scaled time.
  example: []
  syntax:
    content: bool UseScaledTime { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property UseScaledTime As Boolean
  overload: TMPEffects.Components.Animator.IAnimatorContext.UseScaledTime*
- uid: TMPEffects.Components.Animator.IAnimatorContext.DeltaTime
  commentId: P:TMPEffects.Components.Animator.IAnimatorContext.DeltaTime
  id: DeltaTime
  parent: TMPEffects.Components.Animator.IAnimatorContext
  langs:
  - csharp
  - vb
  name: DeltaTime
  nameWithType: IAnimatorContext.DeltaTime
  fullName: TMPEffects.Components.Animator.IAnimatorContext.DeltaTime
  type: Property
  source:
    remote:
      path: Runtime/Components/TMPAnimator/AnimatorContext.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: DeltaTime
    path: ../Assets/TMPEffects OLD/Runtime/Components/TMPAnimator/AnimatorContext.cs
    startLine: 36
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Components.Animator
  summary: The current delta time (=&gt; time since last animation update).
  example: []
  syntax:
    content: float DeltaTime { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property DeltaTime As Single
  overload: TMPEffects.Components.Animator.IAnimatorContext.DeltaTime*
- uid: TMPEffects.Components.Animator.IAnimatorContext.PassedTime
  commentId: P:TMPEffects.Components.Animator.IAnimatorContext.PassedTime
  id: PassedTime
  parent: TMPEffects.Components.Animator.IAnimatorContext
  langs:
  - csharp
  - vb
  name: PassedTime
  nameWithType: IAnimatorContext.PassedTime
  fullName: TMPEffects.Components.Animator.IAnimatorContext.PassedTime
  type: Property
  source:
    remote:
      path: Runtime/Components/TMPAnimator/AnimatorContext.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: PassedTime
    path: ../Assets/TMPEffects OLD/Runtime/Components/TMPAnimator/AnimatorContext.cs
    startLine: 40
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Components.Animator
  summary: The time that has passed since the animator began animating.
  example: []
  syntax:
    content: float PassedTime { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: ReadOnly Property PassedTime As Single
  overload: TMPEffects.Components.Animator.IAnimatorContext.PassedTime*
- uid: TMPEffects.Components.Animator.IAnimatorContext.StateTime(TMPEffects.CharacterData.CharData)
  commentId: M:TMPEffects.Components.Animator.IAnimatorContext.StateTime(TMPEffects.CharacterData.CharData)
  id: StateTime(TMPEffects.CharacterData.CharData)
  parent: TMPEffects.Components.Animator.IAnimatorContext
  langs:
  - csharp
  - vb
  name: StateTime(CharData)
  nameWithType: IAnimatorContext.StateTime(CharData)
  fullName: TMPEffects.Components.Animator.IAnimatorContext.StateTime(TMPEffects.CharacterData.CharData)
  type: Method
  source:
    remote:
      path: Runtime/Components/TMPAnimator/AnimatorContext.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StateTime
    path: ../Assets/TMPEffects OLD/Runtime/Components/TMPAnimator/AnimatorContext.cs
    startLine: 48
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Components.Animator
  summary: >-
    Check how long the passed <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> has been in its current <xref href="TMPEffects.CharacterData.VisibilityState" data-throw-if-not-resolved="false"></xref>.<br />

    Generally, to be used with show and hide animations.
  example: []
  syntax:
    content: float StateTime(CharData cData)
    parameters:
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The character to check.
    return:
      type: System.Single
      description: How long the passed <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> has been in its current <xref href="TMPEffects.CharacterData.VisibilityState" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function StateTime(cData As CharData) As Single
  overload: TMPEffects.Components.Animator.IAnimatorContext.StateTime*
- uid: TMPEffects.Components.Animator.IAnimatorContext.VisibleTime(TMPEffects.CharacterData.CharData)
  commentId: M:TMPEffects.Components.Animator.IAnimatorContext.VisibleTime(TMPEffects.CharacterData.CharData)
  id: VisibleTime(TMPEffects.CharacterData.CharData)
  parent: TMPEffects.Components.Animator.IAnimatorContext
  langs:
  - csharp
  - vb
  name: VisibleTime(CharData)
  nameWithType: IAnimatorContext.VisibleTime(CharData)
  fullName: TMPEffects.Components.Animator.IAnimatorContext.VisibleTime(TMPEffects.CharacterData.CharData)
  type: Method
  source:
    remote:
      path: Runtime/Components/TMPAnimator/AnimatorContext.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: VisibleTime
    path: ../Assets/TMPEffects OLD/Runtime/Components/TMPAnimator/AnimatorContext.cs
    startLine: 54
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Components.Animator
  summary: Check how long the passed <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> has been visible.
  example: []
  syntax:
    content: float VisibleTime(CharData cData)
    parameters:
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: The character to check.
    return:
      type: System.Single
      description: How long the passed <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> has been visible.
    content.vb: Function VisibleTime(cData As CharData) As Single
  overload: TMPEffects.Components.Animator.IAnimatorContext.VisibleTime*
- uid: TMPEffects.Components.Animator.IAnimatorContext.StateTime(System.Int32)
  commentId: M:TMPEffects.Components.Animator.IAnimatorContext.StateTime(System.Int32)
  id: StateTime(System.Int32)
  parent: TMPEffects.Components.Animator.IAnimatorContext
  langs:
  - csharp
  - vb
  name: StateTime(int)
  nameWithType: IAnimatorContext.StateTime(int)
  fullName: TMPEffects.Components.Animator.IAnimatorContext.StateTime(int)
  type: Method
  source:
    remote:
      path: Runtime/Components/TMPAnimator/AnimatorContext.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: StateTime
    path: ../Assets/TMPEffects OLD/Runtime/Components/TMPAnimator/AnimatorContext.cs
    startLine: 62
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Components.Animator
  summary: >-
    Check how long the <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> at the given index has been in its current <xref href="TMPEffects.CharacterData.VisibilityState" data-throw-if-not-resolved="false"></xref>.<br />

    Generally, to be used with show and hide animations.
  example: []
  syntax:
    content: float StateTime(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the character to check.
    return:
      type: System.Single
      description: How long the <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> at the given index has been in its current <xref href="TMPEffects.CharacterData.VisibilityState" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function StateTime(index As Integer) As Single
  overload: TMPEffects.Components.Animator.IAnimatorContext.StateTime*
  nameWithType.vb: IAnimatorContext.StateTime(Integer)
  fullName.vb: TMPEffects.Components.Animator.IAnimatorContext.StateTime(Integer)
  name.vb: StateTime(Integer)
- uid: TMPEffects.Components.Animator.IAnimatorContext.VisibleTime(System.Int32)
  commentId: M:TMPEffects.Components.Animator.IAnimatorContext.VisibleTime(System.Int32)
  id: VisibleTime(System.Int32)
  parent: TMPEffects.Components.Animator.IAnimatorContext
  langs:
  - csharp
  - vb
  name: VisibleTime(int)
  nameWithType: IAnimatorContext.VisibleTime(int)
  fullName: TMPEffects.Components.Animator.IAnimatorContext.VisibleTime(int)
  type: Method
  source:
    remote:
      path: Runtime/Components/TMPAnimator/AnimatorContext.cs
      branch: main
      repo: https://github.com/Luca3317/TMPEffects-Fork.git
    id: VisibleTime
    path: ../Assets/TMPEffects OLD/Runtime/Components/TMPAnimator/AnimatorContext.cs
    startLine: 68
  assemblies:
  - Luca3317.TMPEffects
  namespace: TMPEffects.Components.Animator
  summary: Check how long the <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> at the given index has been visible.
  example: []
  syntax:
    content: float VisibleTime(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Single
      description: How long the <xref href="TMPEffects.CharacterData.CharData" data-throw-if-not-resolved="false"></xref> at the given index has been visible.
    content.vb: Function VisibleTime(index As Integer) As Single
  overload: TMPEffects.Components.Animator.IAnimatorContext.VisibleTime*
  nameWithType.vb: IAnimatorContext.VisibleTime(Integer)
  fullName.vb: TMPEffects.Components.Animator.IAnimatorContext.VisibleTime(Integer)
  name.vb: VisibleTime(Integer)
references:
- uid: TMPEffects.Components.TMPAnimator
  commentId: T:TMPEffects.Components.TMPAnimator
  parent: TMPEffects.Components
  href: TMPEffects.Components.TMPAnimator.html
  name: TMPAnimator
  nameWithType: TMPAnimator
  fullName: TMPEffects.Components.TMPAnimator
- uid: TMPEffects.Components.Animator
  commentId: N:TMPEffects.Components.Animator
  href: TMPEffects.html
  name: TMPEffects.Components.Animator
  nameWithType: TMPEffects.Components.Animator
  fullName: TMPEffects.Components.Animator
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Components
    name: Components
    href: TMPEffects.Components.html
  - name: .
  - uid: TMPEffects.Components.Animator
    name: Animator
    href: TMPEffects.Components.Animator.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Components
    name: Components
    href: TMPEffects.Components.html
  - name: .
  - uid: TMPEffects.Components.Animator
    name: Animator
    href: TMPEffects.Components.Animator.html
- uid: TMPEffects.Components
  commentId: N:TMPEffects.Components
  href: TMPEffects.html
  name: TMPEffects.Components
  nameWithType: TMPEffects.Components
  fullName: TMPEffects.Components
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Components
    name: Components
    href: TMPEffects.Components.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.Components
    name: Components
    href: TMPEffects.Components.html
- uid: TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations*
  commentId: Overload:TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations
  href: TMPEffects.Components.Animator.IAnimatorContext.html#TMPEffects_Components_Animator_IAnimatorContext_ScaleAnimations
  name: ScaleAnimations
  nameWithType: IAnimatorContext.ScaleAnimations
  fullName: TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations
  commentId: P:TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations
  parent: TMPEffects.Components.Animator.IAnimatorContext
  href: TMPEffects.Components.Animator.IAnimatorContext.html#TMPEffects_Components_Animator_IAnimatorContext_ScaleAnimations
  name: ScaleAnimations
  nameWithType: IAnimatorContext.ScaleAnimations
  fullName: TMPEffects.Components.Animator.IAnimatorContext.ScaleAnimations
- uid: TMPEffects.Components.Animator.IAnimatorContext.ScaleUniformly*
  commentId: Overload:TMPEffects.Components.Animator.IAnimatorContext.ScaleUniformly
  href: TMPEffects.Components.Animator.IAnimatorContext.html#TMPEffects_Components_Animator_IAnimatorContext_ScaleUniformly
  name: ScaleUniformly
  nameWithType: IAnimatorContext.ScaleUniformly
  fullName: TMPEffects.Components.Animator.IAnimatorContext.ScaleUniformly
- uid: TMPEffects.Components.Animator.IAnimatorContext
  commentId: T:TMPEffects.Components.Animator.IAnimatorContext
  parent: TMPEffects.Components.Animator
  href: TMPEffects.Components.Animator.IAnimatorContext.html
  name: IAnimatorContext
  nameWithType: IAnimatorContext
  fullName: TMPEffects.Components.Animator.IAnimatorContext
- uid: TMPEffects.Components.Animator.IAnimatorContext.Animator*
  commentId: Overload:TMPEffects.Components.Animator.IAnimatorContext.Animator
  href: TMPEffects.Components.Animator.IAnimatorContext.html#TMPEffects_Components_Animator_IAnimatorContext_Animator
  name: Animator
  nameWithType: IAnimatorContext.Animator
  fullName: TMPEffects.Components.Animator.IAnimatorContext.Animator
- uid: TMPEffects.Components.Animator.IAnimatorContext.UseScaledTime*
  commentId: Overload:TMPEffects.Components.Animator.IAnimatorContext.UseScaledTime
  href: TMPEffects.Components.Animator.IAnimatorContext.html#TMPEffects_Components_Animator_IAnimatorContext_UseScaledTime
  name: UseScaledTime
  nameWithType: IAnimatorContext.UseScaledTime
  fullName: TMPEffects.Components.Animator.IAnimatorContext.UseScaledTime
- uid: TMPEffects.Components.Animator.IAnimatorContext.DeltaTime*
  commentId: Overload:TMPEffects.Components.Animator.IAnimatorContext.DeltaTime
  href: TMPEffects.Components.Animator.IAnimatorContext.html#TMPEffects_Components_Animator_IAnimatorContext_DeltaTime
  name: DeltaTime
  nameWithType: IAnimatorContext.DeltaTime
  fullName: TMPEffects.Components.Animator.IAnimatorContext.DeltaTime
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: TMPEffects.Components.Animator.IAnimatorContext.PassedTime*
  commentId: Overload:TMPEffects.Components.Animator.IAnimatorContext.PassedTime
  href: TMPEffects.Components.Animator.IAnimatorContext.html#TMPEffects_Components_Animator_IAnimatorContext_PassedTime
  name: PassedTime
  nameWithType: IAnimatorContext.PassedTime
  fullName: TMPEffects.Components.Animator.IAnimatorContext.PassedTime
- uid: TMPEffects.CharacterData.CharData
  commentId: T:TMPEffects.CharacterData.CharData
  parent: TMPEffects.CharacterData
  href: TMPEffects.CharacterData.CharData.html
  name: CharData
  nameWithType: CharData
  fullName: TMPEffects.CharacterData.CharData
- uid: TMPEffects.CharacterData.VisibilityState
  commentId: T:TMPEffects.CharacterData.VisibilityState
  parent: TMPEffects.CharacterData
  href: TMPEffects.CharacterData.VisibilityState.html
  name: VisibilityState
  nameWithType: VisibilityState
  fullName: TMPEffects.CharacterData.VisibilityState
- uid: TMPEffects.Components.Animator.IAnimatorContext.StateTime*
  commentId: Overload:TMPEffects.Components.Animator.IAnimatorContext.StateTime
  href: TMPEffects.Components.Animator.IAnimatorContext.html#TMPEffects_Components_Animator_IAnimatorContext_StateTime_TMPEffects_CharacterData_CharData_
  name: StateTime
  nameWithType: IAnimatorContext.StateTime
  fullName: TMPEffects.Components.Animator.IAnimatorContext.StateTime
- uid: TMPEffects.CharacterData
  commentId: N:TMPEffects.CharacterData
  href: TMPEffects.html
  name: TMPEffects.CharacterData
  nameWithType: TMPEffects.CharacterData
  fullName: TMPEffects.CharacterData
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.CharacterData
    name: CharacterData
    href: TMPEffects.CharacterData.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.CharacterData
    name: CharacterData
    href: TMPEffects.CharacterData.html
- uid: TMPEffects.Components.Animator.IAnimatorContext.VisibleTime*
  commentId: Overload:TMPEffects.Components.Animator.IAnimatorContext.VisibleTime
  href: TMPEffects.Components.Animator.IAnimatorContext.html#TMPEffects_Components_Animator_IAnimatorContext_VisibleTime_TMPEffects_CharacterData_CharData_
  name: VisibleTime
  nameWithType: IAnimatorContext.VisibleTime
  fullName: TMPEffects.Components.Animator.IAnimatorContext.VisibleTime
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
