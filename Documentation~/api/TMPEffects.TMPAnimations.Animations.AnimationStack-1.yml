### YamlMime:ManagedReference
items:
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1
  commentId: T:TMPEffects.TMPAnimations.Animations.AnimationStack`1
  id: AnimationStack`1
  parent: TMPEffects.TMPAnimations.Animations
  children:
  - TMPEffects.TMPAnimations.Animations.AnimationStack`1.Animate(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.Animations.AnimationStack`1.GetNewCustomData
  - TMPEffects.TMPAnimations.Animations.AnimationStack`1.PopulateContextCache(TMPEffects.TMPAnimations.Animations.AnimationStack{`0}.Data,TMPEffects.TMPAnimations.IAnimationContext)
  - TMPEffects.TMPAnimations.Animations.AnimationStack`1.SetParameters(System.Object,System.Collections.Generic.IDictionary{System.String,System.String})
  - TMPEffects.TMPAnimations.Animations.AnimationStack`1.ValidateParameters(System.Collections.Generic.IDictionary{System.String,System.String})
  - TMPEffects.TMPAnimations.Animations.AnimationStack`1.animations
  langs:
  - csharp
  - vb
  name: AnimationStack<T>
  nameWithType: AnimationStack<T>
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>
  type: Class
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: AnimationStack
    path: ../Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
    startLine: 88
  namespace: TMPEffects.TMPAnimations.Animations
  syntax:
    content: >-
      [Serializable]

      public class AnimationStack<T> : ITMPAnimation where T : ITMPAnimation
    typeParameters:
    - id: T
    content.vb: >-
      <Serializable>

      Public Class AnimationStack(Of T As ITMPAnimation) Implements ITMPAnimation
  inheritance:
  - System.Object
  derivedClasses:
  - TMPEffects.TMPAnimations.Animations.BasicAnimationStack
  - TMPEffects.TMPAnimations.Animations.HideAnimationStack
  - TMPEffects.TMPAnimations.Animations.ShowAnimationStack
  implements:
  - TMPEffects.TMPAnimations.ITMPAnimation
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: AnimationStack(Of T)
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T)
  name.vb: AnimationStack(Of T)
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.animations
  commentId: F:TMPEffects.TMPAnimations.Animations.AnimationStack`1.animations
  id: animations
  parent: TMPEffects.TMPAnimations.Animations.AnimationStack`1
  langs:
  - csharp
  - vb
  name: animations
  nameWithType: AnimationStack<T>.animations
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.animations
  type: Field
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: animations
    path: ../Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
    startLine: 91
  namespace: TMPEffects.TMPAnimations.Animations
  syntax:
    content: protected List<AnimationStack<T>.AnimPrefixTuple> animations
    return:
      type: System.Collections.Generic.List{TMPEffects.TMPAnimations.Animations.AnimationStack`1.AnimPrefixTuple}
    content.vb: Protected animations As List(Of AnimationStack(Of T).AnimPrefixTuple)
  nameWithType.vb: AnimationStack(Of T).animations
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).animations
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.Animate(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.Animations.AnimationStack`1.Animate(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  id: Animate(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.Animations.AnimationStack`1
  langs:
  - csharp
  - vb
  name: Animate(CharData, IAnimationContext)
  nameWithType: AnimationStack<T>.Animate(CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.Animate(TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: Animate
    path: ../Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
    startLine: 94
  namespace: TMPEffects.TMPAnimations.Animations
  summary: Animate the given character.
  example: []
  syntax:
    content: public virtual void Animate(CharData cData, IAnimationContext context)
    parameters:
    - id: cData
      type: TMPEffects.CharacterData.CharData
      description: Data about the character.
    - id: context
      type: TMPEffects.TMPAnimations.IAnimationContext
      description: Data about the animator.
    content.vb: Public Overridable Sub Animate(cData As CharData, context As IAnimationContext)
  overload: TMPEffects.TMPAnimations.Animations.AnimationStack`1.Animate*
  implements:
  - TMPEffects.TMPAnimations.ITMPAnimation.Animate(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  nameWithType.vb: AnimationStack(Of T).Animate(CharData, IAnimationContext)
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).Animate(TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.PopulateContextCache(TMPEffects.TMPAnimations.Animations.AnimationStack{`0}.Data,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.Animations.AnimationStack`1.PopulateContextCache(TMPEffects.TMPAnimations.Animations.AnimationStack{`0}.Data,TMPEffects.TMPAnimations.IAnimationContext)
  id: PopulateContextCache(TMPEffects.TMPAnimations.Animations.AnimationStack{`0}.Data,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.Animations.AnimationStack`1
  langs:
  - csharp
  - vb
  name: PopulateContextCache(Data, IAnimationContext)
  nameWithType: AnimationStack<T>.PopulateContextCache(AnimationStack<T>.Data, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.PopulateContextCache(TMPEffects.TMPAnimations.Animations.AnimationStack<T>.Data, TMPEffects.TMPAnimations.IAnimationContext)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: PopulateContextCache
    path: ../Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
    startLine: 106
  namespace: TMPEffects.TMPAnimations.Animations
  syntax:
    content: protected void PopulateContextCache(AnimationStack<T>.Data data, IAnimationContext context)
    parameters:
    - id: data
      type: TMPEffects.TMPAnimations.Animations.AnimationStack`1.Data
    - id: context
      type: TMPEffects.TMPAnimations.IAnimationContext
    content.vb: Protected Sub PopulateContextCache(data As AnimationStack(Of T).Data, context As IAnimationContext)
  overload: TMPEffects.TMPAnimations.Animations.AnimationStack`1.PopulateContextCache*
  nameWithType.vb: AnimationStack(Of T).PopulateContextCache(AnimationStack(Of T).Data, IAnimationContext)
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).PopulateContextCache(TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).Data, TMPEffects.TMPAnimations.IAnimationContext)
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.GetNewCustomData
  commentId: M:TMPEffects.TMPAnimations.Animations.AnimationStack`1.GetNewCustomData
  id: GetNewCustomData
  parent: TMPEffects.TMPAnimations.Animations.AnimationStack`1
  langs:
  - csharp
  - vb
  name: GetNewCustomData()
  nameWithType: AnimationStack<T>.GetNewCustomData()
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.GetNewCustomData()
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: GetNewCustomData
    path: ../Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
    startLine: 121
  namespace: TMPEffects.TMPAnimations.Animations
  summary: Create and get a new custom data object for this animation.
  example: []
  syntax:
    content: public object GetNewCustomData()
    return:
      type: System.Object
      description: The custom data object for this animation.
    content.vb: Public Function GetNewCustomData() As Object
  overload: TMPEffects.TMPAnimations.Animations.AnimationStack`1.GetNewCustomData*
  implements:
  - TMPEffects.TMPAnimations.ITMPAnimation.GetNewCustomData
  nameWithType.vb: AnimationStack(Of T).GetNewCustomData()
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).GetNewCustomData()
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.SetParameters(System.Object,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:TMPEffects.TMPAnimations.Animations.AnimationStack`1.SetParameters(System.Object,System.Collections.Generic.IDictionary{System.String,System.String})
  id: SetParameters(System.Object,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: TMPEffects.TMPAnimations.Animations.AnimationStack`1
  langs:
  - csharp
  - vb
  name: SetParameters(object, IDictionary<string, string>)
  nameWithType: AnimationStack<T>.SetParameters(object, IDictionary<string, string>)
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.SetParameters(object, System.Collections.Generic.IDictionary<string, string>)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: SetParameters
    path: ../Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
    startLine: 134
  namespace: TMPEffects.TMPAnimations.Animations
  summary: Set the parameters for the animation.
  example: []
  syntax:
    content: public void SetParameters(object customData, IDictionary<string, string> parameters)
    parameters:
    - id: customData
      type: System.Object
      description: The custom data for this animation.
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: Parameters as key-value-pairs.
    content.vb: Public Sub SetParameters(customData As Object, parameters As IDictionary(Of String, String))
  overload: TMPEffects.TMPAnimations.Animations.AnimationStack`1.SetParameters*
  implements:
  - TMPEffects.TMPAnimations.ITMPAnimation.SetParameters(System.Object,System.Collections.Generic.IDictionary{System.String,System.String})
  nameWithType.vb: AnimationStack(Of T).SetParameters(Object, IDictionary(Of String, String))
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).SetParameters(Object, System.Collections.Generic.IDictionary(Of String, String))
  name.vb: SetParameters(Object, IDictionary(Of String, String))
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.ValidateParameters(System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:TMPEffects.TMPAnimations.Animations.AnimationStack`1.ValidateParameters(System.Collections.Generic.IDictionary{System.String,System.String})
  id: ValidateParameters(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: TMPEffects.TMPAnimations.Animations.AnimationStack`1
  langs:
  - csharp
  - vb
  name: ValidateParameters(IDictionary<string, string>)
  nameWithType: AnimationStack<T>.ValidateParameters(IDictionary<string, string>)
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.ValidateParameters(System.Collections.Generic.IDictionary<string, string>)
  type: Method
  source:
    remote:
      path: Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
      branch: docs-rework
      repo: https://github.com/Luca3317/TMPEffects
    id: ValidateParameters
    path: ../Package/Runtime/Effects/TMPAnimations/Stack/AnimationStack.cs
    startLine: 150
  namespace: TMPEffects.TMPAnimations.Animations
  summary: >-
    Validate the parameters.<br />

    Used to validate tags.
  example: []
  syntax:
    content: public bool ValidateParameters(IDictionary<string, string> parameters)
    parameters:
    - id: parameters
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: ''
    return:
      type: System.Boolean
      description: true if the parameters were successfully validated; false otherwise.
    content.vb: Public Function ValidateParameters(parameters As IDictionary(Of String, String)) As Boolean
  overload: TMPEffects.TMPAnimations.Animations.AnimationStack`1.ValidateParameters*
  implements:
  - TMPEffects.TMPAnimations.ITMPAnimation.ValidateParameters(System.Collections.Generic.IDictionary{System.String,System.String})
  nameWithType.vb: AnimationStack(Of T).ValidateParameters(IDictionary(Of String, String))
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).ValidateParameters(System.Collections.Generic.IDictionary(Of String, String))
  name.vb: ValidateParameters(IDictionary(Of String, String))
references:
- uid: TMPEffects.TMPAnimations.Animations
  commentId: N:TMPEffects.TMPAnimations.Animations
  href: TMPEffects.html
  name: TMPEffects.TMPAnimations.Animations
  nameWithType: TMPEffects.TMPAnimations.Animations
  fullName: TMPEffects.TMPAnimations.Animations
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
  - name: .
  - uid: TMPEffects.TMPAnimations.Animations
    name: Animations
    href: TMPEffects.TMPAnimations.Animations.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
  - name: .
  - uid: TMPEffects.TMPAnimations.Animations
    name: Animations
    href: TMPEffects.TMPAnimations.Animations.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: TMPEffects.TMPAnimations.ITMPAnimation
  commentId: T:TMPEffects.TMPAnimations.ITMPAnimation
  parent: TMPEffects.TMPAnimations
  href: TMPEffects.TMPAnimations.ITMPAnimation.html
  name: ITMPAnimation
  nameWithType: ITMPAnimation
  fullName: TMPEffects.TMPAnimations.ITMPAnimation
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TMPEffects.TMPAnimations
  commentId: N:TMPEffects.TMPAnimations
  href: TMPEffects.html
  name: TMPEffects.TMPAnimations
  nameWithType: TMPEffects.TMPAnimations
  fullName: TMPEffects.TMPAnimations
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.TMPAnimations
    name: TMPAnimations
    href: TMPEffects.TMPAnimations.html
- uid: System.Collections.Generic.List{TMPEffects.TMPAnimations.Animations.AnimationStack`1.AnimPrefixTuple}
  commentId: T:System.Collections.Generic.List{TMPEffects.TMPAnimations.Animations.AnimationStack`1.AnimPrefixTuple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AnimationStack<T>.AnimPrefixTuple>
  nameWithType: List<AnimationStack<T>.AnimPrefixTuple>
  fullName: System.Collections.Generic.List<TMPEffects.TMPAnimations.Animations.AnimationStack<T>.AnimPrefixTuple>
  nameWithType.vb: List(Of AnimationStack(Of T).AnimPrefixTuple)
  fullName.vb: System.Collections.Generic.List(Of TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).AnimPrefixTuple)
  name.vb: List(Of AnimationStack(Of T).AnimPrefixTuple)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1
    name: AnimationStack
    href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.AnimPrefixTuple
    name: AnimPrefixTuple
    href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.AnimPrefixTuple.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1
    name: AnimationStack
    href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.AnimPrefixTuple
    name: AnimPrefixTuple
    href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.AnimPrefixTuple.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.Animate*
  commentId: Overload:TMPEffects.TMPAnimations.Animations.AnimationStack`1.Animate
  href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.html#TMPEffects_TMPAnimations_Animations_AnimationStack_1_Animate_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: Animate
  nameWithType: AnimationStack<T>.Animate
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.Animate
  nameWithType.vb: AnimationStack(Of T).Animate
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).Animate
- uid: TMPEffects.TMPAnimations.ITMPAnimation.Animate(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  commentId: M:TMPEffects.TMPAnimations.ITMPAnimation.Animate(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
  parent: TMPEffects.TMPAnimations.ITMPAnimation
  href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_Animate_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  name: Animate(CharData, IAnimationContext)
  nameWithType: ITMPAnimation.Animate(CharData, IAnimationContext)
  fullName: TMPEffects.TMPAnimations.ITMPAnimation.Animate(TMPEffects.CharacterData.CharData, TMPEffects.TMPAnimations.IAnimationContext)
  spec.csharp:
  - uid: TMPEffects.TMPAnimations.ITMPAnimation.Animate(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
    name: Animate
    href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_Animate_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  - name: (
  - uid: TMPEffects.CharacterData.CharData
    name: CharData
    href: TMPEffects.CharacterData.CharData.html
  - name: ','
  - name: " "
  - uid: TMPEffects.TMPAnimations.IAnimationContext
    name: IAnimationContext
    href: TMPEffects.TMPAnimations.IAnimationContext.html
  - name: )
  spec.vb:
  - uid: TMPEffects.TMPAnimations.ITMPAnimation.Animate(TMPEffects.CharacterData.CharData,TMPEffects.TMPAnimations.IAnimationContext)
    name: Animate
    href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_Animate_TMPEffects_CharacterData_CharData_TMPEffects_TMPAnimations_IAnimationContext_
  - name: (
  - uid: TMPEffects.CharacterData.CharData
    name: CharData
    href: TMPEffects.CharacterData.CharData.html
  - name: ','
  - name: " "
  - uid: TMPEffects.TMPAnimations.IAnimationContext
    name: IAnimationContext
    href: TMPEffects.TMPAnimations.IAnimationContext.html
  - name: )
- uid: TMPEffects.CharacterData.CharData
  commentId: T:TMPEffects.CharacterData.CharData
  parent: TMPEffects.CharacterData
  href: TMPEffects.CharacterData.CharData.html
  name: CharData
  nameWithType: CharData
  fullName: TMPEffects.CharacterData.CharData
- uid: TMPEffects.TMPAnimations.IAnimationContext
  commentId: T:TMPEffects.TMPAnimations.IAnimationContext
  parent: TMPEffects.TMPAnimations
  href: TMPEffects.TMPAnimations.IAnimationContext.html
  name: IAnimationContext
  nameWithType: IAnimationContext
  fullName: TMPEffects.TMPAnimations.IAnimationContext
- uid: TMPEffects.CharacterData
  commentId: N:TMPEffects.CharacterData
  href: TMPEffects.html
  name: TMPEffects.CharacterData
  nameWithType: TMPEffects.CharacterData
  fullName: TMPEffects.CharacterData
  spec.csharp:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.CharacterData
    name: CharacterData
    href: TMPEffects.CharacterData.html
  spec.vb:
  - uid: TMPEffects
    name: TMPEffects
    href: TMPEffects.html
  - name: .
  - uid: TMPEffects.CharacterData
    name: CharacterData
    href: TMPEffects.CharacterData.html
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.PopulateContextCache*
  commentId: Overload:TMPEffects.TMPAnimations.Animations.AnimationStack`1.PopulateContextCache
  href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.html#TMPEffects_TMPAnimations_Animations_AnimationStack_1_PopulateContextCache_TMPEffects_TMPAnimations_Animations_AnimationStack__0__Data_TMPEffects_TMPAnimations_IAnimationContext_
  name: PopulateContextCache
  nameWithType: AnimationStack<T>.PopulateContextCache
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.PopulateContextCache
  nameWithType.vb: AnimationStack(Of T).PopulateContextCache
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).PopulateContextCache
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.Data
  commentId: T:TMPEffects.TMPAnimations.Animations.AnimationStack`1.Data
  parent: TMPEffects.TMPAnimations.Animations
  href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.html
  name: AnimationStack<T>.Data
  nameWithType: AnimationStack<T>.Data
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.Data
  nameWithType.vb: AnimationStack(Of T).Data
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).Data
  name.vb: AnimationStack(Of T).Data
  spec.csharp:
  - uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1
    name: AnimationStack
    href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.Data
    name: Data
    href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.Data.html
  spec.vb:
  - uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1
    name: AnimationStack
    href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.Data
    name: Data
    href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.Data.html
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.GetNewCustomData*
  commentId: Overload:TMPEffects.TMPAnimations.Animations.AnimationStack`1.GetNewCustomData
  href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.html#TMPEffects_TMPAnimations_Animations_AnimationStack_1_GetNewCustomData
  name: GetNewCustomData
  nameWithType: AnimationStack<T>.GetNewCustomData
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.GetNewCustomData
  nameWithType.vb: AnimationStack(Of T).GetNewCustomData
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).GetNewCustomData
- uid: TMPEffects.TMPAnimations.ITMPAnimation.GetNewCustomData
  commentId: M:TMPEffects.TMPAnimations.ITMPAnimation.GetNewCustomData
  parent: TMPEffects.TMPAnimations.ITMPAnimation
  href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_GetNewCustomData
  name: GetNewCustomData()
  nameWithType: ITMPAnimation.GetNewCustomData()
  fullName: TMPEffects.TMPAnimations.ITMPAnimation.GetNewCustomData()
  spec.csharp:
  - uid: TMPEffects.TMPAnimations.ITMPAnimation.GetNewCustomData
    name: GetNewCustomData
    href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_GetNewCustomData
  - name: (
  - name: )
  spec.vb:
  - uid: TMPEffects.TMPAnimations.ITMPAnimation.GetNewCustomData
    name: GetNewCustomData
    href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_GetNewCustomData
  - name: (
  - name: )
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.SetParameters*
  commentId: Overload:TMPEffects.TMPAnimations.Animations.AnimationStack`1.SetParameters
  href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.html#TMPEffects_TMPAnimations_Animations_AnimationStack_1_SetParameters_System_Object_System_Collections_Generic_IDictionary_System_String_System_String__
  name: SetParameters
  nameWithType: AnimationStack<T>.SetParameters
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.SetParameters
  nameWithType.vb: AnimationStack(Of T).SetParameters
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).SetParameters
- uid: TMPEffects.TMPAnimations.ITMPAnimation.SetParameters(System.Object,System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:TMPEffects.TMPAnimations.ITMPAnimation.SetParameters(System.Object,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: TMPEffects.TMPAnimations.ITMPAnimation
  isExternal: true
  href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_SetParameters_System_Object_System_Collections_Generic_IDictionary_System_String_System_String__
  name: SetParameters(object, IDictionary<string, string>)
  nameWithType: ITMPAnimation.SetParameters(object, IDictionary<string, string>)
  fullName: TMPEffects.TMPAnimations.ITMPAnimation.SetParameters(object, System.Collections.Generic.IDictionary<string, string>)
  nameWithType.vb: ITMPAnimation.SetParameters(Object, IDictionary(Of String, String))
  fullName.vb: TMPEffects.TMPAnimations.ITMPAnimation.SetParameters(Object, System.Collections.Generic.IDictionary(Of String, String))
  name.vb: SetParameters(Object, IDictionary(Of String, String))
  spec.csharp:
  - uid: TMPEffects.TMPAnimations.ITMPAnimation.SetParameters(System.Object,System.Collections.Generic.IDictionary{System.String,System.String})
    name: SetParameters
    href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_SetParameters_System_Object_System_Collections_Generic_IDictionary_System_String_System_String__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: TMPEffects.TMPAnimations.ITMPAnimation.SetParameters(System.Object,System.Collections.Generic.IDictionary{System.String,System.String})
    name: SetParameters
    href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_SetParameters_System_Object_System_Collections_Generic_IDictionary_System_String_System_String__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, string>
  nameWithType: IDictionary<string, string>
  fullName: System.Collections.Generic.IDictionary<string, string>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: TMPEffects.TMPAnimations.Animations.AnimationStack`1.ValidateParameters*
  commentId: Overload:TMPEffects.TMPAnimations.Animations.AnimationStack`1.ValidateParameters
  href: TMPEffects.TMPAnimations.Animations.AnimationStack-1.html#TMPEffects_TMPAnimations_Animations_AnimationStack_1_ValidateParameters_System_Collections_Generic_IDictionary_System_String_System_String__
  name: ValidateParameters
  nameWithType: AnimationStack<T>.ValidateParameters
  fullName: TMPEffects.TMPAnimations.Animations.AnimationStack<T>.ValidateParameters
  nameWithType.vb: AnimationStack(Of T).ValidateParameters
  fullName.vb: TMPEffects.TMPAnimations.Animations.AnimationStack(Of T).ValidateParameters
- uid: TMPEffects.TMPAnimations.ITMPAnimation.ValidateParameters(System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:TMPEffects.TMPAnimations.ITMPAnimation.ValidateParameters(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: TMPEffects.TMPAnimations.ITMPAnimation
  isExternal: true
  href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_ValidateParameters_System_Collections_Generic_IDictionary_System_String_System_String__
  name: ValidateParameters(IDictionary<string, string>)
  nameWithType: ITMPAnimation.ValidateParameters(IDictionary<string, string>)
  fullName: TMPEffects.TMPAnimations.ITMPAnimation.ValidateParameters(System.Collections.Generic.IDictionary<string, string>)
  nameWithType.vb: ITMPAnimation.ValidateParameters(IDictionary(Of String, String))
  fullName.vb: TMPEffects.TMPAnimations.ITMPAnimation.ValidateParameters(System.Collections.Generic.IDictionary(Of String, String))
  name.vb: ValidateParameters(IDictionary(Of String, String))
  spec.csharp:
  - uid: TMPEffects.TMPAnimations.ITMPAnimation.ValidateParameters(System.Collections.Generic.IDictionary{System.String,System.String})
    name: ValidateParameters
    href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_ValidateParameters_System_Collections_Generic_IDictionary_System_String_System_String__
  - name: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: TMPEffects.TMPAnimations.ITMPAnimation.ValidateParameters(System.Collections.Generic.IDictionary{System.String,System.String})
    name: ValidateParameters
    href: TMPEffects.TMPAnimations.ITMPAnimation.html#TMPEffects_TMPAnimations_ITMPAnimation_ValidateParameters_System_Collections_Generic_IDictionary_System_String_System_String__
  - name: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
